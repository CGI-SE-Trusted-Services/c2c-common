var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":213,"id":12318,"methods":[{"el":128,"sc":2,"sl":38},{"el":27,"sc":2,"sl":27},{"el":27,"sc":2,"sl":27},{"el":28,"sc":2,"sl":28},{"el":28,"sc":2,"sl":28},{"el":29,"sc":2,"sl":29},{"el":29,"sc":2,"sl":29},{"el":30,"sc":2,"sl":30},{"el":30,"sc":2,"sl":30},{"el":31,"sc":2,"sl":31},{"el":31,"sc":2,"sl":31},{"el":32,"sc":2,"sl":32},{"el":32,"sc":2,"sl":32},{"el":33,"sc":2,"sl":33},{"el":33,"sc":2,"sl":33},{"el":34,"sc":2,"sl":34},{"el":34,"sc":2,"sl":34},{"el":35,"sc":2,"sl":35},{"el":35,"sc":2,"sl":35},{"el":36,"sc":2,"sl":36},{"el":36,"sc":2,"sl":36},{"el":151,"sc":2,"sl":130},{"el":164,"sc":2,"sl":153},{"el":171,"sc":2,"sl":166},{"el":190,"sc":2,"sl":175},{"el":205,"sc":2,"sl":193},{"el":210,"sc":2,"sl":207}],"name":"COERSequenceSpec","sl":24}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1006":{"methods":[{"sl":29},{"sl":153}],"name":"Verify that set and get and size returns the correct values","pass":true,"statements":[{"sl":155},{"sl":156},{"sl":157},{"sl":159},{"sl":161},{"sl":163}]},"test_119":{"methods":[{"sl":130}],"name":"Verify that COERSequence is encoded and is decoded back to the same values and that preample is correct.[0]","pass":true,"statements":[{"sl":133},{"sl":136},{"sl":138},{"sl":139},{"sl":140},{"sl":141}]},"test_400":{"methods":[{"sl":31},{"sl":207}],"name":"Verify toString","pass":true,"statements":[{"sl":209}]},"test_427":{"methods":[{"sl":130}],"name":"Verify that COERSequence is encoded and is decoded back to the same values and that preample is correct.[4]","pass":true,"statements":[{"sl":133},{"sl":136},{"sl":138},{"sl":139},{"sl":140},{"sl":141}]},"test_506":{"methods":[{"sl":29},{"sl":31},{"sl":193}],"name":"Verify equals and hashcode","pass":true,"statements":[{"sl":195},{"sl":196},{"sl":197},{"sl":198},{"sl":201},{"sl":202},{"sl":203},{"sl":204}]},"test_517":{"methods":[{"sl":130}],"name":"Verify that COERSequence is encoded and is decoded back to the same values and that preample is correct.[2]","pass":true,"statements":[{"sl":133},{"sl":136},{"sl":138},{"sl":139},{"sl":140},{"sl":141}]},"test_631":{"methods":[{"sl":130}],"name":"Verify that COERSequence is encoded and is decoded back to the same values and that preample is correct.[1]","pass":true,"statements":[{"sl":133},{"sl":136},{"sl":138},{"sl":139},{"sl":140},{"sl":141}]},"test_770":{"methods":[{"sl":175}],"name":"Verify that default value is returned if optional is set and exists","pass":true,"statements":[{"sl":177},{"sl":178},{"sl":180},{"sl":182},{"sl":184},{"sl":186},{"sl":187},{"sl":189}]},"test_830":{"methods":[{"sl":27},{"sl":166}],"name":"Verify that set throws IllegalArgumentException if required field value is null","pass":true,"statements":[{"sl":168},{"sl":170}]},"test_875":{"methods":[{"sl":130}],"name":"Verify that COERSequence is encoded and is decoded back to the same values and that preample is correct.[3]","pass":true,"statements":[{"sl":133},{"sl":136},{"sl":138},{"sl":139},{"sl":140},{"sl":141}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [830], [], [1006, 506], [], [400, 506], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [119, 875, 631, 517, 427], [], [], [119, 875, 631, 517, 427], [], [], [119, 875, 631, 517, 427], [], [119, 875, 631, 517, 427], [119, 875, 631, 517, 427], [119, 875, 631, 517, 427], [119, 875, 631, 517, 427], [], [], [], [], [], [], [], [], [], [], [], [1006], [], [1006], [1006], [1006], [], [1006], [], [1006], [], [1006], [], [], [830], [], [830], [], [830], [], [], [], [], [770], [], [770], [770], [], [770], [], [770], [], [770], [], [770], [770], [], [770], [], [], [], [506], [], [506], [506], [506], [506], [], [], [506], [506], [506], [506], [], [], [400], [], [400], [], [], [], []]
