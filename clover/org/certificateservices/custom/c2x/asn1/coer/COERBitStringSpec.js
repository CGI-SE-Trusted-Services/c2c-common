var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":165,"id":12231,"methods":[{"el":60,"sc":2,"sl":27},{"el":98,"sc":2,"sl":63},{"el":106,"sc":2,"sl":101},{"el":117,"sc":2,"sl":109},{"el":133,"sc":2,"sl":119},{"el":138,"sc":2,"sl":135},{"el":162,"sc":2,"sl":140}],"name":"COERBitStringSpec","sl":23}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_121":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 40 returns 000000a0 encoded and decoded 000000a0 generates a 40 value with length 30 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_124":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 1 for value 255","pass":true,"statements":[{"sl":143}]},"test_129":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 0 returns 00 encoded and decoded 00 generates a 0 value with length 8 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_169":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 1 returns 04 encoded and decoded 04 generates a 1 value with length 6 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_20":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 0 for value 0","pass":true,"statements":[{"sl":143}]},"test_215":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 8 for value 72057594037927936","pass":true,"statements":[{"sl":143}]},"test_229":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 16650241 returns 00fe1001 encoded and decoded 00fe1001 generates a 16650241 value with length 32 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_260":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 1 returns 020001 encoded and decoded 020001 generates a 1 value with length 8 and fixed size :false","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_277":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 4097 returns 1001 encoded and decoded 1001 generates a 4097 value with length 16 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_301":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 1 returns 10 encoded and decoded 10 generates a 1 value with length 4 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_317":{"methods":[{"sl":109}],"name":"Verify that constuctor and getter","pass":true,"statements":[{"sl":111},{"sl":112},{"sl":113},{"sl":114},{"sl":115},{"sl":116}]},"test_32":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 6 for value 1099511627776","pass":true,"statements":[{"sl":143}]},"test_355":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 255 returns ff encoded and decoded ff generates a 255 value with length 8 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_373":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 5 for value 1099511627775","pass":true,"statements":[{"sl":143}]},"test_385":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 71512240582168577 returns 00fe100100fe1001 encoded and decoded 00fe100100fe1001 generates a 71512240582168577 value with length 64 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_432":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 0 returns 0100 encoded and decoded 0100 generates a 0 value with length 8 and fixed size :false","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_437":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 1 returns 020204 encoded and decoded 020204 generates a 1 value with length 6 and fixed size :false","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_446":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 5 for value 4294967296","pass":true,"statements":[{"sl":143}]},"test_455":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 16650241 returns 0000000000fe1001 encoded and decoded 0000000000fe1001 generates a 16650241 value with length 64 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_495":{"methods":[{"sl":135}],"name":"Verify toString","pass":true,"statements":[{"sl":137}]},"test_516":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 3 for value 65536","pass":true,"statements":[{"sl":143}]},"test_54":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 16650241 returns fe1001 encoded and decoded fe1001 generates a 16650241 value with length 24 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_574":{"methods":[{"sl":119}],"name":"Verify equals and hashcode","pass":true,"statements":[{"sl":121},{"sl":122},{"sl":123},{"sl":124},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":132}]},"test_584":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 6 for value 281474976710655","pass":true,"statements":[{"sl":143}]},"test_63":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 10 returns 0a encoded and decoded 0a generates a 10 value with length 8 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_648":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 2 for value 65535","pass":true,"statements":[{"sl":143}]},"test_684":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 7 for value 281474976710656","pass":true,"statements":[{"sl":143}]},"test_696":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 2 for value 256","pass":true,"statements":[{"sl":143}]},"test_7":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 71512240582168577 returns 090000fe100100fe1001 encoded and decoded 090000fe100100fe1001 generates a 71512240582168577 value with length 64 and fixed size :false","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_785":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 40 returns 0502000000a0 encoded and decoded 0502000000a0 generates a 40 value with length 30 and fixed size :false","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_797":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 3 for value 16777215","pass":true,"statements":[{"sl":143}]},"test_814":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 1 for value 1","pass":true,"statements":[{"sl":143}]},"test_817":{"methods":[{"sl":27}],"name":"Verify that COERBitString with value 0 returns 00 encoded and decoded 00 generates a 0 value with length 6 and fixed size :true","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":36},{"sl":37},{"sl":39}]},"test_82":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 7 for value 72057594037927935","pass":true,"statements":[{"sl":143}]},"test_895":{"methods":[{"sl":63}],"name":"Verify that getFlag and setFlag sets correct bits","pass":true,"statements":[{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":77},{"sl":78},{"sl":79},{"sl":80},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":87},{"sl":88},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":94},{"sl":95},{"sl":96},{"sl":97}]},"test_925":{"methods":[{"sl":101}],"name":"Verify that length larger that 64  in constructor throws a IllegalArgumentException","pass":true,"statements":[{"sl":103},{"sl":105}]},"test_954":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 4 for value 4294967295","pass":true,"statements":[{"sl":143}]},"test_955":{"methods":[{"sl":140}],"name":"Verify getMiminalOctetsForFixedSize returns the correct minimal number of octets 4 for value 16777216","pass":true,"statements":[{"sl":143}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [7, 432, 817, 129, 301, 54, 785, 169, 229, 437, 63, 455, 121, 355, 260, 277, 385], [], [], [7, 432, 817, 129, 301, 54, 785, 169, 229, 437, 63, 455, 121, 355, 260, 277, 385], [], [7, 432, 817, 129, 301, 54, 785, 169, 229, 437, 63, 455, 121, 355, 260, 277, 385], [], [], [7, 432, 817, 129, 301, 54, 785, 169, 229, 437, 63, 455, 121, 355, 260, 277, 385], [7, 432, 817, 129, 301, 54, 785, 169, 229, 437, 63, 455, 121, 355, 260, 277, 385], [7, 432, 817, 129, 301, 54, 785, 169, 229, 437, 63, 455, 121, 355, 260, 277, 385], [], [7, 432, 817, 129, 301, 54, 785, 169, 229, 437, 63, 455, 121, 355, 260, 277, 385], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [895], [], [], [895], [895], [895], [895], [], [895], [895], [895], [895], [], [], [895], [895], [895], [895], [], [895], [895], [895], [895], [], [895], [895], [895], [895], [895], [], [895], [895], [895], [895], [895], [], [], [], [925], [], [925], [], [925], [], [], [], [317], [], [317], [317], [317], [317], [317], [317], [], [], [574], [], [574], [574], [574], [574], [], [], [574], [574], [574], [574], [574], [574], [], [], [495], [], [495], [], [], [82, 684, 955, 814, 32, 696, 954, 20, 648, 124, 373, 446, 797, 215, 516, 584], [], [], [82, 684, 955, 814, 32, 696, 954, 20, 648, 124, 373, 446, 797, 215, 516, 584], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
