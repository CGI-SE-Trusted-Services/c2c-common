var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":91,"id":14521,"methods":[{"el":48,"sc":2,"sl":27},{"el":59,"sc":2,"sl":51},{"el":70,"sc":2,"sl":61},{"el":83,"sc":2,"sl":72},{"el":88,"sc":2,"sl":85}],"name":"COEROctetStreamSpec","sl":23}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_131":{"methods":[{"sl":27}],"name":"Verify that COEROctedStream with value #Error:value returns 00 encoded and decoded 00 generates a #Error:value value with lower bound 1 and upper bound 1","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":37}]},"test_337":{"methods":[{"sl":27}],"name":"Verify that COEROctedStream with value #Error:value returns 060df3acf45678 encoded and decoded 060df3acf45678 generates a #Error:value value with lower bound 5 and upper bound null","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":37}]},"test_342":{"methods":[{"sl":51}],"name":"Verify that constuctor and getter","pass":true,"statements":[{"sl":53},{"sl":54},{"sl":55},{"sl":56},{"sl":57},{"sl":58}]},"test_408":{"methods":[{"sl":27}],"name":"Verify that COEROctedStream with value #Error:value returns 060df3acf45678 encoded and decoded 060df3acf45678 generates a #Error:value value with lower bound 5 and upper bound 6","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":37}]},"test_500":{"methods":[{"sl":27}],"name":"Verify that COEROctedStream with value #Error:value returns 060df3acf45678 encoded and decoded 060df3acf45678 generates a #Error:value value with lower bound 6 and upper bound 7","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":37}]},"test_529":{"methods":[{"sl":85}],"name":"Verify toString","pass":true,"statements":[{"sl":87}]},"test_538":{"methods":[{"sl":61}],"name":"Verify that constuctor throws IllegalArgumentException if data is out of bounds","pass":true,"statements":[{"sl":63},{"sl":65},{"sl":67},{"sl":69}]},"test_560":{"methods":[{"sl":27}],"name":"Verify that COEROctedStream with value #Error:value returns 0df3acf45678 encoded and decoded 0df3acf45678 generates a #Error:value value with lower bound 6 and upper bound 6","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":37}]},"test_564":{"methods":[{"sl":72}],"name":"Verify equals and hashcode","pass":true,"statements":[{"sl":74},{"sl":75},{"sl":76},{"sl":79},{"sl":80},{"sl":81},{"sl":82}]},"test_750":{"methods":[{"sl":27}],"name":"Verify that COEROctedStream with value #Error:value returns 060df3acf45678 encoded and decoded 060df3acf45678 generates a #Error:value value with lower bound null and upper bound null","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":37}]},"test_821":{"methods":[{"sl":27}],"name":"Verify that COEROctedStream with value #Error:value returns 060df3acf45678 encoded and decoded 060df3acf45678 generates a #Error:value value with lower bound null and upper bound 7","pass":true,"statements":[{"sl":30},{"sl":32},{"sl":35},{"sl":37}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
