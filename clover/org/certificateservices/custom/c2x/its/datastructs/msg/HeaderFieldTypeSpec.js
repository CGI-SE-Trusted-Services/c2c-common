var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":80,"id":11750,"methods":[{"el":56,"sc":2,"sl":31},{"el":78,"sc":2,"sl":60}],"name":"HeaderFieldTypeSpec","sl":29}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_108":{"methods":[{"sl":60}],"name":"Verify that HeaderFieldType.getByValue returns recipient_info for #Error:bytevalue","pass":true,"statements":[{"sl":63},{"sl":64}]},"test_125":{"methods":[{"sl":60}],"name":"Verify that HeaderFieldType.getByValue returns its_aid for #Error:bytevalue","pass":true,"statements":[{"sl":63},{"sl":64}]},"test_223":{"methods":[{"sl":60}],"name":"Verify that HeaderFieldType.getByValue returns signer_info for #Error:bytevalue","pass":true,"statements":[{"sl":63},{"sl":64}]},"test_389":{"methods":[{"sl":31}],"name":"Verify that generation_time_confidence has bytevalue #Error:bytevalue","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":36},{"sl":37},{"sl":38}]},"test_466":{"methods":[{"sl":31}],"name":"Verify that generation_location has bytevalue #Error:bytevalue","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":36},{"sl":37},{"sl":38}]},"test_488":{"methods":[{"sl":31}],"name":"Verify that generation_time has bytevalue #Error:bytevalue","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":36},{"sl":37},{"sl":38}]},"test_51":{"methods":[{"sl":60}],"name":"Verify that HeaderFieldType.getByValue returns expiration for #Error:bytevalue","pass":true,"statements":[{"sl":63},{"sl":64}]},"test_640":{"methods":[{"sl":60}],"name":"Verify that HeaderFieldType.getByValue returns message_type for #Error:bytevalue","pass":true,"statements":[{"sl":63},{"sl":64}]},"test_642":{"methods":[{"sl":31}],"name":"Verify that recipient_info has bytevalue #Error:bytevalue","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":36},{"sl":37},{"sl":38}]},"test_672":{"methods":[{"sl":60}],"name":"Verify that HeaderFieldType.getByValue returns generation_time_confidence for #Error:bytevalue","pass":true,"statements":[{"sl":63},{"sl":64}]},"test_705":{"methods":[{"sl":60}],"name":"Verify that HeaderFieldType.getByValue returns generation_time for #Error:bytevalue","pass":true,"statements":[{"sl":63},{"sl":64}]},"test_722":{"methods":[{"sl":31}],"name":"Verify that request_unrecognized_certificate has bytevalue #Error:bytevalue","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":36},{"sl":37},{"sl":38}]},"test_835":{"methods":[{"sl":31}],"name":"Verify that expiration has bytevalue #Error:bytevalue","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":36},{"sl":37},{"sl":38}]},"test_839":{"methods":[{"sl":60}],"name":"Verify that HeaderFieldType.getByValue returns generation_location for #Error:bytevalue","pass":true,"statements":[{"sl":63},{"sl":64}]},"test_84":{"methods":[{"sl":31}],"name":"Verify that signer_info has bytevalue #Error:bytevalue","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":36},{"sl":40},{"sl":41}]},"test_845":{"methods":[{"sl":60}],"name":"Verify that HeaderFieldType.getByValue returns request_unrecognized_certificate for #Error:bytevalue","pass":true,"statements":[{"sl":63},{"sl":64}]},"test_847":{"methods":[{"sl":31}],"name":"Verify that its_aid has bytevalue #Error:bytevalue","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":36},{"sl":37},{"sl":38}]},"test_861":{"methods":[{"sl":31}],"name":"Verify that encryption_parameters has bytevalue #Error:bytevalue","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":36},{"sl":37},{"sl":38}]},"test_890":{"methods":[{"sl":31}],"name":"Verify that message_type has bytevalue #Error:bytevalue","pass":true,"statements":[{"sl":34},{"sl":35},{"sl":36},{"sl":37},{"sl":38}]},"test_952":{"methods":[{"sl":60}],"name":"Verify that HeaderFieldType.getByValue returns encryption_parameters for #Error:bytevalue","pass":true,"statements":[{"sl":63},{"sl":64}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [847, 722, 488, 466, 861, 835, 642, 890, 84, 389], [], [], [847, 722, 488, 466, 861, 835, 642, 890, 84, 389], [847, 722, 488, 466, 861, 835, 642, 890, 84, 389], [847, 722, 488, 466, 861, 835, 642, 890, 84, 389], [847, 722, 488, 466, 861, 835, 642, 890, 389], [847, 722, 488, 466, 861, 835, 642, 890, 389], [], [84], [84], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [640, 51, 223, 125, 672, 705, 839, 845, 952, 108], [], [], [640, 51, 223, 125, 672, 705, 839, 845, 952, 108], [640, 51, 223, 125, 672, 705, 839, 845, 952, 108], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]
