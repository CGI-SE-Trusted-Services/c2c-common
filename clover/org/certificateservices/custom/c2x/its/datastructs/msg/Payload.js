var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":114,"id":8233,"methods":[{"el":50,"sc":2,"sl":44},{"el":58,"sc":2,"sl":56},{"el":65,"sc":2,"sl":63},{"el":72,"sc":2,"sl":70},{"el":79,"sc":2,"sl":77},{"el":89,"sc":2,"sl":81},{"el":101,"sc":2,"sl":91},{"el":110,"sc":2,"sl":103}],"name":"Payload","sl":31}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1010":{"methods":[{"sl":44},{"sl":63},{"sl":70},{"sl":81}],"name":"Verify that multiple payload works for version 1 of secured DENM message","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":64},{"sl":71},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_137":{"methods":[{"sl":81}],"name":"Verify serialization","pass":true,"statements":[{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_15":{"methods":[{"sl":44},{"sl":56},{"sl":63},{"sl":81},{"sl":91}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":57},{"sl":64},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87},{"sl":93},{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98}]},"test_158":{"methods":[{"sl":44},{"sl":63},{"sl":70},{"sl":81}],"name":"Verify that multiple payload works for version 1 of secured CAM message","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":64},{"sl":71},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_208":{"methods":[{"sl":44}],"name":"Verify that addHeader adds the header value in correct order","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49}]},"test_234":{"methods":[{"sl":44},{"sl":63},{"sl":70}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":48},{"sl":49},{"sl":64},{"sl":71}]},"test_242":{"methods":[{"sl":44},{"sl":56},{"sl":63},{"sl":70},{"sl":77},{"sl":81},{"sl":91}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":57},{"sl":64},{"sl":71},{"sl":78},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87},{"sl":93},{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98}]},"test_259":{"methods":[{"sl":81}],"name":"Verify serialization","pass":true,"statements":[{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_281":{"methods":[{"sl":81}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_306":{"methods":[{"sl":44},{"sl":56},{"sl":63},{"sl":81},{"sl":91}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":57},{"sl":64},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87},{"sl":93},{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98}]},"test_363":{"methods":[{"sl":56},{"sl":91}],"name":"Verify deserialization","pass":true,"statements":[{"sl":57},{"sl":93},{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98}]},"test_457":{"methods":[{"sl":44},{"sl":63},{"sl":81}],"name":"Verify that version 2 Signed CAM Unrecognized Certificates Message  certificate, certificate_chain and certificate_digest_with_ecdsap256","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":64},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_545":{"methods":[{"sl":56},{"sl":91}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":57},{"sl":93},{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98}]},"test_579":{"methods":[{"sl":44},{"sl":63},{"sl":70},{"sl":81}],"name":"Generate version 2 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":64},{"sl":71},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_601":{"methods":[{"sl":44}],"name":"Verify that findHeader finds the correct header in a SecureMessage","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49}]},"test_670":{"methods":[{"sl":44},{"sl":63},{"sl":70},{"sl":81}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.[1]","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":64},{"sl":71},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_686":{"methods":[{"sl":44},{"sl":63},{"sl":70},{"sl":81}],"name":"Generate version 2 Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":64},{"sl":71},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_699":{"methods":[{"sl":44},{"sl":56},{"sl":63},{"sl":70},{"sl":77},{"sl":81},{"sl":91}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":57},{"sl":64},{"sl":71},{"sl":78},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87},{"sl":93},{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98}]},"test_769":{"methods":[{"sl":56},{"sl":63},{"sl":70},{"sl":91}],"name":"Verify deserialization","pass":true,"statements":[{"sl":57},{"sl":64},{"sl":71},{"sl":93},{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98}]},"test_776":{"methods":[{"sl":103}],"name":"Verify toString","pass":true,"statements":[{"sl":105},{"sl":106},{"sl":108}]},"test_852":{"methods":[{"sl":44},{"sl":63},{"sl":70},{"sl":81}],"name":"Generate version 1 Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":64},{"sl":71},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_853":{"methods":[{"sl":56},{"sl":63},{"sl":81},{"sl":91}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":57},{"sl":64},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87},{"sl":93},{"sl":94},{"sl":95},{"sl":96},{"sl":97},{"sl":98}]},"test_884":{"methods":[{"sl":103}],"name":"Verify toString","pass":true,"statements":[{"sl":105},{"sl":106},{"sl":108}]},"test_899":{"methods":[{"sl":44},{"sl":63},{"sl":70},{"sl":81}],"name":"Generate version 1 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":64},{"sl":71},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_90":{"methods":[{"sl":44},{"sl":63},{"sl":70},{"sl":81}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.[0]","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":64},{"sl":71},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_932":{"methods":[{"sl":44},{"sl":63},{"sl":81}],"name":"Verify that serializeDataToBeSignedInSecuredMessage serializes according to signature verification it ETSI specifification","pass":true,"statements":[{"sl":45},{"sl":48},{"sl":49},{"sl":64},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]},"test_943":{"methods":[{"sl":81}],"name":"Verify serializeTotalPayload calculates signature payload fields correctly","pass":true,"statements":[{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":87}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [1010, 457, 306, 90, 15, 670, 932, 899, 158, 601, 852, 686, 579, 234, 242, 699, 208], [1010, 457, 306, 90, 15, 670, 932, 899, 158, 601, 852, 686, 579, 234, 242, 699, 208], [234], [], [1010, 457, 306, 90, 15, 670, 932, 899, 158, 601, 852, 686, 579, 234, 242, 699, 208], [1010, 457, 306, 90, 15, 670, 932, 899, 158, 601, 852, 686, 579, 234, 242, 699, 208], [], [], [], [], [], [], [306, 15, 853, 769, 545, 242, 699, 363], [306, 15, 853, 769, 545, 242, 699, 363], [], [], [], [], [], [1010, 457, 306, 90, 15, 670, 932, 853, 899, 158, 852, 686, 579, 769, 234, 242, 699], [1010, 457, 306, 90, 15, 670, 932, 853, 899, 158, 852, 686, 579, 769, 234, 242, 699], [], [], [], [], [], [1010, 90, 670, 899, 158, 852, 686, 579, 769, 234, 242, 699], [1010, 90, 670, 899, 158, 852, 686, 579, 769, 234, 242, 699], [], [], [], [], [], [242, 699], [242, 699], [], [], [259, 1010, 457, 943, 306, 90, 15, 670, 932, 137, 281, 853, 899, 158, 852, 686, 579, 242, 699], [], [259, 1010, 457, 943, 306, 90, 15, 670, 932, 137, 281, 853, 899, 158, 852, 686, 579, 242, 699], [259, 1010, 457, 943, 306, 90, 15, 670, 932, 137, 281, 853, 899, 158, 852, 686, 579, 242, 699], [259, 1010, 457, 943, 306, 90, 15, 670, 932, 137, 281, 853, 899, 158, 852, 686, 579, 242, 699], [259, 1010, 457, 943, 306, 90, 15, 670, 932, 137, 281, 853, 899, 158, 852, 686, 579, 242, 699], [259, 1010, 457, 943, 306, 90, 15, 670, 932, 137, 281, 853, 899, 158, 852, 686, 579, 242, 699], [], [], [], [306, 15, 853, 769, 545, 242, 699, 363], [], [306, 15, 853, 769, 545, 242, 699, 363], [306, 15, 853, 769, 545, 242, 699, 363], [306, 15, 853, 769, 545, 242, 699, 363], [306, 15, 853, 769, 545, 242, 699, 363], [306, 15, 853, 769, 545, 242, 699, 363], [306, 15, 853, 769, 545, 242, 699, 363], [], [], [], [], [884, 776], [], [884, 776], [884, 776], [], [884, 776], [], [], [], [], [], []]
