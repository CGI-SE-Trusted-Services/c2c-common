var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":114,"id":8054,"methods":[{"el":56,"sc":2,"sl":53},{"el":63,"sc":2,"sl":62},{"el":70,"sc":2,"sl":68},{"el":77,"sc":2,"sl":75},{"el":91,"sc":2,"sl":80},{"el":105,"sc":2,"sl":93},{"el":111,"sc":2,"sl":107}],"name":"TrailerField","sl":43}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_103":{"methods":[{"sl":80}],"name":"Verify serialization of RecipientInfo","pass":true,"statements":[{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86}]},"test_117":{"methods":[{"sl":62},{"sl":68},{"sl":75},{"sl":93}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":69},{"sl":76},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_159":{"methods":[{"sl":53},{"sl":68},{"sl":75},{"sl":80}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86}]},"test_28":{"methods":[{"sl":53},{"sl":62},{"sl":68},{"sl":75},{"sl":80},{"sl":93}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_292":{"methods":[{"sl":53},{"sl":62},{"sl":68},{"sl":75},{"sl":80},{"sl":93}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_353":{"methods":[{"sl":62},{"sl":68},{"sl":75},{"sl":93}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":69},{"sl":76},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_361":{"methods":[{"sl":107}],"name":"Verify toString","pass":true,"statements":[{"sl":109}]},"test_370":{"methods":[{"sl":68},{"sl":75}],"name":"Verify constructors and getters and setters","pass":true,"statements":[{"sl":69},{"sl":76}]},"test_466":{"methods":[{"sl":68}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with compressed_lsb_y_1 ecc point","pass":true,"statements":[{"sl":69}]},"test_570":{"methods":[{"sl":107}],"name":"Verify toString","pass":true,"statements":[{"sl":109}]},"test_597":{"methods":[{"sl":62},{"sl":93}],"name":"Verify deserialization","pass":true,"statements":[{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_669":{"methods":[{"sl":53},{"sl":68},{"sl":75},{"sl":80}],"name":"Generate Authorization Ticket and Signed Secured Message v1 for interoperability testing","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86}]},"test_694":{"methods":[{"sl":62},{"sl":93}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_709":{"methods":[{"sl":53},{"sl":68},{"sl":75},{"sl":80}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86}]},"test_719":{"methods":[{"sl":80}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86}]},"test_767":{"methods":[{"sl":53}],"name":"Verify the constructors, getters and attachSignature","pass":true,"statements":[{"sl":54},{"sl":55}]},"test_779":{"methods":[{"sl":68}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with compressed_lsb_y_0 ecc point","pass":true,"statements":[{"sl":69}]},"test_800":{"methods":[{"sl":53},{"sl":68},{"sl":75}],"name":"Verify findSignatureInMessage returns first found signature trailer field","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76}]},"test_846":{"methods":[{"sl":53},{"sl":62},{"sl":68},{"sl":75},{"sl":80},{"sl":93}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_915":{"methods":[{"sl":53},{"sl":68},{"sl":75},{"sl":80}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86}]},"test_970":{"methods":[{"sl":68}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with uncompressed ecc point","pass":true,"statements":[{"sl":69}]},"test_980":{"methods":[{"sl":68}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with x_coordinate_only ecc point","pass":true,"statements":[{"sl":69}]},"test_99":{"methods":[{"sl":80}],"name":"Verify serialization","pass":true,"statements":[{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [915, 292, 669, 709, 767, 846, 800, 28, 159], [915, 292, 669, 709, 767, 846, 800, 28, 159], [915, 292, 669, 709, 767, 846, 800, 28, 159], [], [], [], [], [], [], [353, 597, 292, 846, 117, 28, 694], [], [], [], [], [], [353, 915, 779, 980, 466, 292, 669, 970, 709, 846, 800, 370, 117, 28, 159], [353, 915, 779, 980, 466, 292, 669, 970, 709, 846, 800, 370, 117, 28, 159], [], [], [], [], [], [353, 915, 292, 669, 709, 846, 800, 370, 117, 28, 159], [353, 915, 292, 669, 709, 846, 800, 370, 117, 28, 159], [], [], [], [915, 99, 719, 292, 669, 709, 846, 28, 159, 103], [], [915, 99, 719, 292, 669, 709, 846, 28, 159, 103], [915, 99, 719, 292, 669, 709, 846, 28, 159, 103], [915, 99, 719, 292, 669, 709, 846, 28, 159, 103], [915, 99, 719, 292, 669, 709, 846, 28, 159, 103], [915, 99, 719, 292, 669, 709, 846, 28, 159, 103], [], [], [], [], [], [], [353, 597, 292, 846, 117, 28, 694], [], [353, 597, 292, 846, 117, 28, 694], [353, 597, 292, 846, 117, 28, 694], [353, 597, 292, 846, 117, 28, 694], [353, 597, 292, 846, 117, 28, 694], [353, 597, 292, 846, 117, 28, 694], [353, 597, 292, 846, 117, 28, 694], [], [], [], [], [], [], [361, 570], [], [361, 570], [], [], [], [], []]
