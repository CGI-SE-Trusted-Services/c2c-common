var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":114,"id":8486,"methods":[{"el":56,"sc":2,"sl":53},{"el":63,"sc":2,"sl":62},{"el":70,"sc":2,"sl":68},{"el":77,"sc":2,"sl":75},{"el":91,"sc":2,"sl":80},{"el":105,"sc":2,"sl":93},{"el":111,"sc":2,"sl":107}],"name":"TrailerField","sl":43}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1010":{"methods":[{"sl":53},{"sl":68},{"sl":75}],"name":"Verify that multiple payload works for version 1 of secured DENM message","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76}]},"test_15":{"methods":[{"sl":53},{"sl":62},{"sl":68},{"sl":75},{"sl":80},{"sl":93}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_158":{"methods":[{"sl":53},{"sl":68},{"sl":75}],"name":"Verify that multiple payload works for version 1 of secured CAM message","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76}]},"test_242":{"methods":[{"sl":53},{"sl":62},{"sl":68},{"sl":75},{"sl":80},{"sl":93}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_259":{"methods":[{"sl":80}],"name":"Verify serialization","pass":true,"statements":[{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86}]},"test_281":{"methods":[{"sl":80}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86}]},"test_306":{"methods":[{"sl":53},{"sl":62},{"sl":68},{"sl":75},{"sl":80},{"sl":93}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76},{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_312":{"methods":[{"sl":62},{"sl":68},{"sl":75},{"sl":93}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":69},{"sl":76},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_357":{"methods":[{"sl":68}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with uncompressed ecc point","pass":true,"statements":[{"sl":69}]},"test_359":{"methods":[{"sl":68}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with x_coordinate_only ecc point","pass":true,"statements":[{"sl":69}]},"test_363":{"methods":[{"sl":62},{"sl":93}],"name":"Verify deserialization","pass":true,"statements":[{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_441":{"methods":[{"sl":53},{"sl":68},{"sl":75}],"name":"Verify findSignatureInMessage returns first found signature trailer field","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76}]},"test_457":{"methods":[{"sl":53}],"name":"Verify that version 2 Signed CAM Unrecognized Certificates Message  certificate, certificate_chain and certificate_digest_with_ecdsap256","pass":true,"statements":[{"sl":54},{"sl":55}]},"test_463":{"methods":[{"sl":107}],"name":"Verify toString","pass":true,"statements":[{"sl":109}]},"test_534":{"methods":[{"sl":68}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with compressed_lsb_y_1 ecc point","pass":true,"statements":[{"sl":69}]},"test_545":{"methods":[{"sl":62},{"sl":93}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_566":{"methods":[{"sl":68},{"sl":75}],"name":"Verify constructors and getters and setters","pass":true,"statements":[{"sl":69},{"sl":76}]},"test_579":{"methods":[{"sl":53},{"sl":68},{"sl":75}],"name":"Generate version 2 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76}]},"test_643":{"methods":[{"sl":68}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with compressed_lsb_y_0 ecc point","pass":true,"statements":[{"sl":69}]},"test_670":{"methods":[{"sl":53},{"sl":68},{"sl":75}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.[1]","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76}]},"test_686":{"methods":[{"sl":53},{"sl":68},{"sl":75}],"name":"Generate version 2 Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76}]},"test_813":{"methods":[{"sl":53}],"name":"Verify the constructors, getters and attachSignature","pass":true,"statements":[{"sl":54},{"sl":55}]},"test_816":{"methods":[{"sl":80}],"name":"Verify serialization of RecipientInfo","pass":true,"statements":[{"sl":82},{"sl":83},{"sl":84},{"sl":85},{"sl":86}]},"test_852":{"methods":[{"sl":53},{"sl":68},{"sl":75}],"name":"Generate version 1 Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76}]},"test_853":{"methods":[{"sl":62},{"sl":68},{"sl":75},{"sl":93}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":69},{"sl":76},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100}]},"test_884":{"methods":[{"sl":107}],"name":"Verify toString","pass":true,"statements":[{"sl":109}]},"test_899":{"methods":[{"sl":53},{"sl":68},{"sl":75}],"name":"Generate version 1 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76}]},"test_90":{"methods":[{"sl":53},{"sl":68},{"sl":75}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.[0]","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":69},{"sl":76}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [1010, 457, 306, 90, 15, 670, 899, 158, 441, 852, 686, 579, 813, 242], [1010, 457, 306, 90, 15, 670, 899, 158, 441, 852, 686, 579, 813, 242], [1010, 457, 306, 90, 15, 670, 899, 158, 441, 852, 686, 579, 813, 242], [], [], [], [], [], [], [306, 15, 853, 312, 545, 242, 363], [], [], [], [], [], [1010, 357, 306, 534, 90, 15, 670, 853, 899, 158, 441, 852, 686, 579, 566, 312, 359, 242, 643], [1010, 357, 306, 534, 90, 15, 670, 853, 899, 158, 441, 852, 686, 579, 566, 312, 359, 242, 643], [], [], [], [], [], [1010, 306, 90, 15, 670, 853, 899, 158, 441, 852, 686, 579, 566, 312, 242], [1010, 306, 90, 15, 670, 853, 899, 158, 441, 852, 686, 579, 566, 312, 242], [], [], [], [259, 306, 15, 281, 242, 816], [], [259, 306, 15, 281, 242, 816], [259, 306, 15, 281, 242, 816], [259, 306, 15, 281, 242, 816], [259, 306, 15, 281, 242, 816], [259, 306, 15, 281, 242, 816], [], [], [], [], [], [], [306, 15, 853, 312, 545, 242, 363], [], [306, 15, 853, 312, 545, 242, 363], [306, 15, 853, 312, 545, 242, 363], [306, 15, 853, 312, 545, 242, 363], [306, 15, 853, 312, 545, 242, 363], [306, 15, 853, 312, 545, 242, 363], [306, 15, 853, 312, 545, 242, 363], [], [], [], [], [], [], [884, 463], [], [884, 463], [], [], [], [], []]
