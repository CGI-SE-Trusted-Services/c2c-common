var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":54,"id":8513,"methods":[{"el":36,"sc":2,"sl":34},{"el":40,"sc":2,"sl":38},{"el":52,"sc":2,"sl":45}],"name":"TrailerFieldType","sl":29}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1010":{"methods":[{"sl":38}],"name":"Verify that multiple payload works for version 1 of secured DENM message","pass":true,"statements":[{"sl":39}]},"test_15":{"methods":[{"sl":38},{"sl":45}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":39},{"sl":46},{"sl":47},{"sl":48}]},"test_158":{"methods":[{"sl":38}],"name":"Verify that multiple payload works for version 1 of secured CAM message","pass":true,"statements":[{"sl":39}]},"test_242":{"methods":[{"sl":38},{"sl":45}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":39},{"sl":46},{"sl":47},{"sl":48}]},"test_259":{"methods":[{"sl":38}],"name":"Verify serialization","pass":true,"statements":[{"sl":39}]},"test_281":{"methods":[{"sl":38}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":39}]},"test_306":{"methods":[{"sl":38},{"sl":45}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":39},{"sl":46},{"sl":47},{"sl":48}]},"test_312":{"methods":[{"sl":45}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48}]},"test_326":{"methods":[{"sl":45}],"name":"Verify that TrailerFieldType.getByValue returns signature for 1","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48}]},"test_363":{"methods":[{"sl":45}],"name":"Verify deserialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48}]},"test_457":{"methods":[{"sl":38}],"name":"Verify that version 2 Signed CAM Unrecognized Certificates Message  certificate, certificate_chain and certificate_digest_with_ecdsap256","pass":true,"statements":[{"sl":39}]},"test_545":{"methods":[{"sl":45}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48}]},"test_579":{"methods":[{"sl":38}],"name":"Generate version 2 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":39}]},"test_670":{"methods":[{"sl":38}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.[1]","pass":true,"statements":[{"sl":39}]},"test_686":{"methods":[{"sl":38}],"name":"Generate version 2 Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":39}]},"test_816":{"methods":[{"sl":38}],"name":"Verify serialization of RecipientInfo","pass":true,"statements":[{"sl":39}]},"test_852":{"methods":[{"sl":38}],"name":"Generate version 1 Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":39}]},"test_853":{"methods":[{"sl":38},{"sl":45}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":39},{"sl":46},{"sl":47},{"sl":48}]},"test_899":{"methods":[{"sl":38}],"name":"Generate version 1 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":39}]},"test_90":{"methods":[{"sl":38}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.[0]","pass":true,"statements":[{"sl":39}]},"test_932":{"methods":[{"sl":38}],"name":"Verify that serializeDataToBeSignedInSecuredMessage serializes according to signature verification it ETSI specifification","pass":true,"statements":[{"sl":39}]},"test_987":{"methods":[{"sl":38}],"name":"Verify that signature has bytevalue 1","pass":true,"statements":[{"sl":39}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [259, 1010, 457, 306, 987, 90, 15, 670, 932, 281, 853, 899, 158, 852, 686, 579, 242, 816], [259, 1010, 457, 306, 987, 90, 15, 670, 932, 281, 853, 899, 158, 852, 686, 579, 242, 816], [], [], [], [], [], [306, 326, 15, 853, 312, 545, 242, 363], [306, 326, 15, 853, 312, 545, 242, 363], [306, 326, 15, 853, 312, 545, 242, 363], [306, 326, 15, 853, 312, 545, 242, 363], [], [], [], [], [], []]
