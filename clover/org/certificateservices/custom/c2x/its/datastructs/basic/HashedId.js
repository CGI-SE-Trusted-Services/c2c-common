var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":100,"id":1072,"methods":[{"el":45,"sc":2,"sl":38},{"el":52,"sc":2,"sl":51},{"el":59,"sc":2,"sl":57},{"el":64,"sc":2,"sl":61},{"el":70,"sc":2,"sl":66},{"el":83,"sc":2,"sl":77},{"el":97,"sc":2,"sl":85}],"name":"HashedId","sl":29}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_105":{"methods":[{"sl":51},{"sl":66}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":68},{"sl":69}]},"test_116":{"methods":[{"sl":38},{"sl":61}],"name":"Generate Enrollment Credential v1 for interoperability testing","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63}]},"test_123":{"methods":[{"sl":51},{"sl":66}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":68},{"sl":69}]},"test_124":{"methods":[{"sl":38}],"name":"Verify toString","pass":true,"statements":[{"sl":39},{"sl":43}]},"test_125":{"methods":[{"sl":57}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":58}]},"test_13":{"methods":[{"sl":38},{"sl":61}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63}]},"test_135":{"methods":[{"sl":38},{"sl":61},{"sl":85}],"name":"Generate Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63},{"sl":87},{"sl":89},{"sl":91},{"sl":93},{"sl":94},{"sl":96}]},"test_149":{"methods":[{"sl":51},{"sl":57},{"sl":66}],"name":"Verify deserialization of a hash value","pass":true,"statements":[{"sl":58},{"sl":68},{"sl":69}]},"test_152":{"methods":[{"sl":38},{"sl":51},{"sl":61},{"sl":66},{"sl":85}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63},{"sl":68},{"sl":69},{"sl":87},{"sl":89},{"sl":91},{"sl":93},{"sl":94},{"sl":96}]},"test_158":{"methods":[{"sl":38},{"sl":51},{"sl":61},{"sl":66},{"sl":85}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63},{"sl":68},{"sl":69},{"sl":87},{"sl":89},{"sl":91},{"sl":93},{"sl":94},{"sl":95},{"sl":96}]},"test_163":{"methods":[{"sl":38}],"name":"Verify toString","pass":true,"statements":[{"sl":39},{"sl":43}]},"test_166":{"methods":[{"sl":51},{"sl":61},{"sl":66}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":63},{"sl":68},{"sl":69}]},"test_170":{"methods":[{"sl":61}],"name":"Verify serialization","pass":true,"statements":[{"sl":63}]},"test_184":{"methods":[{"sl":61}],"name":"Verify serialization","pass":true,"statements":[{"sl":63}]},"test_194":{"methods":[{"sl":38},{"sl":61}],"name":"Verify serialization of a hash value","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63}]},"test_208":{"methods":[{"sl":51},{"sl":66}],"name":"Verify deserialization","pass":true,"statements":[{"sl":68},{"sl":69}]},"test_216":{"methods":[{"sl":51},{"sl":61},{"sl":66}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":63},{"sl":68},{"sl":69}]},"test_221":{"methods":[{"sl":51},{"sl":57},{"sl":66}],"name":"Verify deserialization","pass":true,"statements":[{"sl":58},{"sl":68},{"sl":69}]},"test_227":{"methods":[{"sl":38},{"sl":77},{"sl":85}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":87},{"sl":89},{"sl":91},{"sl":93},{"sl":94},{"sl":95},{"sl":96}]},"test_235":{"methods":[{"sl":38},{"sl":57}],"name":"Verify the correct octet length of the HashedId3","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":58}]},"test_284":{"methods":[{"sl":38},{"sl":61}],"name":"Generate Authorization Ticket and Signed Secured Message v1 for interoperability testing","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63}]},"test_301":{"methods":[{"sl":61}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":63}]},"test_319":{"methods":[{"sl":38}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":39},{"sl":43}]},"test_322":{"methods":[{"sl":51},{"sl":61},{"sl":66}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":63},{"sl":68},{"sl":69}]},"test_332":{"methods":[{"sl":38},{"sl":77},{"sl":85}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":87},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":94},{"sl":95},{"sl":96}]},"test_34":{"methods":[{"sl":51},{"sl":61},{"sl":66}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":63},{"sl":68},{"sl":69}]},"test_340":{"methods":[{"sl":61}],"name":"Verify serialization of RecipientInfo","pass":true,"statements":[{"sl":63}]},"test_383":{"methods":[{"sl":51}],"name":"Verify the correct octet length of the HashedId3","pass":true,"statements":[]},"test_39":{"methods":[{"sl":61}],"name":"Verify serialization","pass":true,"statements":[{"sl":63}]},"test_397":{"methods":[{"sl":61}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":63}]},"test_405":{"methods":[{"sl":38},{"sl":61},{"sl":85}],"name":"Generate Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63},{"sl":87},{"sl":89},{"sl":91},{"sl":93},{"sl":94},{"sl":96}]},"test_58":{"methods":[{"sl":38},{"sl":77},{"sl":85}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":87},{"sl":89},{"sl":91},{"sl":93},{"sl":94},{"sl":95},{"sl":96}]},"test_64":{"methods":[{"sl":38},{"sl":51},{"sl":61},{"sl":66},{"sl":85}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63},{"sl":68},{"sl":69},{"sl":87},{"sl":89},{"sl":91},{"sl":93},{"sl":94},{"sl":95},{"sl":96}]},"test_7":{"methods":[{"sl":38},{"sl":61}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63}]},"test_75":{"methods":[{"sl":51},{"sl":66}],"name":"Verify deserialization","pass":true,"statements":[{"sl":68},{"sl":69}]},"test_76":{"methods":[{"sl":51}],"name":"Verify the correct octet length of the HashedId8","pass":true,"statements":[]},"test_81":{"methods":[{"sl":38},{"sl":51},{"sl":61},{"sl":66}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":39},{"sl":43},{"sl":63},{"sl":68},{"sl":69}]},"test_84":{"methods":[{"sl":51},{"sl":66}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":68},{"sl":69}]},"test_85":{"methods":[{"sl":51},{"sl":61},{"sl":66}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":63},{"sl":68},{"sl":69}]},"test_95":{"methods":[{"sl":38}],"name":"Verify IllegalArgumentException is thrown if to small hash value is given.","pass":true,"statements":[{"sl":39},{"sl":40}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [227, 58, 81, 332, 158, 194, 124, 235, 152, 13, 95, 116, 284, 319, 405, 135, 7, 163, 64], [227, 58, 81, 332, 158, 194, 124, 235, 152, 13, 95, 116, 284, 319, 405, 135, 7, 163, 64], [95], [], [], [227, 58, 81, 332, 158, 194, 124, 235, 152, 13, 116, 284, 319, 405, 135, 7, 163, 64], [], [], [], [], [], [], [], [85, 81, 105, 149, 158, 166, 123, 152, 75, 383, 216, 221, 322, 84, 208, 34, 76, 64], [], [], [], [], [], [125, 149, 235, 221], [125, 149, 235, 221], [], [], [85, 39, 81, 170, 158, 194, 166, 152, 13, 397, 116, 284, 340, 216, 322, 405, 135, 7, 184, 301, 34, 64], [], [85, 39, 81, 170, 158, 194, 166, 152, 13, 397, 116, 284, 340, 216, 322, 405, 135, 7, 184, 301, 34, 64], [], [], [85, 81, 105, 149, 158, 166, 123, 152, 75, 216, 221, 322, 84, 208, 34, 64], [], [85, 81, 105, 149, 158, 166, 123, 152, 75, 216, 221, 322, 84, 208, 34, 64], [85, 81, 105, 149, 158, 166, 123, 152, 75, 216, 221, 322, 84, 208, 34, 64], [], [], [], [], [], [], [], [227, 58, 332], [], [227, 58, 332], [227, 58, 332], [227, 58, 332], [227, 58, 332], [], [], [227, 58, 332, 158, 152, 405, 135, 64], [], [227, 58, 332, 158, 152, 405, 135, 64], [], [227, 58, 332, 158, 152, 405, 135, 64], [332], [227, 58, 332, 158, 152, 405, 135, 64], [], [227, 58, 332, 158, 152, 405, 135, 64], [227, 58, 332, 158, 152, 405, 135, 64], [227, 58, 332, 158, 64], [227, 58, 332, 158, 152, 405, 135, 64], [], [], [], []]
