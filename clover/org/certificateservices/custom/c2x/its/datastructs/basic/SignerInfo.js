var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":282,"id":1553,"methods":[{"el":57,"sc":2,"sl":55},{"el":66,"sc":2,"sl":63},{"el":75,"sc":2,"sl":72},{"el":87,"sc":2,"sl":84},{"el":100,"sc":2,"sl":96},{"el":111,"sc":2,"sl":109},{"el":120,"sc":2,"sl":118},{"el":129,"sc":2,"sl":127},{"el":141,"sc":2,"sl":139},{"el":150,"sc":2,"sl":148},{"el":174,"sc":2,"sl":152},{"el":202,"sc":2,"sl":176},{"el":222,"sc":2,"sl":205},{"el":254,"sc":2,"sl":225},{"el":278,"sc":2,"sl":258}],"name":"SignerInfo","sl":41}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":63},{"sl":118},{"sl":152}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":119},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160}]},"test_104":{"methods":[{"sl":55},{"sl":176}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":56},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_106":{"methods":[{"sl":55},{"sl":72},{"sl":109},{"sl":127},{"sl":152}],"name":"Generate Authorization Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":56},{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_108":{"methods":[{"sl":55},{"sl":109},{"sl":176}],"name":"Verify deserialization","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_112":{"methods":[{"sl":55},{"sl":109},{"sl":152},{"sl":176}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_116":{"methods":[{"sl":63},{"sl":109},{"sl":118},{"sl":152}],"name":"Generate Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":110},{"sl":119},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_125":{"methods":[{"sl":55},{"sl":152},{"sl":176}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":56},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_13":{"methods":[{"sl":72},{"sl":127},{"sl":152}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":128},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_133":{"methods":[{"sl":152}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160}]},"test_138":{"methods":[{"sl":55},{"sl":176}],"name":"Verify deserialization","pass":true,"statements":[{"sl":56},{"sl":179},{"sl":180},{"sl":181},{"sl":182}]},"test_148":{"methods":[{"sl":55},{"sl":72},{"sl":109},{"sl":127},{"sl":152},{"sl":176}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":56},{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_151":{"methods":[{"sl":55},{"sl":152},{"sl":176}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":56},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_154":{"methods":[{"sl":152}],"name":"Verify serialization","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160}]},"test_16":{"methods":[{"sl":55},{"sl":176}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":56},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_170":{"methods":[{"sl":109}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":110}]},"test_182":{"methods":[{"sl":152}],"name":"Verify serialization","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_183":{"methods":[{"sl":55},{"sl":109},{"sl":118},{"sl":127},{"sl":139},{"sl":148},{"sl":176}],"name":"Verify deserialization","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":119},{"sl":128},{"sl":140},{"sl":149},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190},{"sl":191},{"sl":192},{"sl":193},{"sl":194},{"sl":195},{"sl":196},{"sl":197},{"sl":198}]},"test_231":{"methods":[{"sl":55},{"sl":109},{"sl":152}],"name":"Generate RootCA without Encryption Key and Geographic region and verify that all other attributes are set.","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":154},{"sl":155},{"sl":156},{"sl":157}]},"test_232":{"methods":[{"sl":55},{"sl":72},{"sl":109},{"sl":127},{"sl":152},{"sl":176}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":56},{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_233":{"methods":[{"sl":152}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_239":{"methods":[{"sl":55},{"sl":152},{"sl":176}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":56},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_241":{"methods":[{"sl":152}],"name":"Verify serialization","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":156},{"sl":157}]},"test_252":{"methods":[{"sl":258}],"name":"Verify toString","pass":true,"statements":[{"sl":260},{"sl":261},{"sl":262}]},"test_254":{"methods":[{"sl":109},{"sl":118},{"sl":127},{"sl":139},{"sl":148}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":110},{"sl":119},{"sl":128},{"sl":140},{"sl":149}]},"test_26":{"methods":[{"sl":63},{"sl":152}],"name":"Generate Authorization Ticket and Signed Secured Message v1 for interoperability testing","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_263":{"methods":[{"sl":84},{"sl":109},{"sl":139},{"sl":152}],"name":"Generate Authorization Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":110},{"sl":140},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163},{"sl":164},{"sl":165},{"sl":166}]},"test_27":{"methods":[{"sl":55},{"sl":63},{"sl":152},{"sl":176}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":56},{"sl":64},{"sl":65},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186}]},"test_274":{"methods":[{"sl":72}],"name":"Verify illegal subjec type no root ca and CA certificate null throws illegal argument exception","pass":true,"statements":[{"sl":73},{"sl":74}]},"test_277":{"methods":[{"sl":63},{"sl":72},{"sl":109},{"sl":118},{"sl":127},{"sl":152}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":73},{"sl":74},{"sl":110},{"sl":119},{"sl":128},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_285":{"methods":[{"sl":72},{"sl":109},{"sl":127},{"sl":152}],"name":"Generate Authorization Ticket with a certificate as signer info","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_288":{"methods":[{"sl":258}],"name":"Verify toString","pass":true,"statements":[{"sl":260},{"sl":261},{"sl":262},{"sl":266},{"sl":267}]},"test_299":{"methods":[{"sl":258}],"name":"Verify toString","pass":true,"statements":[{"sl":260},{"sl":261},{"sl":262},{"sl":263},{"sl":264},{"sl":271},{"sl":272}]},"test_307":{"methods":[{"sl":55},{"sl":72},{"sl":109},{"sl":127},{"sl":152}],"name":"Generate Enrollment Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":56},{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_313":{"methods":[{"sl":55},{"sl":109},{"sl":152}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":154},{"sl":155},{"sl":156},{"sl":157}]},"test_336":{"methods":[{"sl":63},{"sl":152}],"name":"Generate Enrollment Credential v1 for interoperability testing","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_354":{"methods":[{"sl":258}],"name":"Verify toString","pass":true,"statements":[{"sl":260},{"sl":263},{"sl":264}]},"test_357":{"methods":[{"sl":152}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160}]},"test_366":{"methods":[{"sl":84},{"sl":109},{"sl":139},{"sl":152}],"name":"Generate Enrollment Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":110},{"sl":140},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163},{"sl":164},{"sl":165},{"sl":166}]},"test_37":{"methods":[{"sl":72},{"sl":109},{"sl":127},{"sl":152}],"name":"Generate Authorization CA v1 for interoperability testing","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_372":{"methods":[{"sl":63},{"sl":109},{"sl":118},{"sl":152}],"name":"Generate Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":110},{"sl":119},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_376":{"methods":[{"sl":55},{"sl":109},{"sl":127},{"sl":152},{"sl":176}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_395":{"methods":[{"sl":63},{"sl":205},{"sl":225}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":207},{"sl":208},{"sl":209},{"sl":210},{"sl":211},{"sl":213},{"sl":214},{"sl":215},{"sl":217},{"sl":219},{"sl":221},{"sl":227},{"sl":229},{"sl":231},{"sl":233},{"sl":234},{"sl":235},{"sl":236},{"sl":239},{"sl":240},{"sl":241},{"sl":244},{"sl":247},{"sl":248},{"sl":249},{"sl":251},{"sl":253}]},"test_6":{"methods":[{"sl":55},{"sl":176}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":56},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_87":{"methods":[{"sl":55},{"sl":176}],"name":"Verify deserialization","pass":true,"statements":[{"sl":56},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186}]},"test_89":{"methods":[{"sl":72},{"sl":109},{"sl":127},{"sl":152}],"name":"Generate Enrollment Credential with a certificate as signer info","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_98":{"methods":[{"sl":152}],"name":"Verify serialization","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":170}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [239, 138, 231, 232, 183, 104, 106, 108, 151, 87, 6, 307, 16, 27, 125, 112, 313, 148, 376], [239, 138, 231, 232, 183, 104, 106, 108, 151, 87, 6, 307, 16, 27, 125, 112, 313, 148, 376], [], [], [], [], [], [], [277, 26, 116, 372, 336, 1, 27, 395], [277, 26, 116, 372, 336, 1, 27, 395], [277, 26, 116, 372, 336, 1, 27, 395], [], [], [], [], [], [], [277, 232, 13, 106, 89, 37, 307, 274, 148, 285], [277, 232, 13, 106, 89, 37, 307, 274, 148, 285], [277, 232, 13, 106, 89, 37, 307, 274, 148, 285], [], [], [], [], [], [], [], [], [], [263, 366], [263, 366], [263, 366], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [277, 231, 232, 183, 106, 108, 170, 116, 89, 37, 307, 372, 263, 112, 254, 313, 148, 366, 376, 285], [277, 231, 232, 183, 106, 108, 170, 116, 89, 37, 307, 372, 263, 112, 254, 313, 148, 366, 376, 285], [], [], [], [], [], [], [], [277, 183, 116, 372, 1, 254], [277, 183, 116, 372, 1, 254], [], [], [], [], [], [], [], [277, 232, 183, 13, 106, 89, 37, 307, 254, 148, 376, 285], [277, 232, 183, 13, 106, 89, 37, 307, 254, 148, 376, 285], [], [], [], [], [], [], [], [], [], [], [183, 263, 254, 366], [183, 263, 254, 366], [], [], [], [], [], [], [], [183, 254], [183, 254], [], [], [277, 357, 239, 154, 26, 231, 232, 98, 13, 106, 241, 116, 151, 182, 89, 233, 37, 307, 372, 133, 336, 1, 27, 125, 263, 112, 313, 148, 366, 376, 285], [], [277, 357, 239, 154, 26, 231, 232, 98, 13, 106, 241, 116, 151, 182, 89, 233, 37, 307, 372, 133, 336, 1, 27, 125, 263, 112, 313, 148, 366, 376, 285], [277, 357, 239, 154, 26, 231, 232, 98, 13, 106, 241, 116, 151, 182, 89, 233, 37, 307, 372, 133, 336, 1, 27, 125, 263, 112, 313, 148, 366, 376, 285], [239, 26, 231, 98, 106, 241, 116, 151, 182, 89, 233, 37, 307, 372, 336, 125, 263, 112, 313, 366, 285], [239, 26, 231, 98, 106, 241, 116, 151, 182, 89, 233, 37, 307, 372, 336, 125, 263, 112, 313, 366, 285], [277, 357, 239, 154, 26, 232, 98, 13, 116, 151, 372, 133, 336, 1, 27, 125, 112, 148, 376], [277, 357, 239, 154, 26, 232, 98, 13, 116, 151, 372, 133, 336, 1, 27, 125, 112, 148, 376], [277, 357, 239, 154, 26, 232, 98, 13, 116, 151, 372, 133, 336, 1, 27, 125, 112, 148, 376], [277, 239, 26, 232, 98, 13, 106, 116, 151, 182, 89, 233, 37, 307, 372, 336, 125, 263, 148, 366, 376, 285], [277, 239, 26, 232, 98, 13, 106, 116, 151, 182, 89, 233, 37, 307, 372, 336, 125, 263, 148, 366, 376, 285], [277, 239, 26, 232, 98, 13, 106, 116, 151, 182, 89, 233, 37, 307, 372, 336, 125, 263, 148, 366, 376, 285], [98, 263, 366], [98, 263, 366], [98, 263, 366], [98], [98], [98], [98], [], [], [], [], [], [239, 138, 232, 183, 104, 108, 151, 87, 6, 16, 27, 125, 112, 148, 376], [], [], [239, 138, 232, 183, 104, 108, 151, 87, 6, 16, 27, 125, 112, 148, 376], [239, 138, 232, 183, 104, 108, 151, 87, 6, 16, 27, 125, 112, 148, 376], [239, 138, 183, 104, 108, 151, 16, 125, 112], [239, 138, 183, 104, 108, 151, 16, 125, 112], [239, 232, 183, 151, 87, 6, 16, 27, 125, 112, 148, 376], [239, 232, 183, 151, 87, 6, 16, 27, 125, 112, 148, 376], [239, 232, 183, 151, 87, 6, 16, 27, 125, 112, 148, 376], [239, 232, 183, 151, 87, 6, 16, 27, 125, 112, 148, 376], [239, 232, 183, 104, 108, 151, 6, 16, 125, 112, 148, 376], [239, 232, 183, 104, 108, 151, 6, 16, 125, 112, 148, 376], [239, 232, 183, 104, 108, 151, 6, 16, 125, 112, 148, 376], [239, 232, 183, 104, 108, 151, 6, 16, 125, 112, 148, 376], [183], [183], [183], [183], [183], [183], [183], [183], [], [], [], [], [], [], [395], [], [395], [395], [395], [395], [395], [], [395], [395], [395], [], [395], [], [395], [], [395], [], [], [], [395], [], [395], [], [395], [], [395], [], [395], [395], [395], [395], [], [], [395], [395], [395], [], [], [395], [], [], [395], [395], [395], [], [395], [], [395], [], [], [], [], [299, 288, 354, 252], [], [299, 288, 354, 252], [299, 288, 252], [299, 288, 252], [299, 354], [299, 354], [], [288], [288], [], [], [], [299], [299], [], [], [], [], [], [], [], [], [], []]
