var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":282,"id":1553,"methods":[{"el":57,"sc":2,"sl":55},{"el":66,"sc":2,"sl":63},{"el":75,"sc":2,"sl":72},{"el":87,"sc":2,"sl":84},{"el":100,"sc":2,"sl":96},{"el":111,"sc":2,"sl":109},{"el":120,"sc":2,"sl":118},{"el":129,"sc":2,"sl":127},{"el":141,"sc":2,"sl":139},{"el":150,"sc":2,"sl":148},{"el":174,"sc":2,"sl":152},{"el":202,"sc":2,"sl":176},{"el":222,"sc":2,"sl":205},{"el":254,"sc":2,"sl":225},{"el":278,"sc":2,"sl":258}],"name":"SignerInfo","sl":41}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_102":{"methods":[{"sl":258}],"name":"Verify toString","pass":true,"statements":[{"sl":260},{"sl":261},{"sl":262},{"sl":266},{"sl":267}]},"test_105":{"methods":[{"sl":55},{"sl":176}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":56},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_116":{"methods":[{"sl":63},{"sl":152}],"name":"Generate Enrollment Credential v1 for interoperability testing","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_120":{"methods":[{"sl":72},{"sl":109},{"sl":127},{"sl":152}],"name":"Generate Enrollment Credential with a certificate as signer info","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_123":{"methods":[{"sl":55},{"sl":176}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":56},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_125":{"methods":[{"sl":109},{"sl":118},{"sl":127},{"sl":139},{"sl":148}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":110},{"sl":119},{"sl":128},{"sl":140},{"sl":149}]},"test_13":{"methods":[{"sl":63},{"sl":72},{"sl":109},{"sl":118},{"sl":127},{"sl":152}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":73},{"sl":74},{"sl":110},{"sl":119},{"sl":128},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_135":{"methods":[{"sl":63},{"sl":109},{"sl":118},{"sl":152}],"name":"Generate Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":110},{"sl":119},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_152":{"methods":[{"sl":55},{"sl":72},{"sl":109},{"sl":127},{"sl":152},{"sl":176}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":56},{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_154":{"methods":[{"sl":258}],"name":"Verify toString","pass":true,"statements":[{"sl":260},{"sl":261},{"sl":262}]},"test_158":{"methods":[{"sl":55},{"sl":152},{"sl":176}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":56},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_166":{"methods":[{"sl":55},{"sl":152},{"sl":176}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":56},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_170":{"methods":[{"sl":152}],"name":"Verify serialization","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":170}]},"test_184":{"methods":[{"sl":152}],"name":"Verify serialization","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160}]},"test_185":{"methods":[{"sl":55},{"sl":109},{"sl":152}],"name":"Generate RootCA without Encryption Key and Geographic region and verify that all other attributes are set.","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":154},{"sl":155},{"sl":156},{"sl":157}]},"test_202":{"methods":[{"sl":55},{"sl":109},{"sl":176}],"name":"Verify deserialization","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_208":{"methods":[{"sl":55},{"sl":176}],"name":"Verify deserialization","pass":true,"statements":[{"sl":56},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186}]},"test_209":{"methods":[{"sl":258}],"name":"Verify toString","pass":true,"statements":[{"sl":260},{"sl":263},{"sl":264}]},"test_216":{"methods":[{"sl":55},{"sl":109},{"sl":127},{"sl":152},{"sl":176}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_221":{"methods":[{"sl":55},{"sl":109},{"sl":118},{"sl":127},{"sl":139},{"sl":148},{"sl":176}],"name":"Verify deserialization","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":119},{"sl":128},{"sl":140},{"sl":149},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190},{"sl":191},{"sl":192},{"sl":193},{"sl":194},{"sl":195},{"sl":196},{"sl":197},{"sl":198}]},"test_244":{"methods":[{"sl":84},{"sl":109},{"sl":139},{"sl":152}],"name":"Generate Enrollment Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":110},{"sl":140},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163},{"sl":164},{"sl":165},{"sl":166}]},"test_248":{"methods":[{"sl":258}],"name":"Verify toString","pass":true,"statements":[{"sl":260},{"sl":261},{"sl":262},{"sl":263},{"sl":264},{"sl":271},{"sl":272}]},"test_271":{"methods":[{"sl":55},{"sl":176}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":56},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_274":{"methods":[{"sl":84},{"sl":109},{"sl":139},{"sl":152}],"name":"Generate Authorization Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":110},{"sl":140},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163},{"sl":164},{"sl":165},{"sl":166}]},"test_275":{"methods":[{"sl":152}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_284":{"methods":[{"sl":63},{"sl":152}],"name":"Generate Authorization Ticket and Signed Secured Message v1 for interoperability testing","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_301":{"methods":[{"sl":72},{"sl":127},{"sl":152}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":128},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_314":{"methods":[{"sl":55},{"sl":72},{"sl":109},{"sl":127},{"sl":152}],"name":"Generate Enrollment Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":56},{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_322":{"methods":[{"sl":55},{"sl":152},{"sl":176}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":56},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_332":{"methods":[{"sl":63},{"sl":205},{"sl":225}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":207},{"sl":208},{"sl":209},{"sl":210},{"sl":211},{"sl":213},{"sl":214},{"sl":215},{"sl":217},{"sl":219},{"sl":221},{"sl":227},{"sl":229},{"sl":231},{"sl":233},{"sl":234},{"sl":235},{"sl":236},{"sl":239},{"sl":240},{"sl":241},{"sl":244},{"sl":247},{"sl":248},{"sl":249},{"sl":251},{"sl":253}]},"test_34":{"methods":[{"sl":55},{"sl":109},{"sl":152},{"sl":176}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":179},{"sl":180},{"sl":181},{"sl":182},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_364":{"methods":[{"sl":55},{"sl":109},{"sl":152}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":56},{"sl":110},{"sl":154},{"sl":155},{"sl":156},{"sl":157}]},"test_368":{"methods":[{"sl":72}],"name":"Verify illegal subjec type no root ca and CA certificate null throws illegal argument exception","pass":true,"statements":[{"sl":73},{"sl":74}]},"test_39":{"methods":[{"sl":152}],"name":"Verify serialization","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":156},{"sl":157}]},"test_397":{"methods":[{"sl":152}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160}]},"test_402":{"methods":[{"sl":109}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":110}]},"test_403":{"methods":[{"sl":72},{"sl":109},{"sl":127},{"sl":152}],"name":"Generate Authorization CA v1 for interoperability testing","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_405":{"methods":[{"sl":63},{"sl":109},{"sl":118},{"sl":152}],"name":"Generate Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":110},{"sl":119},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163}]},"test_406":{"methods":[{"sl":55},{"sl":72},{"sl":109},{"sl":127},{"sl":152}],"name":"Generate Authorization Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":56},{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_64":{"methods":[{"sl":152}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160}]},"test_7":{"methods":[{"sl":63},{"sl":118},{"sl":152}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":64},{"sl":65},{"sl":119},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160}]},"test_73":{"methods":[{"sl":72},{"sl":109},{"sl":127},{"sl":152}],"name":"Generate Authorization Ticket with a certificate as signer info","pass":true,"statements":[{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]},"test_75":{"methods":[{"sl":55},{"sl":176}],"name":"Verify deserialization","pass":true,"statements":[{"sl":56},{"sl":179},{"sl":180},{"sl":181},{"sl":182}]},"test_81":{"methods":[{"sl":55},{"sl":63},{"sl":152},{"sl":176}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":56},{"sl":64},{"sl":65},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186}]},"test_85":{"methods":[{"sl":55},{"sl":72},{"sl":109},{"sl":127},{"sl":152},{"sl":176}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":56},{"sl":73},{"sl":74},{"sl":110},{"sl":128},{"sl":154},{"sl":155},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185},{"sl":186},{"sl":187},{"sl":188},{"sl":189},{"sl":190}]},"test_88":{"methods":[{"sl":152}],"name":"Verify serialization","pass":true,"statements":[{"sl":154},{"sl":155},{"sl":156},{"sl":157},{"sl":161},{"sl":162},{"sl":163}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [158, 364, 322, 208, 202, 271, 34, 85, 314, 81, 105, 406, 185, 123, 166, 152, 75, 216, 221], [158, 364, 322, 208, 202, 271, 34, 85, 314, 81, 105, 406, 185, 123, 166, 152, 75, 216, 221], [], [], [], [], [], [], [332, 13, 284, 405, 7, 81, 116, 135], [332, 13, 284, 405, 7, 81, 116, 135], [332, 13, 284, 405, 7, 81, 116, 135], [], [], [], [], [], [], [120, 73, 13, 403, 85, 314, 406, 152, 368, 301], [120, 73, 13, 403, 85, 314, 406, 152, 368, 301], [120, 73, 13, 403, 85, 314, 406, 152, 368, 301], [], [], [], [], [], [], [], [], [], [274, 244], [274, 244], [274, 244], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [120, 73, 13, 364, 402, 405, 403, 202, 34, 125, 274, 85, 314, 406, 185, 244, 152, 216, 221, 135], [120, 73, 13, 364, 402, 405, 403, 202, 34, 125, 274, 85, 314, 406, 185, 244, 152, 216, 221, 135], [], [], [], [], [], [], [], [13, 405, 7, 125, 221, 135], [13, 405, 7, 125, 221, 135], [], [], [], [], [], [], [], [120, 73, 13, 403, 125, 85, 314, 406, 152, 216, 221, 301], [120, 73, 13, 403, 125, 85, 314, 406, 152, 216, 221, 301], [], [], [], [], [], [], [], [], [], [], [125, 274, 244, 221], [125, 274, 244, 221], [], [], [], [], [], [], [], [125, 221], [125, 221], [], [], [39, 120, 158, 73, 88, 13, 364, 284, 275, 322, 405, 403, 7, 184, 34, 274, 85, 314, 81, 406, 170, 185, 244, 166, 152, 397, 116, 216, 135, 301, 64], [], [39, 120, 158, 73, 88, 13, 364, 284, 275, 322, 405, 403, 7, 184, 34, 274, 85, 314, 81, 406, 170, 185, 244, 166, 152, 397, 116, 216, 135, 301, 64], [39, 120, 158, 73, 88, 13, 364, 284, 275, 322, 405, 403, 7, 184, 34, 274, 85, 314, 81, 406, 170, 185, 244, 166, 152, 397, 116, 216, 135, 301, 64], [39, 120, 158, 73, 88, 364, 284, 275, 322, 405, 403, 34, 274, 314, 406, 170, 185, 244, 166, 116, 135], [39, 120, 158, 73, 88, 364, 284, 275, 322, 405, 403, 34, 274, 314, 406, 170, 185, 244, 166, 116, 135], [158, 13, 284, 322, 405, 7, 184, 34, 85, 81, 170, 166, 152, 397, 116, 216, 135, 301, 64], [158, 13, 284, 322, 405, 7, 184, 34, 85, 81, 170, 166, 152, 397, 116, 216, 135, 301, 64], [158, 13, 284, 322, 405, 7, 184, 34, 85, 81, 170, 166, 152, 397, 116, 216, 135, 301, 64], [120, 158, 73, 88, 13, 284, 275, 322, 405, 403, 274, 85, 314, 406, 170, 244, 166, 152, 116, 216, 135, 301], [120, 158, 73, 88, 13, 284, 275, 322, 405, 403, 274, 85, 314, 406, 170, 244, 166, 152, 116, 216, 135, 301], [120, 158, 73, 88, 13, 284, 275, 322, 405, 403, 274, 85, 314, 406, 170, 244, 166, 152, 116, 216, 135, 301], [274, 170, 244], [274, 170, 244], [274, 170, 244], [170], [170], [170], [170], [], [], [], [], [], [158, 322, 208, 202, 271, 34, 85, 81, 105, 123, 166, 152, 75, 216, 221], [], [], [158, 322, 208, 202, 271, 34, 85, 81, 105, 123, 166, 152, 75, 216, 221], [158, 322, 208, 202, 271, 34, 85, 81, 105, 123, 166, 152, 75, 216, 221], [158, 322, 202, 271, 34, 123, 166, 75, 221], [158, 322, 202, 271, 34, 123, 166, 75, 221], [158, 322, 208, 34, 85, 81, 105, 123, 166, 152, 216, 221], [158, 322, 208, 34, 85, 81, 105, 123, 166, 152, 216, 221], [158, 322, 208, 34, 85, 81, 105, 123, 166, 152, 216, 221], [158, 322, 208, 34, 85, 81, 105, 123, 166, 152, 216, 221], [158, 322, 202, 271, 34, 85, 105, 123, 166, 152, 216, 221], [158, 322, 202, 271, 34, 85, 105, 123, 166, 152, 216, 221], [158, 322, 202, 271, 34, 85, 105, 123, 166, 152, 216, 221], [158, 322, 202, 271, 34, 85, 105, 123, 166, 152, 216, 221], [221], [221], [221], [221], [221], [221], [221], [221], [], [], [], [], [], [], [332], [], [332], [332], [332], [332], [332], [], [332], [332], [332], [], [332], [], [332], [], [332], [], [], [], [332], [], [332], [], [332], [], [332], [], [332], [332], [332], [332], [], [], [332], [332], [332], [], [], [332], [], [], [332], [332], [332], [], [332], [], [332], [], [], [], [], [154, 209, 102, 248], [], [154, 209, 102, 248], [154, 102, 248], [154, 102, 248], [209, 248], [209, 248], [], [102], [102], [], [], [], [248], [248], [], [], [], [], [], [], [], [], [], []]
