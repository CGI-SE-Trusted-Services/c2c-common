var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":84,"id":6138,"methods":[{"el":51,"sc":2,"sl":49},{"el":60,"sc":2,"sl":58},{"el":68,"sc":2,"sl":66},{"el":76,"sc":2,"sl":73},{"el":81,"sc":2,"sl":78}],"name":"HashedId3","sl":33}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_134":{"methods":[{"sl":66},{"sl":73}],"name":"Verify deserialization","pass":true,"statements":[{"sl":67},{"sl":75}]},"test_155":{"methods":[{"sl":58},{"sl":73}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":59},{"sl":75}]},"test_22":{"methods":[{"sl":78}],"name":"Verify toString","pass":true,"statements":[{"sl":80}]},"test_349":{"methods":[{"sl":66},{"sl":73}],"name":"Verify deserialization of a hash value","pass":true,"statements":[{"sl":67},{"sl":75}]},"test_368":{"methods":[{"sl":49},{"sl":73}],"name":"Verify that certificate signature R point normalises signature r value to X only","pass":true,"statements":[{"sl":50},{"sl":75}]},"test_43":{"methods":[{"sl":58},{"sl":73}],"name":"Verify the correct octet length of the HashedId3","pass":true,"statements":[{"sl":59},{"sl":75}]},"test_457":{"methods":[{"sl":58},{"sl":73}],"name":"Verify that version 2 Signed CAM Unrecognized Certificates Message  certificate, certificate_chain and certificate_digest_with_ecdsap256","pass":true,"statements":[{"sl":59},{"sl":75}]},"test_540":{"methods":[{"sl":58},{"sl":73}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":59},{"sl":75}]},"test_579":{"methods":[{"sl":58},{"sl":73}],"name":"Generate version 2 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":59},{"sl":75}]},"test_899":{"methods":[{"sl":58},{"sl":73}],"name":"Generate version 1 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":59},{"sl":75}]},"test_917":{"methods":[{"sl":58},{"sl":73}],"name":"Verify serialization of a hash value","pass":true,"statements":[{"sl":59},{"sl":75}]},"test_930":{"methods":[{"sl":58},{"sl":73},{"sl":78}],"name":"Verify toString","pass":true,"statements":[{"sl":59},{"sl":75},{"sl":80}]},"test_94":{"methods":[{"sl":66},{"sl":73}],"name":"Verify the correct octet length of the HashedId3","pass":true,"statements":[{"sl":67},{"sl":75}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
