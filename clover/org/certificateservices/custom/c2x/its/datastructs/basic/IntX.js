var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":194,"id":6227,"methods":[{"el":44,"sc":2,"sl":42},{"el":53,"sc":2,"sl":51},{"el":58,"sc":2,"sl":58},{"el":66,"sc":2,"sl":64},{"el":74,"sc":2,"sl":72},{"el":82,"sc":2,"sl":80},{"el":112,"sc":2,"sl":89},{"el":120,"sc":2,"sl":116},{"el":135,"sc":2,"sl":122},{"el":146,"sc":2,"sl":143},{"el":161,"sc":2,"sl":151},{"el":169,"sc":2,"sl":163},{"el":186,"sc":2,"sl":171},{"el":191,"sc":2,"sl":188}],"name":"IntX","sl":33}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1007":{"methods":[{"sl":42},{"sl":89}],"name":"Verify that encodeValue encodes the value 0x0888 properly into: 0x8888","pass":true,"statements":[{"sl":43},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101}]},"test_1010":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify that multiple payload works for version 1 of secured DENM message","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_1011":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 129 where: 1 is removed becomes: 1","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_1012":{"methods":[{"sl":58},{"sl":151}],"name":"Verify getNumberOfOctets for number: 241 has number of octets: 5","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_102":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 2 Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_105":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_109":{"methods":[{"sl":64}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":65}]},"test_114":{"methods":[{"sl":58},{"sl":151}],"name":"Verify getNumberOfOctets for number: 249 has number of octets: 6","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_13":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151},{"sl":188}],"name":"Verify interoperability with version 2 certificates generated by ETSI TS 10309603 test suite.","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160},{"sl":190}]},"test_130":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify that deserialize decodes the value 0x8888 properly into: 2184","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_134":{"methods":[{"sl":58},{"sl":64},{"sl":72},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":73},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_137":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_139":{"methods":[{"sl":64}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":65}]},"test_142":{"methods":[{"sl":42},{"sl":89}],"name":"Verify that encodeValue encodes the value 0x00 properly into: 0x00","pass":true,"statements":[{"sl":43},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101}]},"test_15":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_158":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify that multiple payload works for version 1 of secured CAM message","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_170":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_179":{"methods":[{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":190}]},"test_180":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify encodeVariableSizeVector encodes a small IntX vector properly","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_203":{"methods":[{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":190}]},"test_208":{"methods":[{"sl":51}],"name":"Verify that addHeader adds the header value in correct order","pass":true,"statements":[{"sl":52}]},"test_216":{"methods":[{"sl":42},{"sl":89}],"name":"Verify that encodeValue throws NumberFormatException","pass":true,"statements":[{"sl":43},{"sl":90},{"sl":91},{"sl":92},{"sl":93}]},"test_22":{"methods":[{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":190}]},"test_221":{"methods":[{"sl":163}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":165},{"sl":166},{"sl":167},{"sl":168}]},"test_226":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_242":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":104},{"sl":105},{"sl":106},{"sl":109},{"sl":111},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_259":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_28":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 1 RootCA without Encryption Key and Geographic region and verify that all other attributes are set.","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_281":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_283":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 1 Authorization Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_287":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_295":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 1 Enrollment Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_306":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_319":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_33":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_350":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_357":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with uncompressed ecc point","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_359":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with x_coordinate_only ecc point","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_361":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_363":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_368":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify that certificate signature R point normalises signature r value to X only","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_37":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 2 Enrollment Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_38":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_398":{"methods":[{"sl":58},{"sl":151}],"name":"Verify getNumberOfOctets for number: 129 has number of octets: 2","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_407":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify decodeVariableSizeVector decodes an empty vector propery","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_414":{"methods":[{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_417":{"methods":[{"sl":51},{"sl":64}],"name":"Verify long value constructor","pass":true,"statements":[{"sl":52},{"sl":65}]},"test_418":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_430":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 255 where: 8 is removed becomes: 0","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_431":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify decodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_436":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_438":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_448":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 1 Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_457":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify that version 2 Signed CAM Unrecognized Certificates Message  certificate, certificate_chain and certificate_digest_with_ecdsap256","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_464":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly no signature trailer field","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_482":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 250 where: 5 is removed becomes: 2","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_503":{"methods":[{"sl":42},{"sl":89},{"sl":116}],"name":"Verify that serialize ecodes the value 0x0888 properly into: 0x8888","pass":true,"statements":[{"sl":43},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_505":{"methods":[{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":190}]},"test_510":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 127 where: 1 is removed becomes: 127","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_511":{"methods":[{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_532":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify that deserialize decodes the value 0x01 properly into: 1","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_534":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with compressed_lsb_y_1 ecc point","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_536":{"methods":[{"sl":42},{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":43},{"sl":190}]},"test_537":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify that deserialize decodes the value 0x00 properly into: 0","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_540":{"methods":[{"sl":72}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":73}]},"test_543":{"methods":[{"sl":58},{"sl":151}],"name":"Verify getNumberOfOctets for number: 1 has number of octets: 1","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_545":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_551":{"methods":[{"sl":42},{"sl":64}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":43},{"sl":65}]},"test_559":{"methods":[{"sl":42},{"sl":89}],"name":"Verify that encodeValue encodes the value 0xdb3bfd properly into: 0xe0db3bfd","pass":true,"statements":[{"sl":43},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101}]},"test_569":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_570":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 254 where: 6 is removed becomes: 2","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_572":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 1 Authorization Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_576":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 1 RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_579":{"methods":[{"sl":51},{"sl":80},{"sl":89},{"sl":116}],"name":"Generate version 2 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":52},{"sl":81},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_588":{"methods":[{"sl":58},{"sl":151}],"name":"Verify getNumberOfOctets for number: 254 has number of octets: 8","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_603":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 1 where: 1 is removed becomes: 1","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_605":{"methods":[{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_611":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 193 where: 2 is removed becomes: 1","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_617":{"methods":[{"sl":58},{"sl":151}],"name":"Verify getNumberOfOctets for number: 209 has number of octets: 3","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_628":{"methods":[{"sl":42},{"sl":163},{"sl":171}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":43},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":173},{"sl":175},{"sl":177},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185}]},"test_634":{"methods":[{"sl":42},{"sl":89}],"name":"Verify that encodeValue encodes the value 0x10000 properly into: 0xc10000","pass":true,"statements":[{"sl":43},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101}]},"test_637":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_643":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serializeTotalSignedTrailerLength calculates signature trailing fields correctly signature trailer field with compressed_lsb_y_0 ecc point","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_661":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_670":{"methods":[{"sl":51},{"sl":80},{"sl":89},{"sl":116}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.[1]","pass":true,"statements":[{"sl":52},{"sl":81},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_681":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify that deserialize decodes the value 0x0a properly into: 10","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_685":{"methods":[{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":190}]},"test_686":{"methods":[{"sl":51},{"sl":80},{"sl":89},{"sl":116}],"name":"Generate version 2 Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":52},{"sl":81},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_691":{"methods":[{"sl":58},{"sl":151}],"name":"Verify getNumberOfOctets for number: 233 has number of octets: 4","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_699":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":104},{"sl":105},{"sl":106},{"sl":109},{"sl":111},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_71":{"methods":[{"sl":163}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":165},{"sl":166},{"sl":167},{"sl":168}]},"test_715":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_716":{"methods":[{"sl":42},{"sl":89},{"sl":116}],"name":"Verify that serialize ecodes the value 0x0a properly into: 0x0a","pass":true,"statements":[{"sl":43},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_718":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_723":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 1 Enrollment Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_730":{"methods":[{"sl":42},{"sl":163},{"sl":171}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":43},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":173},{"sl":175},{"sl":177},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185}]},"test_735":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_746":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_764":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 1 Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_766":{"methods":[{"sl":51}],"name":"Verify that invalid protocol version for message type and its_aid throws IllegalArgumentException","pass":true,"statements":[{"sl":52}]},"test_769":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_77":{"methods":[{"sl":42},{"sl":64}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":43},{"sl":65}]},"test_773":{"methods":[{"sl":42},{"sl":163},{"sl":171}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":43},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":173},{"sl":175},{"sl":177},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185}]},"test_798":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 2 RootCA without Encryption Key and Geographic region and verify that all other attributes are set.","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_802":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 194 where: 2 is removed becomes: 2","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_805":{"methods":[{"sl":51},{"sl":72},{"sl":80}],"name":"Verify asInt and asLong getters","pass":true,"statements":[{"sl":52},{"sl":73},{"sl":81}]},"test_808":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify decodeVariableSizeVector decodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_819":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 2 Authorization Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_824":{"methods":[{"sl":42},{"sl":163},{"sl":171}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":43},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":173},{"sl":175},{"sl":177},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185}]},"test_827":{"methods":[{"sl":42},{"sl":89}],"name":"Verify that encodeValue encodes the value 0x0a properly into: 0x0a","pass":true,"statements":[{"sl":43},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101}]},"test_833":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 226 where: 3 is removed becomes: 2","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_834":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 255 where: 7 is removed becomes: 1","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_844":{"methods":[{"sl":58},{"sl":151}],"name":"Verify getNumberOfOctets for number: 65 has number of octets: 1","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_848":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify encodeVariableSizeVector encodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_852":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Generate version 1 Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_853":{"methods":[{"sl":51},{"sl":58},{"sl":64},{"sl":89},{"sl":116},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":104},{"sl":105},{"sl":106},{"sl":109},{"sl":111},{"sl":118},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":131},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_855":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 1 Authorization Ticket with a certificate as signer info","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_860":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 2 RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_872":{"methods":[{"sl":58},{"sl":151}],"name":"Verify getNumberOfOctets for number: 253 has number of octets: 7","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_884":{"methods":[{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":190}]},"test_899":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Generate version 1 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_90":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.[0]","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_904":{"methods":[{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":190}]},"test_914":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify decodeVariableSizeVector decodes a small IntX vector properly","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_92":{"methods":[{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":190}]},"test_928":{"methods":[{"sl":58},{"sl":151}],"name":"Verify getNumberOfOctets for number: 209 has number of octets: 3","pass":true,"statements":[{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":160}]},"test_932":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify that serializeDataToBeSignedInSecuredMessage serializes according to signature verification it ETSI specifification","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_939":{"methods":[{"sl":58},{"sl":143}],"name":"Verify getFirstByteValue for number: 239 where: 4 is removed becomes: 15","pass":true,"statements":[{"sl":144},{"sl":145}]},"test_941":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify encodeVariableSizeVector encodes an empty vector propery","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_943":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serializeTotalPayload calculates signature payload fields correctly","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_950":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_964":{"methods":[{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":190}]},"test_97":{"methods":[{"sl":58},{"sl":64},{"sl":122},{"sl":143},{"sl":151}],"name":"Verify deserialization","pass":true,"statements":[{"sl":65},{"sl":124},{"sl":125},{"sl":127},{"sl":128},{"sl":129},{"sl":130},{"sl":134},{"sl":144},{"sl":145},{"sl":152},{"sl":153},{"sl":154},{"sl":155},{"sl":160}]},"test_972":{"methods":[{"sl":42},{"sl":163},{"sl":171}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":43},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":173},{"sl":175},{"sl":177},{"sl":179},{"sl":180},{"sl":183},{"sl":184},{"sl":185}]},"test_973":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 2 Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_978":{"methods":[{"sl":188}],"name":"Verify toString","pass":true,"statements":[{"sl":190}]},"test_98":{"methods":[{"sl":42},{"sl":89},{"sl":116}],"name":"Verify that serialize ecodes the value 0x00 properly into: 0x00","pass":true,"statements":[{"sl":43},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_988":{"methods":[{"sl":89},{"sl":116}],"name":"Verify serialization","pass":true,"statements":[{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_989":{"methods":[{"sl":42},{"sl":89}],"name":"Verify that encodeValue encodes the value 0x80 properly into: 0x8080","pass":true,"statements":[{"sl":43},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101}]},"test_994":{"methods":[{"sl":51},{"sl":89},{"sl":116}],"name":"Verify encodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]},"test_995":{"methods":[{"sl":42},{"sl":51},{"sl":64},{"sl":89},{"sl":116}],"name":"Generate version 1 Enrollment Credential with a certificate as signer info","pass":true,"statements":[{"sl":43},{"sl":52},{"sl":65},{"sl":90},{"sl":91},{"sl":92},{"sl":95},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":118}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [773, 142, 824, 989, 448, 559, 77, 855, 628, 798, 634, 295, 819, 37, 576, 730, 216, 98, 102, 973, 723, 551, 536, 827, 764, 860, 1007, 28, 503, 283, 716, 995, 572, 972], [773, 142, 824, 989, 448, 559, 77, 855, 628, 798, 634, 295, 819, 37, 576, 730, 216, 98, 102, 973, 723, 551, 536, 827, 764, 860, 1007, 28, 503, 283, 716, 995, 572, 972], [], [], [], [], [], [], [], [448, 569, 281, 853, 319, 158, 805, 686, 361, 855, 13, 798, 180, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 637, 37, 576, 208, 943, 306, 102, 90, 438, 973, 848, 464, 852, 723, 766, 431, 950, 643, 735, 1010, 534, 764, 137, 417, 860, 899, 28, 941, 283, 995, 572, 994, 368], [448, 569, 281, 853, 319, 158, 805, 686, 361, 855, 13, 798, 180, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 637, 37, 576, 208, 943, 306, 102, 90, 438, 973, 848, 464, 852, 723, 766, 431, 950, 643, 735, 1010, 534, 764, 137, 417, 860, 899, 28, 941, 283, 995, 572, 994, 368], [], [], [], [], [], [130, 570, 853, 617, 1012, 532, 114, 361, 13, 242, 699, 363, 170, 691, 914, 105, 407, 15, 482, 430, 808, 603, 436, 38, 769, 833, 637, 418, 287, 1011, 802, 398, 588, 306, 134, 97, 510, 543, 718, 431, 928, 661, 611, 681, 746, 939, 872, 350, 834, 537, 844, 715, 545, 368], [], [], [], [], [], [130, 448, 853, 77, 532, 361, 855, 13, 798, 242, 699, 363, 170, 914, 105, 407, 15, 295, 808, 819, 436, 38, 769, 637, 37, 418, 287, 576, 306, 102, 134, 97, 973, 139, 723, 718, 431, 661, 551, 109, 681, 764, 417, 860, 746, 28, 283, 350, 995, 572, 537, 715, 545, 368], [130, 448, 853, 77, 532, 361, 855, 13, 798, 242, 699, 363, 170, 914, 105, 407, 15, 295, 808, 819, 436, 38, 769, 637, 37, 418, 287, 576, 306, 102, 134, 97, 973, 139, 723, 718, 431, 661, 551, 109, 681, 764, 417, 860, 746, 28, 283, 350, 995, 572, 537, 715, 545, 368], [], [], [], [], [], [], [805, 134, 540], [805, 134, 540], [], [], [], [], [], [], [805, 686, 670, 579], [805, 686, 670, 579], [], [], [], [], [], [], [], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 216, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 216, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 216, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 216, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [216], [], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [142, 989, 448, 569, 281, 853, 319, 559, 158, 686, 361, 855, 13, 798, 180, 634, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 827, 764, 137, 860, 899, 1007, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [], [], [853, 242, 699], [853, 242, 699], [853, 242, 699], [], [], [853, 242, 699], [], [853, 242, 699], [], [], [], [], [448, 569, 281, 853, 319, 158, 686, 361, 855, 13, 798, 180, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 764, 137, 860, 899, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [], [448, 569, 281, 853, 319, 158, 686, 361, 855, 13, 798, 180, 359, 242, 699, 259, 457, 357, 105, 33, 15, 670, 295, 932, 819, 226, 579, 414, 637, 37, 576, 98, 943, 306, 102, 90, 438, 973, 848, 464, 852, 605, 723, 431, 950, 643, 735, 1010, 534, 764, 137, 860, 899, 28, 503, 941, 283, 716, 511, 995, 572, 994, 988, 368], [], [], [], [130, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 306, 134, 97, 718, 431, 661, 681, 746, 350, 537, 715, 545, 368], [], [130, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 306, 134, 97, 718, 431, 661, 681, 746, 350, 537, 715, 545, 368], [130, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 306, 134, 97, 718, 431, 661, 681, 746, 350, 537, 715, 545, 368], [], [130, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 306, 134, 97, 718, 431, 661, 681, 746, 350, 537, 715, 545, 368], [130, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 306, 134, 97, 718, 431, 661, 681, 746, 350, 537, 715, 545, 368], [130, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 306, 134, 97, 718, 431, 661, 681, 746, 350, 537, 715, 545, 368], [130, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 306, 134, 97, 718, 431, 661, 681, 746, 350, 537, 715, 545, 368], [130, 853, 242, 699, 170, 15, 38, 134, 431, 661, 715, 545], [], [], [130, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 306, 134, 97, 718, 431, 661, 681, 746, 350, 537, 715, 545, 368], [], [], [], [], [], [], [], [], [130, 570, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 482, 430, 808, 603, 436, 38, 769, 833, 637, 418, 287, 1011, 802, 306, 134, 97, 510, 718, 431, 661, 611, 681, 746, 939, 350, 834, 537, 715, 545, 368], [130, 570, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 482, 430, 808, 603, 436, 38, 769, 833, 637, 418, 287, 1011, 802, 306, 134, 97, 510, 718, 431, 661, 611, 681, 746, 939, 350, 834, 537, 715, 545, 368], [130, 570, 853, 532, 361, 13, 242, 699, 363, 170, 914, 105, 407, 15, 482, 430, 808, 603, 436, 38, 769, 833, 637, 418, 287, 1011, 802, 306, 134, 97, 510, 718, 431, 661, 611, 681, 746, 939, 350, 834, 537, 715, 545, 368], [], [], [], [], [], [130, 853, 617, 1012, 532, 114, 361, 13, 242, 699, 363, 170, 691, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 398, 588, 306, 134, 97, 543, 718, 431, 928, 661, 681, 746, 872, 350, 537, 844, 715, 545, 368], [130, 853, 617, 1012, 532, 114, 361, 13, 242, 699, 363, 170, 691, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 398, 588, 306, 134, 97, 543, 718, 431, 928, 661, 681, 746, 872, 350, 537, 844, 715, 545, 368], [130, 853, 617, 1012, 532, 114, 361, 13, 242, 699, 363, 170, 691, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 398, 588, 306, 134, 97, 543, 718, 431, 928, 661, 681, 746, 872, 350, 537, 844, 715, 545, 368], [130, 853, 617, 1012, 532, 114, 361, 13, 242, 699, 363, 170, 691, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 398, 588, 306, 134, 97, 543, 718, 431, 928, 661, 681, 746, 872, 350, 537, 844, 715, 545, 368], [130, 853, 617, 1012, 532, 114, 361, 13, 242, 699, 363, 170, 691, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 398, 588, 306, 134, 97, 543, 718, 431, 928, 661, 681, 746, 872, 350, 537, 844, 715, 545, 368], [], [130, 853, 617, 1012, 114, 242, 699, 170, 691, 15, 38, 398, 588, 134, 431, 928, 661, 872, 715, 545], [], [], [130, 853, 617, 1012, 532, 114, 361, 13, 242, 699, 363, 170, 691, 914, 105, 407, 15, 808, 436, 38, 769, 637, 418, 287, 398, 588, 306, 134, 97, 543, 718, 431, 928, 661, 681, 746, 872, 350, 537, 844, 715, 545, 368], [], [], [773, 824, 71, 628, 221, 730, 972], [], [773, 824, 71, 628, 221, 730, 972], [773, 824, 71, 628, 221, 730, 972], [773, 824, 71, 628, 221, 730, 972], [773, 824, 71, 628, 221, 730, 972], [], [], [773, 824, 628, 730, 972], [], [773, 824, 628, 730, 972], [], [773, 824, 628, 730, 972], [], [773, 824, 628, 730, 972], [], [773, 824, 628, 730, 972], [773, 824, 628, 730, 972], [], [], [773, 824, 628, 730, 972], [773, 824, 628, 730, 972], [773, 824, 628, 730, 972], [], [], [505, 22, 13, 978, 884, 685, 92, 964, 904, 203, 536, 179], [], [505, 22, 13, 978, 884, 685, 92, 964, 904, 203, 536, 179], [], [], [], []]
