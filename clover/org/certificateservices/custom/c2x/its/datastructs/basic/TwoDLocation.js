var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":143,"id":1955,"methods":[{"el":62,"sc":2,"sl":53},{"el":70,"sc":2,"sl":69},{"el":79,"sc":2,"sl":77},{"el":88,"sc":2,"sl":86},{"el":95,"sc":2,"sl":91},{"el":104,"sc":2,"sl":97},{"el":114,"sc":2,"sl":107},{"el":131,"sc":2,"sl":117},{"el":138,"sc":2,"sl":134}],"name":"TwoDLocation","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_101":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_107":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_127":{"methods":[{"sl":53},{"sl":91}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_13":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_140":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":128},{"sl":129},{"sl":130}]},"test_148":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_15":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":57},{"sl":58},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_161":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_187":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":130}]},"test_194":{"methods":[{"sl":107}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113}]},"test_20":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_208":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_21":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_216":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_22":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_221":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_239":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_24":{"methods":[{"sl":69},{"sl":97}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_251":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_256":{"methods":[{"sl":69},{"sl":97}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_258":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_26":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_27":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_271":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_273":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_288":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_298":{"methods":[{"sl":53},{"sl":107}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113}]},"test_299":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_332":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_36":{"methods":[{"sl":69},{"sl":97}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_370":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_377":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_390":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":128},{"sl":129},{"sl":130}]},"test_4":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_41":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_50":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_52":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_55":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_66":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_78":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_80":{"methods":[{"sl":53}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61}]},"test_92":{"methods":[{"sl":69},{"sl":97}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_93":{"methods":[{"sl":53},{"sl":77},{"sl":86},{"sl":91}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87},{"sl":93},{"sl":94}]},"test_97":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [80, 127, 271, 15, 187, 208, 221, 161, 140, 13, 148, 273, 299, 52, 258, 93, 101, 216, 390, 298, 21], [80, 127, 271, 15, 187, 208, 221, 161, 140, 13, 148, 273, 299, 52, 258, 93, 101, 216, 390, 298, 21], [15], [], [80, 127, 271, 15, 187, 208, 221, 161, 140, 13, 148, 273, 299, 52, 258, 93, 101, 216, 390, 298, 21], [15], [], [80, 127, 271, 15, 187, 208, 221, 161, 140, 13, 148, 273, 299, 52, 258, 93, 101, 216, 390, 298, 21], [80, 127, 271, 15, 187, 208, 221, 161, 140, 13, 148, 273, 299, 52, 258, 93, 101, 216, 390, 298, 21], [], [], [], [], [], [], [], [251, 26, 55, 92, 256, 107, 239, 4, 36, 50, 1, 97, 24, 20, 41, 22], [], [], [], [], [], [], [], [251, 15, 221, 161, 239, 4, 50, 41, 258, 93, 216], [251, 15, 221, 161, 239, 4, 50, 41, 258, 93, 216], [], [], [], [], [], [], [], [251, 15, 221, 161, 239, 4, 50, 41, 258, 93, 216], [251, 15, 221, 161, 239, 4, 50, 41, 258, 93, 216], [], [], [], [332, 127, 26, 271, 208, 66, 1, 377, 97, 13, 148, 20, 93, 370], [], [332, 127, 26, 271, 208, 66, 1, 377, 97, 13, 148, 20, 93, 370], [332, 127, 26, 271, 208, 66, 1, 377, 97, 13, 148, 20, 93, 370], [], [], [251, 26, 55, 92, 256, 107, 239, 4, 36, 50, 1, 97, 24, 20, 41, 22], [], [251, 26, 55, 92, 256, 107, 239, 4, 36, 50, 1, 97, 24, 20, 41, 22], [251, 26, 55, 92, 256, 107, 239, 4, 36, 50, 1, 97, 24, 20, 41, 22], [251, 26, 55, 92, 256, 107, 239, 4, 36, 50, 1, 97, 24, 20, 41, 22], [251, 26, 55, 92, 256, 107, 239, 4, 36, 50, 1, 97, 24, 20, 41, 22], [251, 26, 55, 92, 256, 107, 239, 4, 36, 50, 1, 97, 24, 20, 41, 22], [], [], [], [187, 194, 140, 299, 390, 298, 21], [], [187, 194, 140, 299, 390, 298, 21], [187, 194, 140, 299, 390, 298, 21], [187, 194, 140, 299, 390, 298, 21], [187, 194, 140, 299, 390, 298, 21], [187, 194, 140, 299, 390, 298, 21], [], [], [], [187, 140, 299, 390, 21], [], [187, 140, 299, 390, 21], [], [187, 140, 299, 390, 21], [], [187, 140, 299, 390, 21], [], [187, 140, 299, 390, 21], [187, 140, 299, 390, 21], [187, 299, 21], [187, 140, 299, 390, 21], [140, 299, 390, 21], [187, 140, 299, 390, 21], [], [], [], [27, 78, 273, 52, 288, 101], [], [27, 78, 273, 52, 288, 101], [], [], [], [], [], [], []]
