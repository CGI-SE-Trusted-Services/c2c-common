var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":143,"id":1955,"methods":[{"el":62,"sc":2,"sl":53},{"el":70,"sc":2,"sl":69},{"el":79,"sc":2,"sl":77},{"el":88,"sc":2,"sl":86},{"el":95,"sc":2,"sl":91},{"el":104,"sc":2,"sl":97},{"el":114,"sc":2,"sl":107},{"el":131,"sc":2,"sl":117},{"el":138,"sc":2,"sl":134}],"name":"TwoDLocation","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_104":{"methods":[{"sl":69},{"sl":97}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_112":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_123":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":128},{"sl":129},{"sl":130}]},"test_124":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_125":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_13":{"methods":[{"sl":53},{"sl":91}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_138":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_147":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_148":{"methods":[{"sl":69},{"sl":97}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_149":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_151":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_152":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_16":{"methods":[{"sl":69},{"sl":97}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_163":{"methods":[{"sl":53}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61}]},"test_179":{"methods":[{"sl":53},{"sl":107}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113}]},"test_187":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_197":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_204":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_217":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_219":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_222":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_226":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_239":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_241":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_261":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_27":{"methods":[{"sl":69},{"sl":97}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_31":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_313":{"methods":[{"sl":53},{"sl":77},{"sl":86},{"sl":91}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87},{"sl":93},{"sl":94}]},"test_321":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_33":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_35":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":57},{"sl":58},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_359":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_364":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_369":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_384":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_39":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":128},{"sl":129},{"sl":130}]},"test_401":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_68":{"methods":[{"sl":107}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113}]},"test_77":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_8":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":130}]},"test_81":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_90":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_92":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_94":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_99":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [123, 8, 217, 364, 149, 13, 90, 222, 321, 197, 147, 384, 99, 204, 179, 94, 369, 163, 39, 313, 35], [123, 8, 217, 364, 149, 13, 90, 222, 321, 197, 147, 384, 99, 204, 179, 94, 369, 163, 39, 313, 35], [35], [], [123, 8, 217, 364, 149, 13, 90, 222, 321, 197, 147, 384, 99, 204, 179, 94, 369, 163, 39, 313, 35], [35], [], [123, 8, 217, 364, 149, 13, 90, 222, 321, 197, 147, 384, 99, 204, 179, 94, 369, 163, 39, 313, 35], [123, 8, 217, 364, 149, 13, 90, 222, 321, 197, 147, 384, 99, 204, 179, 94, 369, 163, 39, 313, 35], [], [], [], [], [], [], [], [239, 138, 219, 124, 104, 31, 151, 92, 16, 27, 125, 81, 77, 112, 148, 187], [], [], [], [], [], [], [], [219, 124, 217, 31, 147, 99, 369, 77, 313, 187, 35], [219, 124, 217, 31, 147, 99, 369, 77, 313, 187, 35], [], [], [], [], [], [], [], [219, 124, 217, 31, 147, 99, 369, 77, 313, 187, 35], [219, 124, 217, 31, 147, 99, 369, 77, 313, 187, 35], [], [], [], [239, 359, 364, 13, 90, 241, 151, 226, 152, 384, 94, 125, 112, 313], [], [239, 359, 364, 13, 90, 241, 151, 226, 152, 384, 94, 125, 112, 313], [239, 359, 364, 13, 90, 241, 151, 226, 152, 384, 94, 125, 112, 313], [], [], [239, 138, 219, 124, 104, 31, 151, 92, 16, 27, 125, 81, 77, 112, 148, 187], [], [239, 138, 219, 124, 104, 31, 151, 92, 16, 27, 125, 81, 77, 112, 148, 187], [239, 138, 219, 124, 104, 31, 151, 92, 16, 27, 125, 81, 77, 112, 148, 187], [239, 138, 219, 124, 104, 31, 151, 92, 16, 27, 125, 81, 77, 112, 148, 187], [239, 138, 219, 124, 104, 31, 151, 92, 16, 27, 125, 81, 77, 112, 148, 187], [239, 138, 219, 124, 104, 31, 151, 92, 16, 27, 125, 81, 77, 112, 148, 187], [], [], [], [123, 8, 149, 222, 179, 68, 39], [], [123, 8, 149, 222, 179, 68, 39], [123, 8, 149, 222, 179, 68, 39], [123, 8, 149, 222, 179, 68, 39], [123, 8, 149, 222, 179, 68, 39], [123, 8, 149, 222, 179, 68, 39], [], [], [], [123, 8, 149, 222, 39], [], [123, 8, 149, 222, 39], [], [123, 8, 149, 222, 39], [], [123, 8, 149, 222, 39], [], [123, 8, 149, 222, 39], [123, 8, 149, 222, 39], [8, 149, 222], [123, 8, 149, 222, 39], [123, 149, 222, 39], [123, 8, 149, 222, 39], [], [], [], [401, 33, 321, 197, 204, 261], [], [401, 33, 321, 197, 204, 261], [], [], [], [], [], [], []]
