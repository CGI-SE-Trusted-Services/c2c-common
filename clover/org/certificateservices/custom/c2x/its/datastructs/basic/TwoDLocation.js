var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":143,"id":1955,"methods":[{"el":62,"sc":2,"sl":53},{"el":70,"sc":2,"sl":69},{"el":79,"sc":2,"sl":77},{"el":88,"sc":2,"sl":86},{"el":95,"sc":2,"sl":91},{"el":104,"sc":2,"sl":97},{"el":114,"sc":2,"sl":107},{"el":131,"sc":2,"sl":117},{"el":138,"sc":2,"sl":134}],"name":"TwoDLocation","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_1":{"methods":[{"sl":53},{"sl":77},{"sl":86},{"sl":91}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87},{"sl":93},{"sl":94}]},"test_119":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_124":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_14":{"methods":[{"sl":69},{"sl":97}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_147":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_148":{"methods":[{"sl":69},{"sl":97}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_149":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_155":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_164":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_172":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_177":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_184":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_188":{"methods":[{"sl":107}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113}]},"test_193":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_203":{"methods":[{"sl":53},{"sl":91}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_204":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_211":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_220":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_224":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_229":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_231":{"methods":[{"sl":69},{"sl":97}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_248":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":128},{"sl":129},{"sl":130}]},"test_269":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_27":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_270":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_272":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_289":{"methods":[{"sl":69},{"sl":97}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_316":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_319":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_32":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_327":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_33":{"methods":[{"sl":53}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61}]},"test_342":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_352":{"methods":[{"sl":53},{"sl":107}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113}]},"test_363":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_39":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_393":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_50":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_54":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_57":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_85":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":130}]},"test_91":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":57},{"sl":58},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_94":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":128},{"sl":129},{"sl":130}]},"test_99":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [54, 147, 352, 27, 164, 91, 94, 269, 85, 203, 33, 204, 342, 248, 1, 319, 393, 363, 99, 149, 184], [54, 147, 352, 27, 164, 91, 94, 269, 85, 203, 33, 204, 342, 248, 1, 319, 393, 363, 99, 149, 184], [91], [], [54, 147, 352, 27, 164, 91, 94, 269, 85, 203, 33, 204, 342, 248, 1, 319, 393, 363, 99, 149, 184], [91], [], [54, 147, 352, 27, 164, 91, 94, 269, 85, 203, 33, 204, 342, 248, 1, 319, 393, 363, 99, 149, 184], [54, 147, 352, 27, 164, 91, 94, 269, 85, 203, 33, 204, 342, 248, 1, 319, 393, 363, 99, 149, 184], [], [], [], [], [], [], [], [289, 177, 148, 57, 231, 50, 272, 119, 193, 39, 211, 0, 14, 124, 155, 220], [], [], [], [], [], [], [], [27, 177, 91, 204, 1, 193, 39, 211, 363, 149, 220], [27, 177, 91, 204, 1, 193, 39, 211, 363, 149, 220], [], [], [], [], [], [], [], [27, 177, 91, 204, 1, 193, 39, 211, 363, 149, 220], [27, 177, 91, 204, 1, 193, 39, 211, 363, 149, 220], [], [], [], [147, 327, 57, 269, 203, 224, 1, 119, 319, 270, 0, 99, 124, 172], [], [147, 327, 57, 269, 203, 224, 1, 119, 319, 270, 0, 99, 124, 172], [147, 327, 57, 269, 203, 224, 1, 119, 319, 270, 0, 99, 124, 172], [], [], [289, 177, 148, 57, 231, 50, 272, 119, 193, 39, 211, 0, 14, 124, 155, 220], [], [289, 177, 148, 57, 231, 50, 272, 119, 193, 39, 211, 0, 14, 124, 155, 220], [289, 177, 148, 57, 231, 50, 272, 119, 193, 39, 211, 0, 14, 124, 155, 220], [289, 177, 148, 57, 231, 50, 272, 119, 193, 39, 211, 0, 14, 124, 155, 220], [289, 177, 148, 57, 231, 50, 272, 119, 193, 39, 211, 0, 14, 124, 155, 220], [289, 177, 148, 57, 231, 50, 272, 119, 193, 39, 211, 0, 14, 124, 155, 220], [], [], [], [54, 352, 188, 94, 85, 248, 393], [], [54, 352, 188, 94, 85, 248, 393], [54, 352, 188, 94, 85, 248, 393], [54, 352, 188, 94, 85, 248, 393], [54, 352, 188, 94, 85, 248, 393], [54, 352, 188, 94, 85, 248, 393], [], [], [], [54, 94, 85, 248, 393], [], [54, 94, 85, 248, 393], [], [54, 94, 85, 248, 393], [], [54, 94, 85, 248, 393], [], [54, 94, 85, 248, 393], [54, 94, 85, 248, 393], [54, 85, 393], [54, 94, 85, 248, 393], [54, 94, 248, 393], [54, 94, 85, 248, 393], [], [], [], [164, 229, 342, 32, 184, 316], [], [164, 229, 342, 32, 184, 316], [], [], [], [], [], [], []]
