var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":143,"id":6823,"methods":[{"el":62,"sc":2,"sl":53},{"el":70,"sc":2,"sl":69},{"el":79,"sc":2,"sl":77},{"el":88,"sc":2,"sl":86},{"el":95,"sc":2,"sl":91},{"el":104,"sc":2,"sl":97},{"el":114,"sc":2,"sl":107},{"el":131,"sc":2,"sl":117},{"el":138,"sc":2,"sl":134}],"name":"TwoDLocation","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_105":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_111":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_119":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_12":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_13":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_150":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_167":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_178":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_187":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_243":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_279":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":57},{"sl":58},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_285":{"methods":[{"sl":69},{"sl":97}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_287":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_292":{"methods":[{"sl":69},{"sl":97}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_3":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_300":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_395":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_399":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_4":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_427":{"methods":[{"sl":53}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61}]},"test_456":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":130}]},"test_501":{"methods":[{"sl":53},{"sl":77},{"sl":86},{"sl":91}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87},{"sl":93},{"sl":94}]},"test_575":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_578":{"methods":[{"sl":107}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113}]},"test_594":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_622":{"methods":[{"sl":69},{"sl":97}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_677":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_758":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":128},{"sl":129},{"sl":130}]},"test_761":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_793":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_804":{"methods":[{"sl":53},{"sl":107}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113}]},"test_806":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_832":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_846":{"methods":[{"sl":69},{"sl":97}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_858":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_863":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_872":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_891":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_9":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_913":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_915":{"methods":[{"sl":53},{"sl":91}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_948":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_957":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":128},{"sl":129},{"sl":130}]},"test_965":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_966":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [395, 150, 243, 832, 804, 456, 119, 427, 167, 279, 501, 915, 872, 957, 9, 758, 948, 966, 13, 806, 178], [395, 150, 243, 832, 804, 456, 119, 427, 167, 279, 501, 915, 872, 957, 9, 758, 948, 966, 13, 806, 178], [279], [], [395, 150, 243, 832, 804, 456, 119, 427, 167, 279, 501, 915, 872, 957, 9, 758, 948, 966, 13, 806, 178], [279], [], [395, 150, 243, 832, 804, 456, 119, 427, 167, 279, 501, 915, 872, 957, 9, 758, 948, 966, 13, 806, 178], [395, 150, 243, 832, 804, 456, 119, 427, 167, 279, 501, 915, 872, 957, 9, 758, 948, 966, 13, 806, 178], [], [], [], [], [], [], [], [575, 292, 913, 399, 622, 858, 300, 4, 863, 677, 285, 105, 594, 111, 846, 965], [], [], [], [], [], [], [], [395, 150, 399, 279, 501, 858, 300, 4, 677, 9, 966], [395, 150, 399, 279, 501, 858, 300, 4, 677, 9, 966], [], [], [], [], [], [], [], [395, 150, 399, 279, 501, 858, 300, 4, 677, 9, 966], [395, 150, 399, 279, 501, 858, 300, 4, 677, 9, 966], [], [], [], [575, 761, 832, 3, 167, 501, 915, 872, 863, 793, 105, 187, 965, 806], [], [575, 761, 832, 3, 167, 501, 915, 872, 863, 793, 105, 187, 965, 806], [575, 761, 832, 3, 167, 501, 915, 872, 863, 793, 105, 187, 965, 806], [], [], [575, 292, 913, 399, 622, 858, 300, 4, 863, 677, 285, 105, 594, 111, 846, 965], [], [575, 292, 913, 399, 622, 858, 300, 4, 863, 677, 285, 105, 594, 111, 846, 965], [575, 292, 913, 399, 622, 858, 300, 4, 863, 677, 285, 105, 594, 111, 846, 965], [575, 292, 913, 399, 622, 858, 300, 4, 863, 677, 285, 105, 594, 111, 846, 965], [575, 292, 913, 399, 622, 858, 300, 4, 863, 677, 285, 105, 594, 111, 846, 965], [575, 292, 913, 399, 622, 858, 300, 4, 863, 677, 285, 105, 594, 111, 846, 965], [], [], [], [804, 456, 578, 957, 758, 948, 178], [], [804, 456, 578, 957, 758, 948, 178], [804, 456, 578, 957, 758, 948, 178], [804, 456, 578, 957, 758, 948, 178], [804, 456, 578, 957, 758, 948, 178], [804, 456, 578, 957, 758, 948, 178], [], [], [], [456, 957, 758, 948, 178], [], [456, 957, 758, 948, 178], [], [456, 957, 758, 948, 178], [], [456, 957, 758, 948, 178], [], [456, 957, 758, 948, 178], [456, 957, 758, 948, 178], [456, 948, 178], [456, 957, 758, 948, 178], [957, 758, 948, 178], [456, 957, 758, 948, 178], [], [], [], [243, 891, 119, 287, 12, 13], [], [243, 891, 119, 287, 12, 13], [], [], [], [], [], [], []]
