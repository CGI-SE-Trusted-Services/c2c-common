var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":143,"id":1955,"methods":[{"el":62,"sc":2,"sl":53},{"el":70,"sc":2,"sl":69},{"el":79,"sc":2,"sl":77},{"el":88,"sc":2,"sl":86},{"el":95,"sc":2,"sl":91},{"el":104,"sc":2,"sl":97},{"el":114,"sc":2,"sl":107},{"el":131,"sc":2,"sl":117},{"el":138,"sc":2,"sl":134}],"name":"TwoDLocation","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_111":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_121":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":128},{"sl":129},{"sl":130}]},"test_123":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_126":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_132":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_151":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_160":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_162":{"methods":[{"sl":69},{"sl":97}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_165":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_183":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_185":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_2":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_201":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_215":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_217":{"methods":[{"sl":107}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113}]},"test_242":{"methods":[{"sl":69},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_252":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_262":{"methods":[{"sl":53},{"sl":107}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113}]},"test_269":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_274":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_278":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_281":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_293":{"methods":[{"sl":69},{"sl":97}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_298":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_311":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_312":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_322":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_340":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":128},{"sl":129},{"sl":130}]},"test_346":{"methods":[{"sl":53},{"sl":77},{"sl":86}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":57},{"sl":58},{"sl":60},{"sl":61},{"sl":78},{"sl":87}]},"test_358":{"methods":[{"sl":53},{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_359":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":130}]},"test_360":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_363":{"methods":[{"sl":69},{"sl":91},{"sl":97}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":93},{"sl":94},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_365":{"methods":[{"sl":53},{"sl":77},{"sl":86},{"sl":91}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":78},{"sl":87},{"sl":93},{"sl":94}]},"test_371":{"methods":[{"sl":53},{"sl":91}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":93},{"sl":94}]},"test_380":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_383":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_392":{"methods":[{"sl":91}],"name":"Verify serialization","pass":true,"statements":[{"sl":93},{"sl":94}]},"test_397":{"methods":[{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":136}]},"test_42":{"methods":[{"sl":53},{"sl":107},{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":109},{"sl":110},{"sl":111},{"sl":112},{"sl":113},{"sl":119},{"sl":121},{"sl":123},{"sl":125},{"sl":126},{"sl":127},{"sl":128},{"sl":129},{"sl":130}]},"test_59":{"methods":[{"sl":69},{"sl":97}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_67":{"methods":[{"sl":53},{"sl":134}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":136}]},"test_88":{"methods":[{"sl":69},{"sl":97}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_92":{"methods":[{"sl":69},{"sl":77},{"sl":86},{"sl":97}],"name":"Verify deserialization","pass":true,"statements":[{"sl":78},{"sl":87},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":103}]},"test_94":{"methods":[{"sl":53}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":60},{"sl":61}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [67, 123, 94, 262, 132, 278, 42, 298, 358, 340, 359, 281, 371, 365, 346, 252, 201, 185, 215, 165, 121], [67, 123, 94, 262, 132, 278, 42, 298, 358, 340, 359, 281, 371, 365, 346, 252, 201, 185, 215, 165, 121], [346], [], [67, 123, 94, 262, 132, 278, 42, 298, 358, 340, 359, 281, 371, 365, 346, 252, 201, 185, 215, 165, 121], [346], [], [67, 123, 94, 262, 132, 278, 42, 298, 358, 340, 359, 281, 371, 365, 346, 252, 201, 185, 215, 165, 121], [67, 123, 94, 262, 132, 278, 42, 298, 358, 340, 359, 281, 371, 365, 346, 252, 201, 185, 215, 165, 121], [], [], [], [], [], [], [], [311, 162, 242, 183, 293, 380, 126, 383, 312, 322, 363, 88, 2, 111, 59, 92], [], [], [], [], [], [], [], [123, 380, 383, 312, 365, 346, 111, 201, 185, 92, 165], [123, 380, 383, 312, 365, 346, 111, 201, 185, 92, 165], [], [], [], [], [], [], [], [123, 380, 383, 312, 365, 346, 111, 201, 185, 92, 165], [123, 380, 383, 312, 365, 346, 111, 201, 185, 92, 165], [], [], [], [311, 132, 278, 358, 322, 160, 363, 371, 365, 2, 151, 252, 274, 392], [], [311, 132, 278, 358, 322, 160, 363, 371, 365, 2, 151, 252, 274, 392], [311, 132, 278, 358, 322, 160, 363, 371, 365, 2, 151, 252, 274, 392], [], [], [311, 162, 242, 183, 293, 380, 126, 383, 312, 322, 363, 88, 2, 111, 59, 92], [], [311, 162, 242, 183, 293, 380, 126, 383, 312, 322, 363, 88, 2, 111, 59, 92], [311, 162, 242, 183, 293, 380, 126, 383, 312, 322, 363, 88, 2, 111, 59, 92], [311, 162, 242, 183, 293, 380, 126, 383, 312, 322, 363, 88, 2, 111, 59, 92], [311, 162, 242, 183, 293, 380, 126, 383, 312, 322, 363, 88, 2, 111, 59, 92], [311, 162, 242, 183, 293, 380, 126, 383, 312, 322, 363, 88, 2, 111, 59, 92], [], [], [], [262, 217, 42, 298, 340, 359, 121], [], [262, 217, 42, 298, 340, 359, 121], [262, 217, 42, 298, 340, 359, 121], [262, 217, 42, 298, 340, 359, 121], [262, 217, 42, 298, 340, 359, 121], [262, 217, 42, 298, 340, 359, 121], [], [], [], [42, 298, 340, 359, 121], [], [42, 298, 340, 359, 121], [], [42, 298, 340, 359, 121], [], [42, 298, 340, 359, 121], [], [42, 298, 340, 359, 121], [42, 298, 340, 359, 121], [42, 298, 359], [42, 298, 340, 359, 121], [42, 298, 340, 121], [42, 298, 340, 359, 121], [], [], [], [67, 360, 281, 397, 269, 215], [], [67, 360, 281, 397, 269, 215], [], [], [], [], [], [], []]
