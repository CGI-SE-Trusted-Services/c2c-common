var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":138,"id":11702,"methods":[{"el":48,"sc":2,"sl":32},{"el":68,"sc":2,"sl":50},{"el":81,"sc":2,"sl":70},{"el":96,"sc":2,"sl":83},{"el":103,"sc":2,"sl":98},{"el":115,"sc":2,"sl":105},{"el":127,"sc":2,"sl":117},{"el":132,"sc":2,"sl":129},{"el":137,"sc":2,"sl":134}],"name":"IntXSpec","sl":28}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_191":{"methods":[{"sl":83}],"name":"Verify that encodeValue encodes the value 0x10000 properly into: 0xc10000","pass":true,"statements":[{"sl":86}]},"test_206":{"methods":[{"sl":83}],"name":"Verify that encodeValue encodes the value 0x80 properly into: 0x8080","pass":true,"statements":[{"sl":86}]},"test_244":{"methods":[{"sl":105}],"name":"Verify that serialize ecodes the value 0x0a properly into: 0x0a","pass":true,"statements":[{"sl":108}]},"test_258":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 1 where: 1 is removed becomes: 1","pass":true,"statements":[{"sl":53}]},"test_271":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 254 where: 6 is removed becomes: 2","pass":true,"statements":[{"sl":53}]},"test_273":{"methods":[{"sl":32}],"name":"Verify getNumberOfOctets for number: 129 has number of octets: 2","pass":true,"statements":[{"sl":35}]},"test_301":{"methods":[{"sl":70}],"name":"Verify that deserialize decodes the value 0x0a properly into: 10","pass":true,"statements":[{"sl":73}]},"test_302":{"methods":[{"sl":32}],"name":"Verify getNumberOfOctets for number: 249 has number of octets: 6","pass":true,"statements":[{"sl":35}]},"test_323":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 239 where: 4 is removed becomes: 15","pass":true,"statements":[{"sl":53}]},"test_343":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 255 where: 8 is removed becomes: 0","pass":true,"statements":[{"sl":53}]},"test_363":{"methods":[{"sl":32}],"name":"Verify getNumberOfOctets for number: 253 has number of octets: 7","pass":true,"statements":[{"sl":35}]},"test_365":{"methods":[{"sl":32}],"name":"Verify getNumberOfOctets for number: 209 has number of octets: 3","pass":true,"statements":[{"sl":35}]},"test_371":{"methods":[{"sl":105}],"name":"Verify that serialize ecodes the value 0x00 properly into: 0x00","pass":true,"statements":[{"sl":108}]},"test_374":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 194 where: 2 is removed becomes: 2","pass":true,"statements":[{"sl":53}]},"test_402":{"methods":[{"sl":83}],"name":"Verify that encodeValue encodes the value 0xdb3bfd properly into: 0xe0db3bfd","pass":true,"statements":[{"sl":86}]},"test_415":{"methods":[{"sl":70}],"name":"Verify that deserialize decodes the value 0x00 properly into: 0","pass":true,"statements":[{"sl":73}]},"test_473":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_476":{"methods":[{"sl":32}],"name":"Verify getNumberOfOctets for number: 254 has number of octets: 8","pass":true,"statements":[{"sl":35}]},"test_508":{"methods":[{"sl":83}],"name":"Verify that encodeValue encodes the value 0x00 properly into: 0x00","pass":true,"statements":[{"sl":86}]},"test_528":{"methods":[{"sl":70}],"name":"Verify that deserialize decodes the value 0x8888 properly into: 2184","pass":true,"statements":[{"sl":73}]},"test_546":{"methods":[{"sl":32}],"name":"Verify getNumberOfOctets for number: 233 has number of octets: 4","pass":true,"statements":[{"sl":35}]},"test_558":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 255 where: 7 is removed becomes: 1","pass":true,"statements":[{"sl":53}]},"test_613":{"methods":[{"sl":105}],"name":"Verify that serialize ecodes the value 0x0888 properly into: 0x8888","pass":true,"statements":[{"sl":108}]},"test_657":{"methods":[{"sl":70}],"name":"Verify that deserialize decodes the value 0x01 properly into: 1","pass":true,"statements":[{"sl":73}]},"test_659":{"methods":[{"sl":83}],"name":"Verify that encodeValue encodes the value 0x0888 properly into: 0x8888","pass":true,"statements":[{"sl":86}]},"test_667":{"methods":[{"sl":98}],"name":"Verify that encodeValue throws NumberFormatException","pass":true,"statements":[{"sl":100},{"sl":102}]},"test_67":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 127 where: 1 is removed becomes: 127","pass":true,"statements":[{"sl":53}]},"test_730":{"methods":[{"sl":134}],"name":"Verify long value constructor","pass":true,"statements":[{"sl":136}]},"test_737":{"methods":[{"sl":32}],"name":"Verify getNumberOfOctets for number: 241 has number of octets: 5","pass":true,"statements":[{"sl":35}]},"test_742":{"methods":[{"sl":32}],"name":"Verify getNumberOfOctets for number: 65 has number of octets: 1","pass":true,"statements":[{"sl":35}]},"test_776":{"methods":[{"sl":117}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":121},{"sl":123},{"sl":124},{"sl":125},{"sl":126}]},"test_830":{"methods":[{"sl":83}],"name":"Verify that encodeValue encodes the value 0x0a properly into: 0x0a","pass":true,"statements":[{"sl":86}]},"test_844":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 250 where: 5 is removed becomes: 2","pass":true,"statements":[{"sl":53}]},"test_853":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 193 where: 2 is removed becomes: 1","pass":true,"statements":[{"sl":53}]},"test_917":{"methods":[{"sl":32}],"name":"Verify getNumberOfOctets for number: 1 has number of octets: 1","pass":true,"statements":[{"sl":35}]},"test_934":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 226 where: 3 is removed becomes: 2","pass":true,"statements":[{"sl":53}]},"test_944":{"methods":[{"sl":50}],"name":"Verify getFirstByteValue for number: 129 where: 1 is removed becomes: 1","pass":true,"statements":[{"sl":53}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [917, 546, 476, 302, 737, 363, 365, 742, 273], [], [], [917, 546, 476, 302, 737, 363, 365, 742, 273], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [67, 558, 844, 944, 343, 258, 853, 323, 271, 934, 374], [], [], [67, 558, 844, 944, 343, 258, 853, 323, 271, 934, 374], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [657, 528, 415, 301], [], [], [657, 528, 415, 301], [], [], [], [], [], [], [], [], [], [206, 508, 659, 402, 191, 830], [], [], [206, 508, 659, 402, 191, 830], [], [], [], [], [], [], [], [], [], [], [], [667], [], [667], [], [667], [], [], [371, 244, 613], [], [], [371, 244, 613], [], [], [], [], [], [], [], [], [776], [], [776], [776], [776], [], [776], [776], [776], [776], [], [], [473], [], [473], [], [], [730], [], [730], [], []]
