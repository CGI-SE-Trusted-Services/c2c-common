var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":149,"id":1838,"methods":[{"el":54,"sc":2,"sl":50},{"el":63,"sc":2,"sl":61},{"el":72,"sc":2,"sl":69},{"el":85,"sc":2,"sl":80},{"el":93,"sc":2,"sl":91},{"el":106,"sc":2,"sl":96},{"el":113,"sc":2,"sl":108},{"el":118,"sc":2,"sl":115},{"el":127,"sc":2,"sl":120},{"el":144,"sc":2,"sl":129}],"name":"Time64","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":50},{"sl":96}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104}]},"test_126":{"methods":[{"sl":50},{"sl":80},{"sl":115}],"name":"Verify toString","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":81},{"sl":82},{"sl":83},{"sl":84},{"sl":117}]},"test_13":{"methods":[{"sl":50},{"sl":96}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104}]},"test_133":{"methods":[{"sl":96}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104}]},"test_138":{"methods":[{"sl":69},{"sl":108}],"name":"Verify deserialization","pass":true,"statements":[{"sl":110},{"sl":111},{"sl":112}]},"test_144":{"methods":[{"sl":50}],"name":"Verify that findHeader finds the correct header in a SecureMessage","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53}]},"test_148":{"methods":[{"sl":50},{"sl":69},{"sl":96},{"sl":108}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104},{"sl":110},{"sl":111},{"sl":112}]},"test_154":{"methods":[{"sl":96}],"name":"Verify serialization","pass":true,"statements":[{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104}]},"test_158":{"methods":[{"sl":50},{"sl":120},{"sl":129}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":122},{"sl":123},{"sl":124},{"sl":126},{"sl":131},{"sl":133},{"sl":135},{"sl":137},{"sl":138},{"sl":141},{"sl":142},{"sl":143}]},"test_164":{"methods":[{"sl":61},{"sl":96}],"name":"Verify serialization","pass":true,"statements":[{"sl":62},{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104}]},"test_167":{"methods":[{"sl":61},{"sl":96}],"name":"Verify serialization","pass":true,"statements":[{"sl":62},{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104}]},"test_169":{"methods":[{"sl":50},{"sl":120},{"sl":129}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":122},{"sl":123},{"sl":124},{"sl":126},{"sl":131},{"sl":133},{"sl":135},{"sl":137},{"sl":138},{"sl":141},{"sl":142},{"sl":143}]},"test_180":{"methods":[{"sl":50},{"sl":80},{"sl":115}],"name":"Verify toString","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":81},{"sl":82},{"sl":83},{"sl":84},{"sl":117}]},"test_205":{"methods":[{"sl":50},{"sl":91}],"name":"Verify the constructors and asElapsedTime","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":92}]},"test_212":{"methods":[{"sl":69},{"sl":80},{"sl":108}],"name":"Verify deserialization","pass":true,"statements":[{"sl":81},{"sl":82},{"sl":83},{"sl":84},{"sl":110},{"sl":111},{"sl":112}]},"test_232":{"methods":[{"sl":50},{"sl":69},{"sl":96},{"sl":108}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104},{"sl":110},{"sl":111},{"sl":112}]},"test_241":{"methods":[{"sl":96}],"name":"Verify serialization","pass":true,"statements":[{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104}]},"test_252":{"methods":[{"sl":80},{"sl":115}],"name":"Verify toString","pass":true,"statements":[{"sl":81},{"sl":82},{"sl":83},{"sl":84},{"sl":117}]},"test_253":{"methods":[{"sl":50},{"sl":91}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":92}]},"test_26":{"methods":[{"sl":50},{"sl":96}],"name":"Generate Authorization Ticket and Signed Secured Message v1 for interoperability testing","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104}]},"test_267":{"methods":[{"sl":61},{"sl":80}],"name":"Make sure asDate converts the date correctly","pass":true,"statements":[{"sl":62},{"sl":81},{"sl":82},{"sl":83},{"sl":84}]},"test_27":{"methods":[{"sl":50},{"sl":69},{"sl":96},{"sl":108}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104},{"sl":110},{"sl":111},{"sl":112}]},"test_277":{"methods":[{"sl":50},{"sl":96}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53},{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104}]},"test_295":{"methods":[{"sl":69},{"sl":80},{"sl":108}],"name":"Verify deserialization","pass":true,"statements":[{"sl":81},{"sl":82},{"sl":83},{"sl":84},{"sl":110},{"sl":111},{"sl":112}]},"test_343":{"methods":[{"sl":50}],"name":"Verify that addHeader adds the header value in correct order","pass":true,"statements":[{"sl":51},{"sl":52},{"sl":53}]},"test_354":{"methods":[{"sl":80},{"sl":115}],"name":"Verify toString","pass":true,"statements":[{"sl":81},{"sl":82},{"sl":83},{"sl":84},{"sl":117}]},"test_357":{"methods":[{"sl":61},{"sl":69},{"sl":96},{"sl":108}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":62},{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104},{"sl":110},{"sl":111},{"sl":112}]},"test_376":{"methods":[{"sl":69},{"sl":96},{"sl":108}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":98},{"sl":99},{"sl":102},{"sl":103},{"sl":104},{"sl":110},{"sl":111},{"sl":112}]},"test_6":{"methods":[{"sl":69},{"sl":108}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":110},{"sl":111},{"sl":112}]},"test_87":{"methods":[{"sl":69},{"sl":108}],"name":"Verify deserialization","pass":true,"statements":[{"sl":110},{"sl":111},{"sl":112}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [277, 26, 232, 158, 205, 144, 13, 126, 1, 27, 148, 253, 343, 180, 169], [277, 26, 232, 158, 205, 144, 13, 126, 1, 27, 148, 253, 343, 180, 169], [277, 26, 232, 158, 205, 144, 13, 126, 1, 27, 148, 253, 343, 180, 169], [277, 26, 232, 158, 205, 144, 13, 126, 1, 27, 148, 253, 343, 180, 169], [], [], [], [], [], [], [], [167, 357, 267, 164], [167, 357, 267, 164], [], [], [], [], [], [], [357, 138, 6, 232, 212, 27, 148, 295, 376, 87], [], [], [], [], [], [], [], [], [], [], [354, 252, 267, 212, 126, 295, 180], [354, 252, 267, 212, 126, 295, 180], [354, 252, 267, 212, 126, 295, 180], [354, 252, 267, 212, 126, 295, 180], [354, 252, 267, 212, 126, 295, 180], [], [], [], [], [], [], [205, 253], [205, 253], [], [], [], [167, 277, 357, 154, 26, 232, 133, 13, 1, 27, 241, 164, 148, 376], [], [167, 277, 357, 154, 26, 232, 133, 13, 1, 27, 241, 164, 148, 376], [167, 277, 357, 154, 26, 232, 133, 13, 1, 27, 241, 164, 148, 376], [], [], [167, 277, 357, 154, 26, 232, 133, 13, 1, 27, 241, 164, 148, 376], [167, 277, 357, 154, 26, 232, 133, 13, 1, 27, 241, 164, 148, 376], [167, 277, 357, 154, 26, 232, 133, 13, 1, 27, 241, 164, 148, 376], [], [], [], [357, 138, 6, 232, 212, 27, 148, 295, 376, 87], [], [357, 138, 6, 232, 212, 27, 148, 295, 376, 87], [357, 138, 6, 232, 212, 27, 148, 295, 376, 87], [357, 138, 6, 232, 212, 27, 148, 295, 376, 87], [], [], [354, 252, 126, 180], [], [354, 252, 126, 180], [], [], [158, 169], [], [158, 169], [158, 169], [158, 169], [], [158, 169], [], [], [158, 169], [], [158, 169], [], [158, 169], [], [158, 169], [], [158, 169], [158, 169], [], [], [158, 169], [158, 169], [158, 169], [], [], [], [], [], []]
