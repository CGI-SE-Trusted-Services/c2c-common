var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":180,"id":6914,"methods":[{"el":68,"sc":2,"sl":60},{"el":77,"sc":2,"sl":75},{"el":86,"sc":2,"sl":83},{"el":107,"sc":2,"sl":97},{"el":115,"sc":2,"sl":113},{"el":128,"sc":2,"sl":118},{"el":135,"sc":2,"sl":130},{"el":140,"sc":2,"sl":137},{"el":149,"sc":2,"sl":147},{"el":158,"sc":2,"sl":151},{"el":175,"sc":2,"sl":160}],"name":"Time64","sl":45}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1010":{"methods":[{"sl":60},{"sl":118}],"name":"Verify that multiple payload works for version 1 of secured DENM message","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_134":{"methods":[{"sl":83},{"sl":130}],"name":"Verify deserialization","pass":true,"statements":[{"sl":132},{"sl":133},{"sl":134}]},"test_15":{"methods":[{"sl":60},{"sl":83},{"sl":118},{"sl":130}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":66},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126},{"sl":132},{"sl":133},{"sl":134}]},"test_158":{"methods":[{"sl":60},{"sl":118}],"name":"Verify that multiple payload works for version 1 of secured CAM message","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_208":{"methods":[{"sl":60}],"name":"Verify that addHeader adds the header value in correct order","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":66}]},"test_22":{"methods":[{"sl":97},{"sl":147}],"name":"Verify toString","pass":true,"statements":[{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":104},{"sl":106},{"sl":148}]},"test_242":{"methods":[{"sl":60},{"sl":83},{"sl":118},{"sl":130}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":66},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126},{"sl":132},{"sl":133},{"sl":134}]},"test_259":{"methods":[{"sl":118}],"name":"Verify serialization","pass":true,"statements":[{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_271":{"methods":[{"sl":60},{"sl":97},{"sl":137},{"sl":147}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":66},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":104},{"sl":106},{"sl":139},{"sl":148}]},"test_281":{"methods":[{"sl":118}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_300":{"methods":[{"sl":60},{"sl":113}],"name":"Verify the constructors and asElapsedTime for certificate version 2","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":66},{"sl":114}]},"test_306":{"methods":[{"sl":60},{"sl":83},{"sl":118},{"sl":130}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":66},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126},{"sl":132},{"sl":133},{"sl":134}]},"test_363":{"methods":[{"sl":83},{"sl":130}],"name":"Verify deserialization","pass":true,"statements":[{"sl":132},{"sl":133},{"sl":134}]},"test_438":{"methods":[{"sl":118}],"name":"Verify serialization","pass":true,"statements":[{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_449":{"methods":[{"sl":60},{"sl":113}],"name":"Verify the constructors and asElapsedTime for certificate version 1","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":114}]},"test_457":{"methods":[{"sl":60},{"sl":118}],"name":"Verify that version 2 Signed CAM Unrecognized Certificates Message  certificate, certificate_chain and certificate_digest_with_ecdsap256","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":66},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_489":{"methods":[{"sl":60},{"sl":113}],"name":"Verify the constructors and asElapsedTime for certificate version 1","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":114}]},"test_493":{"methods":[{"sl":60},{"sl":97},{"sl":137},{"sl":147}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":66},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":104},{"sl":106},{"sl":139},{"sl":148}]},"test_53":{"methods":[{"sl":75},{"sl":118}],"name":"Verify serialization","pass":true,"statements":[{"sl":76},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_545":{"methods":[{"sl":83},{"sl":130}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":132},{"sl":133},{"sl":134}]},"test_573":{"methods":[{"sl":60},{"sl":113}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":114}]},"test_579":{"methods":[{"sl":60},{"sl":118}],"name":"Generate version 2 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":66},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_6":{"methods":[{"sl":60},{"sl":151},{"sl":160}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":162},{"sl":164},{"sl":166},{"sl":168},{"sl":169},{"sl":172},{"sl":173},{"sl":174}]},"test_601":{"methods":[{"sl":60}],"name":"Verify that findHeader finds the correct header in a SecureMessage","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":66}]},"test_635":{"methods":[{"sl":83},{"sl":97},{"sl":130}],"name":"Verify deserialization","pass":true,"statements":[{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":106},{"sl":132},{"sl":133},{"sl":134}]},"test_670":{"methods":[{"sl":60},{"sl":118}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.[1]","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":66},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_686":{"methods":[{"sl":60},{"sl":118}],"name":"Generate version 2 Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":66},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_699":{"methods":[{"sl":75},{"sl":83},{"sl":118},{"sl":130}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":76},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126},{"sl":132},{"sl":133},{"sl":134}]},"test_73":{"methods":[{"sl":60},{"sl":151},{"sl":160}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":153},{"sl":154},{"sl":155},{"sl":157},{"sl":162},{"sl":164},{"sl":166},{"sl":168},{"sl":169},{"sl":172},{"sl":173},{"sl":174}]},"test_83":{"methods":[{"sl":75},{"sl":118}],"name":"Verify serialization","pass":true,"statements":[{"sl":76},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_852":{"methods":[{"sl":60},{"sl":118}],"name":"Generate version 1 Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_853":{"methods":[{"sl":83},{"sl":118},{"sl":130}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126},{"sl":132},{"sl":133},{"sl":134}]},"test_884":{"methods":[{"sl":97},{"sl":147}],"name":"Verify toString","pass":true,"statements":[{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":104},{"sl":106},{"sl":148}]},"test_892":{"methods":[{"sl":75},{"sl":97}],"name":"Make sure asDate converts the date correctly[1]","pass":true,"statements":[{"sl":76},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":104},{"sl":106}]},"test_899":{"methods":[{"sl":60},{"sl":118}],"name":"Generate version 1 Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_90":{"methods":[{"sl":60},{"sl":118}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.[0]","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":120},{"sl":121},{"sl":124},{"sl":125},{"sl":126}]},"test_923":{"methods":[{"sl":83},{"sl":97},{"sl":130}],"name":"Verify deserialization","pass":true,"statements":[{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":106},{"sl":132},{"sl":133},{"sl":134}]},"test_931":{"methods":[{"sl":75},{"sl":97}],"name":"Make sure asDate converts the date correctly[0]","pass":true,"statements":[{"sl":76},{"sl":98},{"sl":99},{"sl":100},{"sl":101},{"sl":102},{"sl":106}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [6, 1010, 457, 306, 493, 90, 15, 670, 573, 449, 899, 489, 271, 158, 601, 852, 300, 686, 579, 73, 242, 208], [6, 1010, 457, 306, 493, 90, 15, 670, 573, 449, 899, 489, 271, 158, 601, 852, 300, 686, 579, 73, 242, 208], [6, 1010, 457, 306, 493, 90, 15, 670, 573, 449, 899, 489, 271, 158, 601, 852, 300, 686, 579, 73, 242, 208], [6, 1010, 457, 306, 493, 90, 15, 670, 573, 449, 899, 489, 271, 158, 601, 852, 300, 686, 579, 73, 242, 208], [6, 1010, 493, 90, 573, 449, 899, 489, 271, 158, 852, 73], [], [457, 306, 493, 15, 670, 271, 601, 300, 686, 579, 242, 208], [], [], [], [], [], [], [], [], [53, 892, 931, 83, 699], [53, 892, 931, 83, 699], [], [], [], [], [], [], [635, 306, 134, 15, 853, 923, 545, 242, 699, 363], [], [], [], [], [], [], [], [], [], [], [], [], [], [635, 884, 493, 22, 271, 923, 892, 931], [635, 884, 493, 22, 271, 923, 892, 931], [635, 884, 493, 22, 271, 923, 892, 931], [635, 884, 493, 22, 271, 923, 892, 931], [635, 884, 493, 22, 271, 923, 892, 931], [635, 493, 271, 923, 931], [], [884, 493, 22, 271, 892], [], [635, 884, 493, 22, 271, 923, 892, 931], [], [], [], [], [], [], [573, 449, 489, 300], [573, 449, 489, 300], [], [], [], [259, 1010, 457, 53, 306, 90, 15, 670, 438, 281, 853, 899, 158, 852, 686, 579, 83, 242, 699], [], [259, 1010, 457, 53, 306, 90, 15, 670, 438, 281, 853, 899, 158, 852, 686, 579, 83, 242, 699], [259, 1010, 457, 53, 306, 90, 15, 670, 438, 281, 853, 899, 158, 852, 686, 579, 83, 242, 699], [], [], [259, 1010, 457, 53, 306, 90, 15, 670, 438, 281, 853, 899, 158, 852, 686, 579, 83, 242, 699], [259, 1010, 457, 53, 306, 90, 15, 670, 438, 281, 853, 899, 158, 852, 686, 579, 83, 242, 699], [259, 1010, 457, 53, 306, 90, 15, 670, 438, 281, 853, 899, 158, 852, 686, 579, 83, 242, 699], [], [], [], [635, 306, 134, 15, 853, 923, 545, 242, 699, 363], [], [635, 306, 134, 15, 853, 923, 545, 242, 699, 363], [635, 306, 134, 15, 853, 923, 545, 242, 699, 363], [635, 306, 134, 15, 853, 923, 545, 242, 699, 363], [], [], [493, 271], [], [493, 271], [], [], [], [], [], [], [], [884, 493, 22, 271], [884, 493, 22, 271], [], [], [6, 73], [], [6, 73], [6, 73], [6, 73], [], [6, 73], [], [], [6, 73], [], [6, 73], [], [6, 73], [], [6, 73], [], [6, 73], [6, 73], [], [], [6, 73], [6, 73], [6, 73], [], [], [], [], [], []]
