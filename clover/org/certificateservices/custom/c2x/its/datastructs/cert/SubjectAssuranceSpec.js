var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":104,"id":9712,"methods":[{"el":37,"sc":2,"sl":31},{"el":49,"sc":2,"sl":39},{"el":60,"sc":2,"sl":52},{"el":70,"sc":2,"sl":62},{"el":82,"sc":2,"sl":72},{"el":97,"sc":2,"sl":84},{"el":102,"sc":2,"sl":99}],"name":"SubjectAssuranceSpec","sl":29}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_131":{"methods":[{"sl":52}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid assuranceLevel: 8","pass":true,"statements":[{"sl":55},{"sl":57}]},"test_198":{"methods":[{"sl":39}],"name":"Verify that subjectAssurance calculates a byte value of: 33 for assuranceLevel: 1 and confidenceLevel: 1","pass":true,"statements":[{"sl":42}]},"test_218":{"methods":[{"sl":72}],"name":"Verify that serialization produces correct output[0]","pass":true,"statements":[{"sl":75}]},"test_219":{"methods":[{"sl":39}],"name":"Verify that subjectAssurance calculates a byte value of: 1 for assuranceLevel: 0 and confidenceLevel: 1","pass":true,"statements":[{"sl":42}]},"test_225":{"methods":[{"sl":72}],"name":"Verify that serialization produces correct output[1]","pass":true,"statements":[{"sl":75}]},"test_338":{"methods":[{"sl":72}],"name":"Verify that serialization produces correct output[2]","pass":true,"statements":[{"sl":75}]},"test_439":{"methods":[{"sl":62}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid confidenceLevel: 4","pass":true,"statements":[{"sl":65},{"sl":67}]},"test_526":{"methods":[{"sl":52}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid assuranceLevel: 10","pass":true,"statements":[{"sl":55},{"sl":57}]},"test_543":{"methods":[{"sl":39}],"name":"Verify that subjectAssurance calculates a byte value of: 227 for assuranceLevel: 7 and confidenceLevel: 3","pass":true,"statements":[{"sl":42}]},"test_562":{"methods":[{"sl":99}],"name":"Verify toString","pass":true,"statements":[{"sl":101}]},"test_589":{"methods":[{"sl":52}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid assuranceLevel: -1","pass":true,"statements":[{"sl":55},{"sl":57}]},"test_644":{"methods":[{"sl":39}],"name":"Verify that subjectAssurance calculates a byte value of: 0 for assuranceLevel: 0 and confidenceLevel: 0","pass":true,"statements":[{"sl":42}]},"test_787":{"methods":[{"sl":84}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":86},{"sl":87},{"sl":88},{"sl":89},{"sl":91},{"sl":92},{"sl":93},{"sl":94},{"sl":95},{"sl":96}]},"test_876":{"methods":[{"sl":62}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid confidenceLevel: -1","pass":true,"statements":[{"sl":65},{"sl":67}]},"test_903":{"methods":[{"sl":31}],"name":"Verify getAssurranceLevel and getConfidence","pass":true,"statements":[{"sl":33},{"sl":34},{"sl":35},{"sl":36}]},"test_907":{"methods":[{"sl":62}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid confidenceLevel: 10","pass":true,"statements":[{"sl":65},{"sl":67}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [903], [], [903], [903], [903], [903], [], [], [543, 644, 198, 219], [], [], [543, 644, 198, 219], [], [], [], [], [], [], [], [], [], [589, 131, 526], [], [], [589, 131, 526], [], [589, 131, 526], [], [], [], [], [876, 907, 439], [], [], [876, 907, 439], [], [876, 907, 439], [], [], [], [], [225, 338, 218], [], [], [225, 338, 218], [], [], [], [], [], [], [], [], [787], [], [787], [787], [787], [787], [], [787], [787], [787], [787], [787], [787], [], [], [562], [], [562], [], [], []]
