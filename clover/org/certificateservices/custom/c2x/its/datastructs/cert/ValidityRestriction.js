var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":262,"id":2560,"methods":[{"el":55,"sc":2,"sl":52},{"el":65,"sc":2,"sl":61},{"el":75,"sc":2,"sl":71},{"el":84,"sc":2,"sl":81},{"el":91,"sc":2,"sl":90},{"el":99,"sc":2,"sl":97},{"el":107,"sc":2,"sl":105},{"el":115,"sc":2,"sl":113},{"el":123,"sc":2,"sl":121},{"el":131,"sc":2,"sl":129},{"el":154,"sc":2,"sl":133},{"el":183,"sc":2,"sl":156},{"el":203,"sc":2,"sl":187},{"el":237,"sc":2,"sl":205},{"el":258,"sc":2,"sl":239}],"name":"ValidityRestriction","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":133}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_104":{"methods":[{"sl":90},{"sl":156}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_106":{"methods":[{"sl":61},{"sl":105},{"sl":113},{"sl":133}],"name":"Generate Authorization Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":106},{"sl":114},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_108":{"methods":[{"sl":90},{"sl":97},{"sl":156}],"name":"Verify deserialization","pass":true,"statements":[{"sl":98},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169}]},"test_112":{"methods":[{"sl":90},{"sl":133},{"sl":156}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":148},{"sl":149},{"sl":150},{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_116":{"methods":[{"sl":61},{"sl":105},{"sl":113},{"sl":133}],"name":"Generate Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":106},{"sl":114},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_125":{"methods":[{"sl":90},{"sl":133},{"sl":156}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":148},{"sl":149},{"sl":150},{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_13":{"methods":[{"sl":133}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_148":{"methods":[{"sl":90},{"sl":133},{"sl":156}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_151":{"methods":[{"sl":90},{"sl":133},{"sl":156}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":148},{"sl":149},{"sl":150},{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_152":{"methods":[{"sl":133}],"name":"Verify serialization","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":144},{"sl":145},{"sl":146},{"sl":147},{"sl":148},{"sl":149},{"sl":150}]},"test_16":{"methods":[{"sl":90},{"sl":156}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_170":{"methods":[{"sl":97}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":98}]},"test_182":{"methods":[{"sl":133}],"name":"Verify serialization","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_183":{"methods":[{"sl":90},{"sl":156}],"name":"Verify deserialization","pass":true,"statements":[{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169}]},"test_231":{"methods":[{"sl":61},{"sl":105},{"sl":113},{"sl":133}],"name":"Generate RootCA without Encryption Key and Geographic region and verify that all other attributes are set.","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":106},{"sl":114},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_232":{"methods":[{"sl":90},{"sl":133},{"sl":156}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169}]},"test_233":{"methods":[{"sl":133}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_239":{"methods":[{"sl":90},{"sl":133},{"sl":156}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":148},{"sl":149},{"sl":150},{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_26":{"methods":[{"sl":61},{"sl":133}],"name":"Generate Authorization Ticket and Signed Secured Message v1 for interoperability testing","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_263":{"methods":[{"sl":61},{"sl":105},{"sl":113},{"sl":133}],"name":"Generate Authorization Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":106},{"sl":114},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_27":{"methods":[{"sl":90},{"sl":133},{"sl":156}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_277":{"methods":[{"sl":133}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_285":{"methods":[{"sl":61},{"sl":105},{"sl":113},{"sl":133}],"name":"Generate Authorization Ticket with a certificate as signer info","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":106},{"sl":114},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_288":{"methods":[{"sl":239}],"name":"Verify toString","pass":true,"statements":[{"sl":241},{"sl":242},{"sl":243},{"sl":245},{"sl":246}]},"test_307":{"methods":[{"sl":61},{"sl":105},{"sl":113},{"sl":133}],"name":"Generate Enrollment Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":106},{"sl":114},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_313":{"methods":[{"sl":61},{"sl":81},{"sl":97},{"sl":105},{"sl":113},{"sl":133}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":82},{"sl":83},{"sl":98},{"sl":106},{"sl":114},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":148},{"sl":149},{"sl":150}]},"test_33":{"methods":[{"sl":239}],"name":"Verify toString","pass":true,"statements":[{"sl":241},{"sl":242},{"sl":243},{"sl":245},{"sl":246},{"sl":248},{"sl":249},{"sl":251},{"sl":252}]},"test_336":{"methods":[{"sl":61},{"sl":133}],"name":"Generate Enrollment Credential v1 for interoperability testing","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_357":{"methods":[{"sl":133}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_365":{"methods":[{"sl":97},{"sl":105},{"sl":113},{"sl":121}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":98},{"sl":106},{"sl":114},{"sl":122}]},"test_366":{"methods":[{"sl":61},{"sl":105},{"sl":113},{"sl":133}],"name":"Generate Enrollment Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":106},{"sl":114},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_37":{"methods":[{"sl":61},{"sl":133}],"name":"Generate Authorization CA v1 for interoperability testing","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_372":{"methods":[{"sl":61},{"sl":105},{"sl":113},{"sl":133}],"name":"Generate Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":106},{"sl":114},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_376":{"methods":[{"sl":90},{"sl":133},{"sl":156}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143},{"sl":148},{"sl":149},{"sl":150},{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_6":{"methods":[{"sl":90},{"sl":156}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":158},{"sl":159},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_68":{"methods":[{"sl":52},{"sl":187},{"sl":205}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":53},{"sl":54},{"sl":189},{"sl":190},{"sl":191},{"sl":192},{"sl":193},{"sl":194},{"sl":195},{"sl":196},{"sl":197},{"sl":198},{"sl":202},{"sl":207},{"sl":209},{"sl":211},{"sl":213},{"sl":214},{"sl":215},{"sl":216},{"sl":219},{"sl":222},{"sl":223},{"sl":224},{"sl":225},{"sl":229},{"sl":230},{"sl":231},{"sl":234},{"sl":236}]},"test_81":{"methods":[{"sl":90},{"sl":97},{"sl":105},{"sl":113},{"sl":121},{"sl":156}],"name":"Verify deserialization","pass":true,"statements":[{"sl":98},{"sl":106},{"sl":114},{"sl":122},{"sl":158},{"sl":159},{"sl":160},{"sl":161},{"sl":162},{"sl":163},{"sl":164},{"sl":165},{"sl":166},{"sl":167},{"sl":168},{"sl":169},{"sl":170},{"sl":171},{"sl":172},{"sl":173},{"sl":174},{"sl":175},{"sl":176},{"sl":177},{"sl":178},{"sl":179}]},"test_89":{"methods":[{"sl":61},{"sl":105},{"sl":113},{"sl":133}],"name":"Generate Enrollment Credential with a certificate as signer info","pass":true,"statements":[{"sl":62},{"sl":63},{"sl":64},{"sl":106},{"sl":114},{"sl":135},{"sl":136},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]},"test_98":{"methods":[{"sl":133}],"name":"Verify serialization","pass":true,"statements":[{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":140},{"sl":141},{"sl":142},{"sl":143}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [68], [68], [68], [], [], [], [], [], [], [89, 26, 231, 37, 307, 372, 336, 106, 263, 116, 313, 366, 285], [89, 26, 231, 37, 307, 372, 336, 106, 263, 116, 313, 366, 285], [89, 26, 231, 37, 307, 372, 336, 106, 263, 116, 313, 366, 285], [89, 26, 231, 37, 307, 372, 336, 106, 263, 116, 313, 366, 285], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [313], [313], [313], [], [], [], [], [], [], [239, 6, 232, 183, 104, 16, 27, 81, 125, 108, 112, 148, 151, 376], [], [], [], [], [], [], [365, 81, 170, 108, 313], [365, 81, 170, 108, 313], [], [], [], [], [], [], [365, 89, 231, 307, 372, 106, 81, 263, 116, 313, 366, 285], [365, 89, 231, 307, 372, 106, 81, 263, 116, 313, 366, 285], [], [], [], [], [], [], [365, 89, 231, 307, 372, 106, 81, 263, 116, 313, 366, 285], [365, 89, 231, 307, 372, 106, 81, 263, 116, 313, 366, 285], [], [], [], [], [], [], [365, 81], [365, 81], [], [], [], [], [], [], [], [], [], [], [277, 357, 239, 182, 89, 26, 233, 231, 37, 232, 307, 98, 372, 336, 13, 106, 1, 27, 125, 263, 112, 116, 313, 148, 151, 366, 152, 376, 285], [], [277, 357, 239, 182, 89, 26, 233, 231, 37, 232, 307, 98, 372, 336, 13, 106, 1, 27, 125, 263, 112, 116, 313, 148, 151, 366, 152, 376, 285], [277, 357, 239, 182, 89, 26, 233, 231, 37, 232, 307, 98, 372, 336, 13, 106, 1, 27, 125, 263, 112, 116, 313, 148, 151, 366, 152, 376, 285], [182, 233, 98, 152], [182, 233, 98, 152], [182, 233, 98, 152], [277, 357, 239, 182, 89, 26, 233, 231, 37, 232, 307, 98, 372, 336, 13, 106, 1, 27, 125, 263, 112, 116, 313, 148, 151, 366, 152, 376, 285], [277, 357, 239, 182, 89, 26, 233, 231, 37, 232, 307, 98, 372, 336, 13, 106, 1, 27, 125, 263, 112, 116, 313, 148, 151, 366, 152, 376, 285], [277, 357, 239, 182, 89, 26, 233, 231, 37, 232, 307, 98, 372, 336, 13, 106, 1, 27, 125, 263, 112, 116, 313, 148, 151, 366, 152, 376, 285], [277, 357, 239, 182, 89, 26, 233, 231, 37, 232, 307, 98, 372, 336, 13, 106, 1, 27, 125, 263, 112, 116, 313, 148, 151, 366, 152, 376, 285], [152], [152], [152], [152], [239, 125, 112, 313, 151, 152, 376], [239, 125, 112, 313, 151, 152, 376], [239, 125, 112, 313, 151, 152, 376], [], [], [], [], [], [239, 6, 232, 183, 104, 16, 27, 81, 125, 108, 112, 148, 151, 376], [], [239, 6, 232, 183, 104, 16, 27, 81, 125, 108, 112, 148, 151, 376], [239, 6, 232, 183, 104, 16, 27, 81, 125, 108, 112, 148, 151, 376], [183, 81, 108], [183, 81, 108], [183, 81, 108], [183, 81, 108], [239, 6, 232, 183, 104, 16, 27, 81, 125, 108, 112, 148, 151, 376], [239, 6, 232, 183, 104, 16, 27, 81, 125, 108, 112, 148, 151, 376], [239, 6, 232, 183, 104, 16, 27, 81, 125, 108, 112, 148, 151, 376], [239, 6, 232, 183, 104, 16, 27, 81, 125, 108, 112, 148, 151, 376], [239, 6, 232, 183, 104, 16, 27, 81, 125, 108, 112, 148, 151, 376], [239, 6, 232, 183, 104, 16, 27, 81, 125, 108, 112, 148, 151, 376], [81], [81], [81], [81], [81], [81], [239, 6, 104, 16, 27, 81, 125, 112, 148, 151, 376], [239, 6, 104, 16, 27, 81, 125, 112, 148, 151, 376], [239, 6, 104, 16, 27, 81, 125, 112, 148, 151, 376], [239, 6, 104, 16, 27, 81, 125, 112, 148, 151, 376], [], [], [], [], [], [], [], [68], [], [68], [68], [68], [68], [68], [68], [68], [68], [68], [68], [], [], [], [68], [], [], [68], [], [68], [], [68], [], [68], [], [68], [68], [68], [68], [], [], [68], [], [], [68], [68], [68], [68], [], [], [], [68], [68], [68], [], [], [68], [], [68], [], [], [33, 288], [], [33, 288], [33, 288], [33, 288], [], [33, 288], [33, 288], [], [33], [33], [], [33], [33], [], [], [], [], [], [], [], [], [], []]
