var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":135,"id":2192,"methods":[{"el":57,"sc":2,"sl":51},{"el":65,"sc":2,"sl":64},{"el":72,"sc":2,"sl":70},{"el":80,"sc":2,"sl":78},{"el":87,"sc":2,"sl":82},{"el":95,"sc":2,"sl":89},{"el":105,"sc":2,"sl":98},{"el":126,"sc":2,"sl":108},{"el":133,"sc":2,"sl":129}],"name":"ItsAidSsp","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_102":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_105":{"methods":[{"sl":64},{"sl":89}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_111":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_123":{"methods":[{"sl":64},{"sl":89}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_133":{"methods":[{"sl":64},{"sl":70},{"sl":78},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":71},{"sl":79},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_136":{"methods":[{"sl":51},{"sl":98},{"sl":108}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104},{"sl":110},{"sl":112},{"sl":114},{"sl":116},{"sl":117},{"sl":120},{"sl":121},{"sl":122},{"sl":124},{"sl":125}]},"test_158":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_166":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_170":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_202":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_216":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_221":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_243":{"methods":[{"sl":51},{"sl":64},{"sl":70},{"sl":82},{"sl":89}],"name":"Verify decodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":71},{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_256":{"methods":[{"sl":82}],"name":"Verify encodeVariableSizeVector encodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_275":{"methods":[{"sl":82}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_279":{"methods":[{"sl":98}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104}]},"test_286":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_310":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_322":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_339":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_34":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_378":{"methods":[{"sl":51},{"sl":82}],"name":"Verify encodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":84},{"sl":85},{"sl":86}]},"test_40":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_81":{"methods":[{"sl":64},{"sl":89}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_85":{"methods":[{"sl":64},{"sl":89}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_88":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_92":{"methods":[{"sl":64},{"sl":89}],"name":"Verify decodeVariableSizeVector decodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_93":{"methods":[{"sl":51},{"sl":70},{"sl":78}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":71},{"sl":79}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [243, 378, 136, 93], [243, 378, 136, 93], [93], [], [243, 378, 136], [243, 378, 136], [], [], [], [], [], [], [], [133, 158, 243, 322, 202, 34, 92, 85, 81, 105, 166, 123, 216, 221, 40], [], [], [], [], [], [133, 243, 93], [133, 243, 93], [], [], [], [], [], [], [133, 93], [133, 93], [], [], [158, 243, 88, 275, 322, 378, 34, 111, 170, 256, 166, 216, 339], [], [158, 243, 88, 275, 322, 378, 34, 111, 170, 256, 166, 216, 339], [158, 243, 88, 275, 322, 378, 34, 111, 170, 256, 166, 216, 339], [158, 243, 88, 275, 322, 378, 34, 111, 170, 256, 166, 216, 339], [], [], [133, 158, 243, 322, 202, 34, 92, 85, 81, 105, 166, 123, 216, 221, 40], [], [133, 158, 243, 322, 202, 34, 92, 85, 81, 105, 166, 123, 216, 221, 40], [133, 158, 243, 322, 202, 34, 92, 85, 81, 105, 166, 123, 216, 221, 40], [133, 158, 243, 322, 202, 34, 92, 85, 81, 105, 166, 123, 216, 221, 40], [133, 158, 243, 322, 202, 34, 92, 85, 81, 105, 166, 123, 216, 221, 40], [], [], [], [136, 279], [], [136, 279], [136, 279], [136, 279], [136, 279], [136, 279], [], [], [], [136], [], [136], [], [136], [], [136], [], [136], [136], [], [], [136], [136], [136], [], [136], [136], [], [], [], [310, 286, 102], [], [310, 286, 102], [], [], [], []]
