var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":135,"id":2192,"methods":[{"el":57,"sc":2,"sl":51},{"el":65,"sc":2,"sl":64},{"el":72,"sc":2,"sl":70},{"el":80,"sc":2,"sl":78},{"el":87,"sc":2,"sl":82},{"el":95,"sc":2,"sl":89},{"el":105,"sc":2,"sl":98},{"el":126,"sc":2,"sl":108},{"el":133,"sc":2,"sl":129}],"name":"ItsAidSsp","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_10":{"methods":[{"sl":51},{"sl":64},{"sl":70},{"sl":82},{"sl":89}],"name":"Verify decodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":71},{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_119":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_124":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_13":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_14":{"methods":[{"sl":64},{"sl":89}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_142":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_148":{"methods":[{"sl":64},{"sl":89}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_153":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_170":{"methods":[{"sl":51},{"sl":82}],"name":"Verify encodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":84},{"sl":85},{"sl":86}]},"test_187":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_252":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_255":{"methods":[{"sl":82}],"name":"Verify encodeVariableSizeVector encodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_266":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_268":{"methods":[{"sl":98}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104}]},"test_28":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_289":{"methods":[{"sl":64},{"sl":89}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_298":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_339":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_350":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_359":{"methods":[{"sl":51},{"sl":70},{"sl":78}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":71},{"sl":79}]},"test_399":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_402":{"methods":[{"sl":64},{"sl":89}],"name":"Verify decodeVariableSizeVector decodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_48":{"methods":[{"sl":64},{"sl":70},{"sl":78},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":71},{"sl":79},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_56":{"methods":[{"sl":64},{"sl":89}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_57":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_66":{"methods":[{"sl":51},{"sl":98},{"sl":108}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104},{"sl":110},{"sl":112},{"sl":114},{"sl":116},{"sl":117},{"sl":120},{"sl":121},{"sl":122},{"sl":124},{"sl":125}]},"test_82":{"methods":[{"sl":82}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [66, 10, 170, 359], [66, 10, 170, 359], [359], [], [66, 10, 170], [66, 10, 170], [], [], [], [], [], [], [], [266, 289, 252, 148, 57, 56, 10, 350, 119, 402, 0, 14, 124, 48, 153], [], [], [], [], [], [10, 359, 48], [10, 359, 48], [], [], [], [], [], [], [359, 48], [359, 48], [], [], [255, 298, 57, 10, 350, 119, 82, 0, 170, 142, 28, 187, 124], [], [255, 298, 57, 10, 350, 119, 82, 0, 170, 142, 28, 187, 124], [255, 298, 57, 10, 350, 119, 82, 0, 170, 142, 28, 187, 124], [255, 298, 57, 10, 350, 119, 82, 0, 170, 142, 28, 187, 124], [], [], [266, 289, 252, 148, 57, 56, 10, 350, 119, 402, 0, 14, 124, 48, 153], [], [266, 289, 252, 148, 57, 56, 10, 350, 119, 402, 0, 14, 124, 48, 153], [266, 289, 252, 148, 57, 56, 10, 350, 119, 402, 0, 14, 124, 48, 153], [266, 289, 252, 148, 57, 56, 10, 350, 119, 402, 0, 14, 124, 48, 153], [266, 289, 252, 148, 57, 56, 10, 350, 119, 402, 0, 14, 124, 48, 153], [], [], [], [66, 268], [], [66, 268], [66, 268], [66, 268], [66, 268], [66, 268], [], [], [], [66], [], [66], [], [66], [], [66], [], [66], [66], [], [], [66], [66], [66], [], [66], [66], [], [], [], [399, 339, 13], [], [399, 339, 13], [], [], [], []]
