var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":135,"id":7060,"methods":[{"el":57,"sc":2,"sl":51},{"el":65,"sc":2,"sl":64},{"el":72,"sc":2,"sl":70},{"el":80,"sc":2,"sl":78},{"el":87,"sc":2,"sl":82},{"el":95,"sc":2,"sl":89},{"el":105,"sc":2,"sl":98},{"el":126,"sc":2,"sl":108},{"el":133,"sc":2,"sl":129}],"name":"ItsAidSsp","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_105":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_116":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_20":{"methods":[{"sl":98}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104}]},"test_263":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_292":{"methods":[{"sl":64},{"sl":89}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_349":{"methods":[{"sl":51},{"sl":70},{"sl":78}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":71},{"sl":79}]},"test_353":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_397":{"methods":[{"sl":51},{"sl":82}],"name":"Verify encodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":84},{"sl":85},{"sl":86}]},"test_425":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_454":{"methods":[{"sl":51},{"sl":98},{"sl":108}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104},{"sl":110},{"sl":112},{"sl":114},{"sl":116},{"sl":117},{"sl":120},{"sl":121},{"sl":122},{"sl":124},{"sl":125}]},"test_479":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_575":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_612":{"methods":[{"sl":64},{"sl":70},{"sl":78},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":71},{"sl":79},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_622":{"methods":[{"sl":64},{"sl":89}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_694":{"methods":[{"sl":64},{"sl":89}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_720":{"methods":[{"sl":64},{"sl":89}],"name":"Verify decodeVariableSizeVector decodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_8":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_819":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_846":{"methods":[{"sl":64},{"sl":89}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_857":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_863":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_940":{"methods":[{"sl":51},{"sl":64},{"sl":70},{"sl":82},{"sl":89}],"name":"Verify decodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":71},{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_949":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_95":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_965":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_973":{"methods":[{"sl":82}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_976":{"methods":[{"sl":82}],"name":"Verify encodeVariableSizeVector encodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_981":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [397, 454, 349, 940], [397, 454, 349, 940], [349], [], [397, 454, 940], [397, 454, 940], [], [], [], [], [], [], [], [575, 292, 622, 949, 694, 353, 863, 720, 105, 846, 95, 940, 965, 612, 263], [], [], [], [], [], [349, 940, 612], [349, 940, 612], [], [], [], [], [], [], [349, 612], [349, 612], [], [], [425, 575, 397, 857, 353, 863, 105, 973, 116, 479, 940, 965, 976], [], [425, 575, 397, 857, 353, 863, 105, 973, 116, 479, 940, 965, 976], [425, 575, 397, 857, 353, 863, 105, 973, 116, 479, 940, 965, 976], [425, 575, 397, 857, 353, 863, 105, 973, 116, 479, 940, 965, 976], [], [], [575, 292, 622, 949, 694, 353, 863, 720, 105, 846, 95, 940, 965, 612, 263], [], [575, 292, 622, 949, 694, 353, 863, 720, 105, 846, 95, 940, 965, 612, 263], [575, 292, 622, 949, 694, 353, 863, 720, 105, 846, 95, 940, 965, 612, 263], [575, 292, 622, 949, 694, 353, 863, 720, 105, 846, 95, 940, 965, 612, 263], [575, 292, 622, 949, 694, 353, 863, 720, 105, 846, 95, 940, 965, 612, 263], [], [], [], [454, 20], [], [454, 20], [454, 20], [454, 20], [454, 20], [454, 20], [], [], [], [454], [], [454], [], [454], [], [454], [], [454], [454], [], [], [454], [454], [454], [], [454], [454], [], [], [], [8, 819, 981], [], [8, 819, 981], [], [], [], []]
