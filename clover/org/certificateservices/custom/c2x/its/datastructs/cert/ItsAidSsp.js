var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":136,"id":7341,"methods":[{"el":58,"sc":2,"sl":52},{"el":66,"sc":2,"sl":65},{"el":73,"sc":2,"sl":71},{"el":81,"sc":2,"sl":79},{"el":88,"sc":2,"sl":83},{"el":96,"sc":2,"sl":90},{"el":106,"sc":2,"sl":99},{"el":127,"sc":2,"sl":109},{"el":134,"sc":2,"sl":130}],"name":"ItsAidSsp","sl":38}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_13":{"methods":[{"sl":65},{"sl":83},{"sl":90},{"sl":130}],"name":"Verify interoperability with version 2 certificates generated by ETSI TS 10309603 test suite.","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":87},{"sl":92},{"sl":93},{"sl":94},{"sl":95},{"sl":132}]},"test_203":{"methods":[{"sl":130}],"name":"Verify toString","pass":true,"statements":[{"sl":132}]},"test_221":{"methods":[{"sl":99}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103},{"sl":104},{"sl":105}]},"test_226":{"methods":[{"sl":83}],"name":"Verify serialization","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":87}]},"test_319":{"methods":[{"sl":83}],"name":"Verify serialization","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":87}]},"test_38":{"methods":[{"sl":65},{"sl":90}],"name":"Verify deserialization","pass":true,"statements":[{"sl":92},{"sl":93},{"sl":94},{"sl":95}]},"test_418":{"methods":[{"sl":65},{"sl":90}],"name":"Verify deserialization","pass":true,"statements":[{"sl":92},{"sl":93},{"sl":94},{"sl":95}]},"test_431":{"methods":[{"sl":52},{"sl":65},{"sl":71},{"sl":83},{"sl":90}],"name":"Verify decodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":53},{"sl":56},{"sl":57},{"sl":72},{"sl":85},{"sl":86},{"sl":87},{"sl":92},{"sl":93},{"sl":94},{"sl":95}]},"test_436":{"methods":[{"sl":65},{"sl":71},{"sl":79},{"sl":90}],"name":"Verify deserialization","pass":true,"statements":[{"sl":72},{"sl":80},{"sl":92},{"sl":93},{"sl":94},{"sl":95}]},"test_505":{"methods":[{"sl":130}],"name":"Verify toString","pass":true,"statements":[{"sl":132}]},"test_545":{"methods":[{"sl":65},{"sl":90}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":92},{"sl":93},{"sl":94},{"sl":95}]},"test_569":{"methods":[{"sl":83}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":87}]},"test_685":{"methods":[{"sl":130}],"name":"Verify toString","pass":true,"statements":[{"sl":132}]},"test_715":{"methods":[{"sl":65},{"sl":90}],"name":"Verify deserialization","pass":true,"statements":[{"sl":92},{"sl":93},{"sl":94},{"sl":95}]},"test_77":{"methods":[{"sl":52},{"sl":71},{"sl":79}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":53},{"sl":54},{"sl":72},{"sl":80}]},"test_808":{"methods":[{"sl":65},{"sl":90}],"name":"Verify decodeVariableSizeVector decodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":92},{"sl":93},{"sl":94},{"sl":95}]},"test_824":{"methods":[{"sl":52},{"sl":99},{"sl":109}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":53},{"sl":56},{"sl":57},{"sl":101},{"sl":102},{"sl":103},{"sl":104},{"sl":105},{"sl":111},{"sl":113},{"sl":115},{"sl":117},{"sl":118},{"sl":121},{"sl":122},{"sl":123},{"sl":125},{"sl":126}]},"test_848":{"methods":[{"sl":83}],"name":"Verify encodeVariableSizeVector encodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":87}]},"test_853":{"methods":[{"sl":65},{"sl":83},{"sl":90}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":87},{"sl":92},{"sl":93},{"sl":94},{"sl":95}]},"test_884":{"methods":[{"sl":130}],"name":"Verify toString","pass":true,"statements":[{"sl":132}]},"test_950":{"methods":[{"sl":83}],"name":"Verify serialization","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":87}]},"test_978":{"methods":[{"sl":130}],"name":"Verify toString","pass":true,"statements":[{"sl":132}]},"test_988":{"methods":[{"sl":83}],"name":"Verify serialization","pass":true,"statements":[{"sl":85},{"sl":86},{"sl":87}]},"test_994":{"methods":[{"sl":52},{"sl":83}],"name":"Verify encodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":53},{"sl":56},{"sl":57},{"sl":85},{"sl":86},{"sl":87}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [824, 77, 431, 994], [824, 77, 431, 994], [77], [], [824, 431, 994], [824, 431, 994], [], [], [], [], [], [], [], [853, 13, 431, 808, 436, 38, 418, 715, 545], [], [], [], [], [], [77, 431, 436], [77, 431, 436], [], [], [], [], [], [], [77, 436], [77, 436], [], [], [569, 848, 853, 319, 13, 431, 950, 226, 994, 988], [], [569, 848, 853, 319, 13, 431, 950, 226, 994, 988], [569, 848, 853, 319, 13, 431, 950, 226, 994, 988], [569, 848, 853, 319, 13, 431, 950, 226, 994, 988], [], [], [853, 13, 431, 808, 436, 38, 418, 715, 545], [], [853, 13, 431, 808, 436, 38, 418, 715, 545], [853, 13, 431, 808, 436, 38, 418, 715, 545], [853, 13, 431, 808, 436, 38, 418, 715, 545], [853, 13, 431, 808, 436, 38, 418, 715, 545], [], [], [], [824, 221], [], [824, 221], [824, 221], [824, 221], [824, 221], [824, 221], [], [], [], [824], [], [824], [], [824], [], [824], [], [824], [824], [], [], [824], [824], [824], [], [824], [824], [], [], [], [505, 13, 978, 203, 884, 685], [], [505, 13, 978, 203, 884, 685], [], [], [], []]
