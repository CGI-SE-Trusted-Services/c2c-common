var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":135,"id":2192,"methods":[{"el":57,"sc":2,"sl":51},{"el":65,"sc":2,"sl":64},{"el":72,"sc":2,"sl":70},{"el":80,"sc":2,"sl":78},{"el":87,"sc":2,"sl":82},{"el":95,"sc":2,"sl":89},{"el":105,"sc":2,"sl":98},{"el":126,"sc":2,"sl":108},{"el":133,"sc":2,"sl":129}],"name":"ItsAidSsp","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_144":{"methods":[{"sl":98}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104}]},"test_161":{"methods":[{"sl":64},{"sl":70},{"sl":78},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":71},{"sl":79},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_162":{"methods":[{"sl":64},{"sl":89}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_168":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_2":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_205":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_22":{"methods":[{"sl":51},{"sl":64},{"sl":70},{"sl":82},{"sl":89}],"name":"Verify decodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":71},{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_259":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_26":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_267":{"methods":[{"sl":82}],"name":"Verify encodeVariableSizeVector encodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_311":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_313":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_322":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_324":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_33":{"methods":[{"sl":51},{"sl":82}],"name":"Verify encodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":84},{"sl":85},{"sl":86}]},"test_363":{"methods":[{"sl":64},{"sl":82},{"sl":89}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86},{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_370":{"methods":[{"sl":129}],"name":"Verify toString","pass":true,"statements":[{"sl":131}]},"test_381":{"methods":[{"sl":82}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_393":{"methods":[{"sl":51},{"sl":98},{"sl":108}],"name":"Verify hashCode and equals","pass":true,"statements":[{"sl":52},{"sl":55},{"sl":56},{"sl":100},{"sl":101},{"sl":102},{"sl":103},{"sl":104},{"sl":110},{"sl":112},{"sl":114},{"sl":116},{"sl":117},{"sl":120},{"sl":121},{"sl":122},{"sl":124},{"sl":125}]},"test_401":{"methods":[{"sl":64},{"sl":89}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_59":{"methods":[{"sl":64},{"sl":89}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_61":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_80":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_81":{"methods":[{"sl":82}],"name":"Verify serialization","pass":true,"statements":[{"sl":84},{"sl":85},{"sl":86}]},"test_88":{"methods":[{"sl":64},{"sl":89}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_91":{"methods":[{"sl":51},{"sl":70},{"sl":78}],"name":"Verify the constructors and getters","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":71},{"sl":79}]},"test_96":{"methods":[{"sl":64},{"sl":89}],"name":"Verify deserialization","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]},"test_97":{"methods":[{"sl":64},{"sl":89}],"name":"Verify decodeVariableSizeVector decodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":91},{"sl":92},{"sl":93},{"sl":94}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [33, 22, 393, 91], [33, 22, 393, 91], [91], [], [33, 22, 393], [33, 22, 393], [], [], [], [], [], [], [], [401, 162, 311, 161, 22, 97, 322, 363, 80, 88, 2, 96, 205, 59, 61], [], [], [], [], [], [161, 22, 91], [161, 22, 91], [], [], [], [], [], [], [161, 91], [161, 91], [], [], [311, 313, 381, 33, 26, 168, 22, 322, 363, 81, 2, 205, 267], [], [311, 313, 381, 33, 26, 168, 22, 322, 363, 81, 2, 205, 267], [311, 313, 381, 33, 26, 168, 22, 322, 363, 81, 2, 205, 267], [311, 313, 381, 33, 26, 168, 22, 322, 363, 81, 2, 205, 267], [], [], [401, 162, 311, 161, 22, 97, 322, 363, 80, 88, 2, 96, 205, 59, 61], [], [401, 162, 311, 161, 22, 97, 322, 363, 80, 88, 2, 96, 205, 59, 61], [401, 162, 311, 161, 22, 97, 322, 363, 80, 88, 2, 96, 205, 59, 61], [401, 162, 311, 161, 22, 97, 322, 363, 80, 88, 2, 96, 205, 59, 61], [401, 162, 311, 161, 22, 97, 322, 363, 80, 88, 2, 96, 205, 59, 61], [], [], [], [144, 393], [], [144, 393], [144, 393], [144, 393], [144, 393], [144, 393], [], [], [], [393], [], [393], [], [393], [], [393], [], [393], [393], [], [], [393], [393], [393], [], [393], [393], [], [], [], [370, 259, 324], [], [370, 259, 324], [], [], [], []]
