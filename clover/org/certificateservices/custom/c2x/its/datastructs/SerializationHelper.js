var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":108,"id":482,"methods":[{"el":55,"sc":2,"sl":45},{"el":86,"sc":2,"sl":65},{"el":98,"sc":2,"sl":88},{"el":104,"sc":2,"sl":100}],"name":"SerializationHelper","sl":35}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_100":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[0]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_103":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_107":{"methods":[{"sl":65}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_108":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_112":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[0]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_122":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_127":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_130":{"methods":[{"sl":65}],"name":"Verify decodeVariableSizeVector decodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_132":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_136":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_14":{"methods":[{"sl":88}],"name":"Verify serialization of RecipientInfo","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_174":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_178":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_179":{"methods":[{"sl":65}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_180":{"methods":[{"sl":100}],"name":"Verify deserialization of EccPoint","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_181":{"methods":[{"sl":45},{"sl":88}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_182":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_183":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_184":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_195":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_20":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_203":{"methods":[{"sl":88}],"name":"Verify serialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_226":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[1]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_230":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[2]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_24":{"methods":[{"sl":65},{"sl":100}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_241":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[3]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_252":{"methods":[{"sl":100}],"name":"Verify deserialization of EcdsaSignature","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_256":{"methods":[{"sl":65},{"sl":100}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_26":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_266":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector encodes a small IntX vector properly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_278":{"methods":[{"sl":88}],"name":"Verify serialization of PublicKey","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_292":{"methods":[{"sl":45},{"sl":88}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_3":{"methods":[{"sl":100}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_302":{"methods":[{"sl":65}],"name":"Verify decodeVariableSizeVector decodes a small IntX vector properly","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_307":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_308":{"methods":[{"sl":100}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_313":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_314":{"methods":[{"sl":65}],"name":"Verify decodeVariableSizeVector decodes an empty vector propery","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":85}]},"test_320":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_332":{"methods":[{"sl":45}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_341":{"methods":[{"sl":88},{"sl":100}],"name":"Verify that eCEISEncryptSymmetricKey and eCEISDecryptSymmetricKey encrypts and decrypts symmetric key correcly.","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_342":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential v1 for interoperability testing","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_352":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector encodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_358":{"methods":[{"sl":45}],"name":"Verify that serializeDataToBeSignedInSecuredMessage serializes according to signature verification it ETSI specifification","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_36":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_365":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Ticket with a certificate as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_370":{"methods":[{"sl":45}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_372":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[3]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_377":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_38":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_381":{"methods":[{"sl":45},{"sl":65}],"name":"Verify decodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_385":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[1]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_392":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Ticket and Signed Secured Message v1 for interoperability testing","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_398":{"methods":[{"sl":65},{"sl":100}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_400":{"methods":[{"sl":88},{"sl":100}],"name":"Test to generate ECDSA Signature and then verify the signature for algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":93},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_401":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector encodes an empty vector propery","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_406":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_50":{"methods":[{"sl":65}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_55":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_67":{"methods":[{"sl":100}],"name":"Verify deserialization of PublicKey","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_69":{"methods":[{"sl":88}],"name":"Verify serialization of RecipientInfo","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_7":{"methods":[{"sl":88}],"name":"Verify serialization of Signature","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_72":{"methods":[{"sl":88}],"name":"Verify serialization of EcdsaSignature","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_76":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[2]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_79":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential with a certificate as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_8":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_82":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization CA v1 for interoperability testing","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_9":{"methods":[{"sl":88}],"name":"Verify serialization of EccPoint","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_90":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_92":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_93":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":101},{"sl":102},{"sl":103}]},"test_94":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_97":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_99":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate RootCA without Encryption Key and Geographic region and verify that all other attributes are set.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":101},{"sl":102},{"sl":103}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [332, 127, 26, 174, 266, 108, 103, 358, 92, 122, 365, 195, 79, 183, 342, 182, 36, 1, 377, 381, 97, 401, 392, 184, 20, 406, 181, 93, 38, 136, 99, 313, 178, 90, 370, 94, 352, 132, 292, 82], [332, 127, 26, 174, 266, 108, 103, 358, 92, 122, 365, 195, 79, 183, 342, 182, 36, 1, 377, 381, 97, 401, 392, 184, 20, 406, 181, 93, 38, 136, 99, 313, 178, 90, 370, 94, 352, 132, 292, 82], [332, 127, 26, 174, 266, 108, 103, 358, 92, 122, 365, 195, 79, 183, 342, 182, 36, 1, 377, 381, 97, 401, 392, 184, 20, 406, 181, 93, 38, 136, 99, 313, 178, 90, 370, 94, 352, 132, 292, 82], [332, 127, 26, 174, 266, 108, 103, 358, 92, 122, 365, 195, 79, 183, 342, 182, 36, 1, 377, 381, 97, 401, 392, 184, 20, 406, 181, 93, 38, 136, 99, 313, 178, 90, 370, 94, 352, 132, 292, 82], [332, 127, 26, 174, 266, 108, 103, 358, 92, 122, 365, 195, 79, 183, 342, 182, 36, 1, 377, 381, 97, 392, 184, 20, 406, 181, 93, 38, 136, 99, 313, 178, 90, 370, 94, 352, 132, 292, 82], [], [332, 127, 26, 174, 266, 108, 103, 358, 92, 122, 365, 195, 79, 183, 342, 182, 36, 1, 377, 381, 97, 401, 392, 184, 20, 406, 181, 93, 38, 136, 99, 313, 178, 90, 370, 94, 352, 132, 292, 82], [332, 127, 26, 174, 266, 108, 103, 358, 92, 122, 365, 195, 79, 183, 342, 182, 36, 1, 377, 381, 97, 401, 392, 184, 20, 406, 181, 93, 38, 136, 99, 313, 178, 90, 370, 94, 352, 132, 292, 82], [332, 127, 26, 174, 266, 108, 103, 358, 92, 122, 365, 195, 79, 183, 342, 182, 36, 1, 377, 381, 97, 401, 392, 184, 20, 406, 181, 93, 38, 136, 99, 313, 178, 90, 370, 94, 352, 132, 292, 82], [332, 127, 26, 174, 266, 108, 103, 358, 92, 122, 365, 195, 79, 183, 342, 182, 36, 1, 377, 381, 97, 401, 392, 184, 20, 406, 181, 93, 38, 136, 99, 313, 178, 90, 370, 94, 352, 132, 292, 82], [], [], [], [], [], [], [], [], [], [], [314, 26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [314, 26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [], [314, 26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [314, 26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [314, 26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [314, 26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [314, 26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [314, 26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [314, 26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [], [], [], [], [], [], [], [314, 26, 8, 179, 55, 103, 92, 130, 256, 398, 183, 107, 36, 50, 1, 320, 381, 97, 302, 24, 307, 20, 132], [], [], [241, 127, 26, 174, 7, 108, 72, 103, 92, 122, 365, 79, 183, 278, 342, 182, 100, 36, 1, 377, 69, 97, 385, 392, 341, 184, 203, 9, 20, 406, 181, 93, 38, 136, 230, 14, 99, 313, 178, 90, 94, 132, 292, 82, 400], [241, 127, 26, 174, 7, 108, 72, 103, 92, 122, 365, 79, 183, 278, 342, 182, 100, 36, 1, 377, 69, 97, 385, 392, 341, 184, 203, 9, 20, 406, 181, 93, 38, 136, 230, 14, 99, 313, 178, 90, 94, 132, 292, 82, 400], [241, 127, 26, 174, 7, 108, 72, 103, 92, 122, 365, 79, 183, 278, 342, 182, 100, 36, 1, 377, 69, 97, 385, 392, 341, 184, 203, 9, 20, 406, 181, 93, 38, 136, 230, 14, 99, 313, 178, 90, 94, 132, 292, 82, 400], [7, 108, 72, 122, 278, 100, 377, 69, 385, 184, 203, 9, 181, 136, 230, 14, 292], [], [241, 127, 26, 174, 7, 108, 72, 103, 92, 122, 365, 79, 183, 278, 342, 182, 100, 36, 1, 377, 69, 97, 385, 392, 341, 184, 203, 9, 20, 406, 181, 93, 38, 136, 230, 14, 99, 313, 178, 90, 94, 132, 292, 82, 400], [127, 26, 174, 103, 92, 365, 183, 342, 182, 36, 1, 97, 392, 341, 20, 406, 93, 38, 99, 313, 178, 90, 94, 132, 82], [], [241, 127, 26, 174, 7, 108, 72, 103, 92, 122, 365, 79, 183, 278, 342, 182, 100, 36, 1, 377, 69, 97, 385, 392, 341, 184, 203, 9, 20, 406, 181, 38, 136, 230, 14, 313, 178, 90, 94, 132, 292, 82, 400], [], [], [], [112, 127, 26, 174, 8, 55, 103, 308, 92, 365, 252, 3, 256, 398, 79, 183, 342, 67, 182, 180, 372, 36, 1, 320, 97, 226, 392, 341, 24, 307, 20, 406, 93, 38, 76, 99, 313, 178, 90, 94, 132, 82, 400], [112, 127, 26, 174, 8, 55, 103, 308, 92, 365, 252, 3, 256, 398, 79, 183, 342, 67, 182, 180, 372, 36, 1, 320, 97, 226, 392, 341, 24, 307, 20, 406, 93, 38, 76, 99, 313, 178, 90, 94, 132, 82, 400], [112, 127, 26, 174, 8, 55, 103, 308, 92, 365, 252, 3, 256, 398, 79, 183, 342, 67, 182, 180, 372, 36, 1, 320, 97, 226, 392, 341, 24, 307, 20, 406, 93, 38, 76, 99, 313, 178, 90, 94, 132, 82, 400], [112, 127, 26, 174, 8, 55, 103, 308, 92, 365, 252, 3, 256, 398, 79, 183, 342, 67, 182, 180, 372, 36, 1, 320, 97, 226, 392, 341, 24, 307, 20, 406, 93, 38, 76, 99, 313, 178, 90, 94, 132, 82, 400], [], [], [], [], []]
