var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":108,"id":482,"methods":[{"el":55,"sc":2,"sl":45},{"el":86,"sc":2,"sl":65},{"el":98,"sc":2,"sl":88},{"el":104,"sc":2,"sl":100}],"name":"SerializationHelper","sl":35}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_103":{"methods":[{"sl":45}],"name":"Verify that serializeDataToBeSignedInSecuredMessage serializes according to signature verification it ETSI specifification","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_105":{"methods":[{"sl":65},{"sl":100}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_107":{"methods":[{"sl":88},{"sl":100}],"name":"Test to generate ECDSA Signature and then verify the signature for algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":101},{"sl":102},{"sl":103}]},"test_111":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_116":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential v1 for interoperability testing","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_120":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential with a certificate as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_123":{"methods":[{"sl":65},{"sl":100}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_13":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_135":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_14":{"methods":[{"sl":100}],"name":"Verify deserialization of EccPoint","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_145":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[1]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_152":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_158":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_159":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[2]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_161":{"methods":[{"sl":88}],"name":"Verify serialization of PublicKey","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_166":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_170":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_181":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[0]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_184":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_185":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate RootCA without Encryption Key and Geographic region and verify that all other attributes are set.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_196":{"methods":[{"sl":100}],"name":"Verify deserialization of PublicKey","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_198":{"methods":[{"sl":88}],"name":"Verify serialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_199":{"methods":[{"sl":88}],"name":"Verify serialization of EccPoint","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_202":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_208":{"methods":[{"sl":65}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_210":{"methods":[{"sl":100}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_216":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_221":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_226":{"methods":[{"sl":65}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_243":{"methods":[{"sl":45},{"sl":65}],"name":"Verify decodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_244":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_256":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector encodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_271":{"methods":[{"sl":65},{"sl":100}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_274":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_275":{"methods":[{"sl":45},{"sl":88}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_277":{"methods":[{"sl":65}],"name":"Verify decodeVariableSizeVector decodes an empty vector propery","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":85}]},"test_284":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Ticket and Signed Secured Message v1 for interoperability testing","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_289":{"methods":[{"sl":88}],"name":"Verify serialization of RecipientInfo","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_295":{"methods":[{"sl":88}],"name":"Verify serialization of Signature","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_301":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_311":{"methods":[{"sl":45}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_314":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_32":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[1]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_322":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_325":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector encodes an empty vector propery","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_34":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_340":{"methods":[{"sl":88}],"name":"Verify serialization of RecipientInfo","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_362":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[0]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_363":{"methods":[{"sl":65}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_364":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_378":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_389":{"methods":[{"sl":100}],"name":"Verify deserialization of EcdsaSignature","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_39":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_397":{"methods":[{"sl":45},{"sl":88}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_40":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_400":{"methods":[{"sl":88},{"sl":100}],"name":"Verify that eCEISEncryptSymmetricKey and eCEISDecryptSymmetricKey encrypts and decrypts symmetric key correcly.","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_403":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization CA v1 for interoperability testing","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_405":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_406":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_52":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[3]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_54":{"methods":[{"sl":88}],"name":"Verify serialization of EcdsaSignature","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_55":{"methods":[{"sl":65}],"name":"Verify decodeVariableSizeVector decodes a small IntX vector properly","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_60":{"methods":[{"sl":45}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_61":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[2]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_64":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_66":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[3]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_7":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_73":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Ticket with a certificate as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_75":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_81":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_84":{"methods":[{"sl":100}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_85":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_88":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_92":{"methods":[{"sl":65}],"name":"Verify decodeVariableSizeVector decodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_99":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector encodes a small IntX vector properly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [311, 39, 120, 60, 158, 73, 88, 243, 13, 364, 99, 284, 103, 275, 322, 405, 403, 7, 378, 184, 34, 274, 85, 314, 111, 81, 406, 170, 256, 185, 244, 166, 152, 325, 397, 116, 216, 135, 301, 64], [311, 39, 120, 60, 158, 73, 88, 243, 13, 364, 99, 284, 103, 275, 322, 405, 403, 7, 378, 184, 34, 274, 85, 314, 111, 81, 406, 170, 256, 185, 244, 166, 152, 325, 397, 116, 216, 135, 301, 64], [311, 39, 120, 60, 158, 73, 88, 243, 13, 364, 99, 284, 103, 275, 322, 405, 403, 7, 378, 184, 34, 274, 85, 314, 111, 81, 406, 170, 256, 185, 244, 166, 152, 325, 397, 116, 216, 135, 301, 64], [311, 39, 120, 60, 158, 73, 88, 243, 13, 364, 99, 284, 103, 275, 322, 405, 403, 7, 378, 184, 34, 274, 85, 314, 111, 81, 406, 170, 256, 185, 244, 166, 152, 325, 397, 116, 216, 135, 301, 64], [311, 39, 120, 60, 158, 73, 88, 243, 13, 364, 99, 284, 103, 275, 322, 405, 403, 7, 378, 184, 34, 274, 85, 314, 111, 81, 406, 170, 256, 185, 244, 166, 152, 397, 116, 216, 135, 301, 64], [], [311, 39, 120, 60, 158, 73, 88, 243, 13, 364, 99, 284, 103, 275, 322, 405, 403, 7, 378, 184, 34, 274, 85, 314, 111, 81, 406, 170, 256, 185, 244, 166, 152, 325, 397, 116, 216, 135, 301, 64], [311, 39, 120, 60, 158, 73, 88, 243, 13, 364, 99, 284, 103, 275, 322, 405, 403, 7, 378, 184, 34, 274, 85, 314, 111, 81, 406, 170, 256, 185, 244, 166, 152, 325, 397, 116, 216, 135, 301, 64], [311, 39, 120, 60, 158, 73, 88, 243, 13, 364, 99, 284, 103, 275, 322, 405, 403, 7, 378, 184, 34, 274, 85, 314, 111, 81, 406, 170, 256, 185, 244, 166, 152, 325, 397, 116, 216, 135, 301, 64], [311, 39, 120, 60, 158, 73, 88, 243, 13, 364, 99, 284, 103, 275, 322, 405, 403, 7, 378, 184, 34, 274, 85, 314, 111, 81, 406, 170, 256, 185, 244, 166, 152, 325, 397, 116, 216, 135, 301, 64], [], [], [], [], [], [], [], [], [], [], [158, 277, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [158, 277, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [], [158, 277, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [158, 277, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [158, 277, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [158, 277, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [158, 277, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [158, 277, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [158, 277, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [158, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [158, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [158, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [], [], [], [], [], [], [], [158, 277, 55, 243, 322, 208, 202, 363, 271, 34, 92, 226, 85, 81, 105, 123, 166, 152, 75, 216, 221, 40, 64], [], [], [39, 199, 52, 120, 158, 198, 73, 88, 13, 364, 145, 289, 284, 275, 400, 322, 405, 403, 7, 184, 34, 161, 274, 85, 314, 111, 81, 54, 107, 406, 170, 185, 295, 244, 166, 152, 362, 61, 397, 116, 340, 216, 135, 301, 64], [39, 199, 52, 120, 158, 198, 73, 88, 13, 364, 145, 289, 284, 275, 400, 322, 405, 403, 7, 184, 34, 161, 274, 85, 314, 111, 81, 54, 107, 406, 170, 185, 295, 244, 166, 152, 362, 61, 397, 116, 340, 216, 135, 301, 64], [39, 199, 52, 120, 158, 198, 73, 88, 13, 364, 145, 289, 284, 275, 400, 322, 405, 403, 7, 184, 34, 161, 274, 85, 314, 111, 81, 54, 107, 406, 170, 185, 295, 244, 166, 152, 362, 61, 397, 116, 340, 216, 135, 301, 64], [39, 199, 198, 88, 145, 289, 275, 184, 161, 111, 54, 170, 295, 362, 61, 397, 340], [], [39, 199, 52, 120, 158, 198, 73, 88, 13, 364, 145, 289, 284, 275, 400, 322, 405, 403, 7, 184, 34, 161, 274, 85, 314, 111, 81, 54, 107, 406, 170, 185, 295, 244, 166, 152, 362, 61, 397, 116, 340, 216, 135, 301, 64], [158, 73, 13, 284, 400, 322, 405, 403, 7, 34, 274, 85, 314, 81, 107, 406, 166, 152, 116, 216, 135, 301, 64], [], [39, 199, 52, 120, 158, 198, 73, 88, 13, 364, 145, 289, 284, 275, 400, 322, 405, 403, 7, 184, 34, 161, 274, 85, 314, 111, 81, 54, 406, 170, 185, 295, 244, 166, 152, 362, 61, 397, 116, 340, 216, 135, 301, 64], [], [], [], [210, 181, 120, 158, 73, 159, 13, 389, 364, 66, 284, 32, 196, 400, 322, 405, 403, 7, 202, 271, 34, 274, 85, 314, 81, 105, 107, 406, 185, 244, 123, 166, 152, 75, 14, 116, 216, 221, 40, 135, 84, 301, 64], [210, 181, 120, 158, 73, 159, 13, 389, 364, 66, 284, 32, 196, 400, 322, 405, 403, 7, 202, 271, 34, 274, 85, 314, 81, 105, 107, 406, 185, 244, 123, 166, 152, 75, 14, 116, 216, 221, 40, 135, 84, 301, 64], [210, 181, 120, 158, 73, 159, 13, 389, 364, 66, 284, 32, 196, 400, 322, 405, 403, 7, 202, 271, 34, 274, 85, 314, 81, 105, 107, 406, 185, 244, 123, 166, 152, 75, 14, 116, 216, 221, 40, 135, 84, 301, 64], [210, 181, 120, 158, 73, 159, 13, 389, 364, 66, 284, 32, 196, 400, 322, 405, 403, 7, 202, 271, 34, 274, 85, 314, 81, 105, 107, 406, 185, 244, 123, 166, 152, 75, 14, 116, 216, 221, 40, 135, 84, 301, 64], [], [], [], [], []]
