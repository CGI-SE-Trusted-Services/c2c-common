var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":108,"id":482,"methods":[{"el":55,"sc":2,"sl":45},{"el":86,"sc":2,"sl":65},{"el":98,"sc":2,"sl":88},{"el":104,"sc":2,"sl":100}],"name":"SerializationHelper","sl":35}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[2]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_100":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[2]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_109":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Ticket and Signed Secured Message v1 for interoperability testing","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_111":{"methods":[{"sl":65}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_120":{"methods":[{"sl":100}],"name":"Verify deserialization of EccPoint","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_124":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_131":{"methods":[{"sl":88}],"name":"Verify serialization of PublicKey","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_137":{"methods":[{"sl":65}],"name":"Verify decodeVariableSizeVector decodes an empty vector propery","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":85}]},"test_140":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization CA v1 for interoperability testing","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_143":{"methods":[{"sl":88}],"name":"Verify serialization of EccPoint","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_151":{"methods":[{"sl":45}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_152":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[3]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":93},{"sl":96}]},"test_153":{"methods":[{"sl":88}],"name":"Verify serialization of Signature","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_155":{"methods":[{"sl":100}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_158":{"methods":[{"sl":88},{"sl":100}],"name":"Verify that eCEISEncryptSymmetricKey and eCEISDecryptSymmetricKey encrypts and decrypts symmetric key correcly.","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_159":{"methods":[{"sl":88}],"name":"Verify serialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_16":{"methods":[{"sl":88}],"name":"Verify serialization of RecipientInfo","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_160":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_162":{"methods":[{"sl":65},{"sl":100}],"name":"Verify getVerificationKey","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_168":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_171":{"methods":[{"sl":88}],"name":"Verify serialization of EcdsaSignature","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_182":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_183":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_193":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[0]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_197":{"methods":[{"sl":100}],"name":"Verify deserialization of PublicKey","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_2":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify that serializeCertWithoutSignature encodes the certificate without the signature correcly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_205":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_210":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_22":{"methods":[{"sl":45},{"sl":65}],"name":"Verify decodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_223":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[1]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_224":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[3]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_236":{"methods":[{"sl":100}],"name":"Verify that readFixedFieldSizeKey reads from byte array with correct fieldsize[0]","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_241":{"methods":[{"sl":88},{"sl":100}],"name":"Test to generate ECDSA Signature and then verify the signature for algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":101},{"sl":102},{"sl":103}]},"test_242":{"methods":[{"sl":65}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_248":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector encodes an empty vector propery","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_25":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_253":{"methods":[{"sl":65}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_254":{"methods":[{"sl":88}],"name":"Verify that writeFixedFieldSizeKey writes to byte array with correct fieldsize[1]","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_26":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_267":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector encodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_275":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_288":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_293":{"methods":[{"sl":65},{"sl":100}],"name":"Verify getEncryptionKey","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_311":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_313":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_317":{"methods":[{"sl":65}],"name":"Verify decodeVariableSizeVector decodes a small IntX vector properly","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_320":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector encodes a small IntX vector properly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_322":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify deserialization and serialization of reference ETSI Certificates works","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_325":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_33":{"methods":[{"sl":45}],"name":"Verify encodeVariableSizeVector supports data larger that 127 bytes","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_353":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Ticket with a certificate as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_36":{"methods":[{"sl":88}],"name":"Verify serialization of RecipientInfo","pass":true,"statements":[{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_363":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify that findRecipientInfo find correct RecipientInfo","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_365":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_368":{"methods":[{"sl":45},{"sl":88}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_371":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_372":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate RootCA without Encryption Key and Geographic region and verify that all other attributes are set.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_381":{"methods":[{"sl":45},{"sl":88}],"name":"Verify getEncoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_382":{"methods":[{"sl":45},{"sl":88}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":91},{"sl":93},{"sl":96}]},"test_387":{"methods":[{"sl":45}],"name":"Verify that serializeDataToBeSignedInSecuredMessage serializes according to signature verification it ETSI specifification","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_392":{"methods":[{"sl":45}],"name":"Verify serialization","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54}]},"test_394":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential with a certificate as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_401":{"methods":[{"sl":65},{"sl":100}],"name":"Verify that it is possible to parse a SecureMessage generate by interoperability site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_50":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_55":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_56":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Enrollment Credential v1 for interoperability testing","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_59":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_61":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_68":{"methods":[{"sl":100}],"name":"Verify deserialization of EcdsaSignature","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_80":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_83":{"methods":[{"sl":100}],"name":"Verify deserialization of EciesNistP256EncryptedKey","pass":true,"statements":[{"sl":101},{"sl":102},{"sl":103}]},"test_88":{"methods":[{"sl":45},{"sl":65},{"sl":88},{"sl":100}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_90":{"methods":[{"sl":45},{"sl":88},{"sl":100}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":89},{"sl":90},{"sl":93},{"sl":94},{"sl":96},{"sl":101},{"sl":102},{"sl":103}]},"test_96":{"methods":[{"sl":65},{"sl":100}],"name":"Verify deserialization","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85},{"sl":101},{"sl":102},{"sl":103}]},"test_97":{"methods":[{"sl":65}],"name":"Verify decodeVariableSizeVector decodes an small ItsAidSsp vector propery","pass":true,"statements":[{"sl":66},{"sl":68},{"sl":69},{"sl":70},{"sl":71},{"sl":72},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [353, 311, 313, 381, 394, 33, 90, 387, 50, 368, 210, 26, 168, 22, 320, 325, 372, 124, 140, 275, 322, 160, 56, 363, 109, 371, 88, 365, 2, 382, 151, 248, 205, 59, 267, 25, 288, 55, 392, 182], [353, 311, 313, 381, 394, 33, 90, 387, 50, 368, 210, 26, 168, 22, 320, 325, 372, 124, 140, 275, 322, 160, 56, 363, 109, 371, 88, 365, 2, 382, 151, 248, 205, 59, 267, 25, 288, 55, 392, 182], [353, 311, 313, 381, 394, 33, 90, 387, 50, 368, 210, 26, 168, 22, 320, 325, 372, 124, 140, 275, 322, 160, 56, 363, 109, 371, 88, 365, 2, 382, 151, 248, 205, 59, 267, 25, 288, 55, 392, 182], [353, 311, 313, 381, 394, 33, 90, 387, 50, 368, 210, 26, 168, 22, 320, 325, 372, 124, 140, 275, 322, 160, 56, 363, 109, 371, 88, 365, 2, 382, 151, 248, 205, 59, 267, 25, 288, 55, 392, 182], [353, 311, 313, 381, 394, 33, 90, 387, 50, 368, 210, 26, 168, 22, 320, 325, 372, 124, 140, 275, 322, 160, 56, 363, 109, 371, 88, 365, 2, 382, 151, 205, 59, 267, 25, 288, 55, 392, 182], [], [353, 311, 313, 381, 394, 33, 90, 387, 50, 368, 210, 26, 168, 22, 320, 325, 372, 124, 140, 275, 322, 160, 56, 363, 109, 371, 88, 365, 2, 382, 151, 248, 205, 59, 267, 25, 288, 55, 392, 182], [353, 311, 313, 381, 394, 33, 90, 387, 50, 368, 210, 26, 168, 22, 320, 325, 372, 124, 140, 275, 322, 160, 56, 363, 109, 371, 88, 365, 2, 382, 151, 248, 205, 59, 267, 25, 288, 55, 392, 182], [353, 311, 313, 381, 394, 33, 90, 387, 50, 368, 210, 26, 168, 22, 320, 325, 372, 124, 140, 275, 322, 160, 56, 363, 109, 371, 88, 365, 2, 382, 151, 248, 205, 59, 267, 25, 288, 55, 392, 182], [353, 311, 313, 381, 394, 33, 90, 387, 50, 368, 210, 26, 168, 22, 320, 325, 372, 124, 140, 275, 322, 160, 56, 363, 109, 371, 88, 365, 2, 382, 151, 248, 205, 59, 267, 25, 288, 55, 392, 182], [], [], [], [], [], [], [], [], [], [], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 137, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 137, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 137, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 137, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 137, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 137, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 137, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 137, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 137, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [], [], [], [], [], [], [], [401, 311, 162, 317, 242, 183, 293, 22, 97, 322, 137, 363, 80, 88, 2, 253, 111, 96, 205, 59, 25, 61, 182], [], [], [353, 36, 311, 313, 158, 381, 394, 90, 193, 50, 254, 368, 171, 210, 26, 168, 131, 325, 241, 143, 153, 372, 124, 140, 275, 16, 152, 322, 159, 0, 160, 56, 363, 109, 371, 88, 365, 2, 382, 205, 59, 25, 288, 55, 182], [353, 36, 311, 313, 158, 381, 394, 90, 193, 50, 254, 368, 171, 210, 26, 168, 131, 325, 241, 143, 153, 372, 124, 140, 275, 16, 152, 322, 159, 0, 160, 56, 363, 109, 371, 88, 365, 2, 382, 205, 59, 25, 288, 55, 182], [353, 36, 311, 313, 158, 381, 394, 90, 193, 50, 254, 368, 171, 210, 26, 168, 131, 325, 241, 143, 153, 372, 124, 140, 275, 16, 152, 322, 159, 0, 160, 56, 363, 109, 371, 88, 365, 2, 382, 205, 59, 25, 288, 55, 182], [36, 313, 381, 193, 254, 368, 171, 26, 168, 131, 143, 153, 16, 159, 0, 160, 382], [], [353, 36, 311, 313, 158, 381, 394, 90, 193, 50, 254, 368, 171, 210, 26, 168, 131, 325, 241, 143, 153, 372, 124, 140, 275, 16, 152, 322, 159, 0, 160, 56, 363, 109, 371, 88, 365, 2, 382, 205, 59, 25, 288, 55, 182], [353, 311, 158, 394, 90, 50, 210, 325, 241, 124, 275, 322, 56, 363, 109, 371, 88, 365, 2, 205, 59, 25, 288, 55, 182], [], [353, 36, 311, 313, 158, 381, 394, 90, 193, 50, 254, 368, 171, 210, 26, 168, 131, 325, 143, 153, 372, 124, 140, 275, 16, 152, 322, 159, 0, 160, 56, 363, 109, 371, 88, 365, 2, 382, 205, 59, 25, 288, 55, 182], [], [], [], [100, 353, 401, 311, 162, 158, 394, 90, 50, 183, 293, 210, 197, 325, 241, 372, 124, 140, 155, 275, 224, 322, 120, 236, 56, 363, 80, 109, 371, 88, 365, 2, 68, 96, 223, 83, 205, 59, 25, 288, 55, 61, 182], [100, 353, 401, 311, 162, 158, 394, 90, 50, 183, 293, 210, 197, 325, 241, 372, 124, 140, 155, 275, 224, 322, 120, 236, 56, 363, 80, 109, 371, 88, 365, 2, 68, 96, 223, 83, 205, 59, 25, 288, 55, 61, 182], [100, 353, 401, 311, 162, 158, 394, 90, 50, 183, 293, 210, 197, 325, 241, 372, 124, 140, 155, 275, 224, 322, 120, 236, 56, 363, 80, 109, 371, 88, 365, 2, 68, 96, 223, 83, 205, 59, 25, 288, 55, 61, 182], [100, 353, 401, 311, 162, 158, 394, 90, 50, 183, 293, 210, 197, 325, 241, 372, 124, 140, 155, 275, 224, 322, 120, 236, 56, 363, 80, 109, 371, 88, 365, 2, 68, 96, 223, 83, 205, 59, 25, 288, 55, 61, 182], [], [], [], [], []]
