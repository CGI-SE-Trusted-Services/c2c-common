var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":150,"id":4854,"methods":[{"el":62,"sc":2,"sl":60},{"el":71,"sc":2,"sl":69},{"el":147,"sc":2,"sl":100}],"name":"EnrollmentCertGenerator","sl":54}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_128":{"methods":[{"sl":100}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type SIGNER_CERTIFICATE","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_226":{"methods":[{"sl":100}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_239":{"methods":[{"sl":100}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":133},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_261":{"methods":[{"sl":100}],"name":"Verify that return first certificates public key of complete chain consists of explicit certificates","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_35":{"methods":[{"sl":100}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":133},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_385":{"methods":[{"sl":100}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_406":{"methods":[{"sl":100}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_455":{"methods":[{"sl":100}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":133},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_465":{"methods":[{"sl":100}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type CERT_CHAIN","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_482":{"methods":[{"sl":100}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_485":{"methods":[{"sl":100}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_498":{"methods":[{"sl":100}],"name":"Verify that return first certificates public key of enroll cert only consists of implicit certificates","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_499":{"methods":[{"sl":100}],"name":"Verify that return first certificates public key of enroll cert and enroll ca consists of implicit certificates","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_523":{"methods":[{"sl":100}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_569":{"methods":[{"sl":100}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":133},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_608":{"methods":[{"sl":100}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_625":{"methods":[{"sl":100}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_650":{"methods":[{"sl":100}],"name":"Verify that buildCertStore() generates certificate store maps correctly and buildChain generates correct certificate chain","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_665":{"methods":[{"sl":100}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_686":{"methods":[{"sl":100}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_735":{"methods":[{"sl":100}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_75":{"methods":[{"sl":100}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":141},{"sl":142},{"sl":144},{"sl":145}]},"test_769":{"methods":[{"sl":100}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":133},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_774":{"methods":[{"sl":100}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":133},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]},"test_946":{"methods":[{"sl":100}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":119},{"sl":120},{"sl":123},{"sl":126},{"sl":128},{"sl":131},{"sl":132},{"sl":135},{"sl":136},{"sl":137},{"sl":138},{"sl":139},{"sl":144},{"sl":145}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [], [], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [], [], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [], [], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [35, 455, 239, 569, 774, 769], [], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [261, 946, 35, 625, 455, 239, 569, 774, 769, 608, 650, 128, 465, 485], [261, 946, 35, 625, 455, 239, 569, 774, 769, 608, 650, 128, 465, 485], [], [686, 665, 239, 735, 569, 385, 523, 406, 75, 226, 498, 499, 482], [686, 665, 239, 735, 569, 385, 523, 406, 75, 226, 498, 499, 482], [], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [261, 946, 35, 625, 686, 665, 455, 239, 735, 569, 385, 523, 406, 75, 774, 769, 608, 650, 128, 226, 498, 499, 465, 485, 482], [], [], [], [], []]
