var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":70,"id":4085,"methods":[{"el":35,"sc":2,"sl":33},{"el":42,"sc":2,"sl":40},{"el":49,"sc":2,"sl":47},{"el":69,"sc":2,"sl":52}],"name":"SequenceOfIMaxGroup","sl":26}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_12":{"methods":[{"sl":33},{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":34},{"sl":54},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_212":{"methods":[{"sl":33}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":34}]},"test_222":{"methods":[{"sl":33},{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":34},{"sl":54},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_232":{"methods":[{"sl":33}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":34}]},"test_26":{"methods":[{"sl":33}],"name":"Verify that CrlContentsType is correctly encoded for type fullLinkedCrl","pass":true,"statements":[{"sl":34}]},"test_284":{"methods":[{"sl":33},{"sl":40},{"sl":47}],"name":"Verify that SequenceOfIMaxGroup is initialized properly","pass":true,"statements":[{"sl":34},{"sl":41},{"sl":48}]},"test_3":{"methods":[{"sl":33}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":34}]},"test_327":{"methods":[{"sl":33}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":34}]},"test_335":{"methods":[{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_36":{"methods":[{"sl":33}],"name":"Verify that CrlContentsType is correctly encoded for type deltaLinkedCrl","pass":true,"statements":[{"sl":34}]},"test_481":{"methods":[{"sl":33}],"name":"Verify that SequenceOfLAGroup is initialized properly","pass":true,"statements":[{"sl":34}]},"test_521":{"methods":[{"sl":33}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":34}]},"test_550":{"methods":[{"sl":33}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":34}]},"test_58":{"methods":[{"sl":33},{"sl":47}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":34},{"sl":48}]},"test_610":{"methods":[{"sl":33},{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":34},{"sl":54},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_620":{"methods":[{"sl":33},{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":34},{"sl":54},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_629":{"methods":[{"sl":33},{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":34},{"sl":54},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_70":{"methods":[{"sl":52}],"name":"Verify toString()","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_80":{"methods":[{"sl":33},{"sl":47},{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":34},{"sl":48},{"sl":54},{"sl":55},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_911":{"methods":[{"sl":33}],"name":"Verify that SequenceOfJMaxGroup is initialized properly","pass":true,"statements":[{"sl":34}]},"test_963":{"methods":[{"sl":33}],"name":"Verify that IllegalArgumentException is thrown if both individual and groups are null","pass":true,"statements":[{"sl":34}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [284, 232, 521, 481, 963, 3, 212, 911, 26, 80, 327, 58, 620, 550, 36, 12, 610, 222, 629], [284, 232, 521, 481, 963, 3, 212, 911, 26, 80, 327, 58, 620, 550, 36, 12, 610, 222, 629], [], [], [], [], [], [284], [284], [], [], [], [], [], [284, 80, 58], [284, 80, 58], [], [], [], [80, 335, 620, 12, 610, 222, 70, 629], [], [80, 335, 620, 12, 610, 222, 70, 629], [80], [], [80, 335, 620, 12, 610, 222, 70, 629], [80, 335, 620, 12, 610, 222, 70, 629], [80, 335, 620, 12, 610, 222, 70, 629], [80, 335, 620, 12, 610, 222, 70, 629], [], [80, 335, 620, 12, 610, 222, 70, 629], [80, 335, 620, 12, 610, 222, 70, 629], [], [], [80, 335, 620, 12, 610, 222, 70, 629], [80, 335, 620, 12, 610, 222, 70, 629], [80, 335, 620, 12, 610, 222, 70, 629], [], []]
