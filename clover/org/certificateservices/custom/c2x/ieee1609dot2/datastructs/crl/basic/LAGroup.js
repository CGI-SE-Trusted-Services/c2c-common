var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":95,"id":4012,"methods":[{"el":44,"sc":2,"sl":41},{"el":55,"sc":2,"sl":49},{"el":64,"sc":2,"sl":62},{"el":72,"sc":2,"sl":70},{"el":80,"sc":2,"sl":78},{"el":86,"sc":2,"sl":82},{"el":93,"sc":2,"sl":89}],"name":"LAGroup","sl":30}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_12":{"methods":[{"sl":49},{"sl":62},{"sl":70},{"sl":78},{"sl":82},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85},{"sl":91}]},"test_212":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_222":{"methods":[{"sl":41},{"sl":62},{"sl":70},{"sl":78},{"sl":82},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85},{"sl":91}]},"test_232":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_26":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that CrlContentsType is correctly encoded for type fullLinkedCrl","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_3":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_327":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_335":{"methods":[{"sl":62},{"sl":70},{"sl":78},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":63},{"sl":71},{"sl":79},{"sl":91}]},"test_36":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that CrlContentsType is correctly encoded for type deltaLinkedCrl","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_481":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that SequenceOfLAGroup is initialized properly","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_521":{"methods":[{"sl":41},{"sl":49},{"sl":62},{"sl":70},{"sl":78},{"sl":82}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85}]},"test_550":{"methods":[{"sl":49},{"sl":82}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":83},{"sl":84},{"sl":85}]},"test_58":{"methods":[{"sl":41},{"sl":49},{"sl":82}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":83},{"sl":84},{"sl":85}]},"test_610":{"methods":[{"sl":41},{"sl":62},{"sl":70},{"sl":78},{"sl":82},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85},{"sl":91}]},"test_620":{"methods":[{"sl":41},{"sl":62},{"sl":70},{"sl":78},{"sl":82},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85},{"sl":91}]},"test_629":{"methods":[{"sl":41},{"sl":62},{"sl":70},{"sl":78},{"sl":82},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85},{"sl":91}]},"test_70":{"methods":[{"sl":62},{"sl":70},{"sl":78},{"sl":89}],"name":"Verify toString()","pass":true,"statements":[{"sl":63},{"sl":71},{"sl":79},{"sl":91}]},"test_911":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that SequenceOfJMaxGroup is initialized properly","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_963":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that IllegalArgumentException is thrown if both individual and groups are null","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [58, 232, 620, 521, 481, 36, 963, 3, 610, 212, 222, 911, 26, 629, 327], [58, 232, 620, 521, 481, 36, 963, 3, 610, 212, 222, 911, 26, 629, 327], [58, 232, 620, 521, 481, 36, 963, 3, 610, 212, 222, 911, 26, 629, 327], [], [], [], [], [], [58, 550, 521, 12], [58, 550, 521, 12], [58, 550, 521, 12], [58, 550, 521, 12], [58, 550, 521, 12], [58, 550, 521, 12], [], [], [], [], [], [], [], [335, 620, 521, 12, 610, 222, 70, 629], [335, 620, 521, 12, 610, 222, 70, 629], [], [], [], [], [], [], [335, 620, 521, 12, 610, 222, 70, 629], [335, 620, 521, 12, 610, 222, 70, 629], [], [], [], [], [], [], [335, 620, 521, 12, 610, 222, 70, 629], [335, 620, 521, 12, 610, 222, 70, 629], [], [], [58, 232, 620, 550, 521, 481, 36, 12, 963, 3, 610, 212, 222, 911, 26, 629, 327], [58, 232, 620, 550, 521, 481, 36, 12, 963, 3, 610, 212, 222, 911, 26, 629, 327], [58, 232, 620, 550, 521, 481, 36, 12, 963, 3, 610, 212, 222, 911, 26, 629, 327], [58, 232, 620, 550, 521, 481, 36, 12, 963, 3, 610, 212, 222, 911, 26, 629, 327], [], [], [], [335, 620, 12, 610, 222, 70, 629], [], [335, 620, 12, 610, 222, 70, 629], [], [], [], []]
