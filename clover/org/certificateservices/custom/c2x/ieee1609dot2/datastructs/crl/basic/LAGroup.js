var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":95,"id":3867,"methods":[{"el":44,"sc":2,"sl":41},{"el":55,"sc":2,"sl":49},{"el":64,"sc":2,"sl":62},{"el":72,"sc":2,"sl":70},{"el":80,"sc":2,"sl":78},{"el":86,"sc":2,"sl":82},{"el":93,"sc":2,"sl":89}],"name":"LAGroup","sl":30}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_155":{"methods":[{"sl":41},{"sl":62},{"sl":70},{"sl":78},{"sl":82},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85},{"sl":91}]},"test_209":{"methods":[{"sl":41},{"sl":62},{"sl":70},{"sl":78},{"sl":82},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85},{"sl":91}]},"test_308":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that CrlContentsType is correctly encoded for type fullLinkedCrl","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_333":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_368":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that IllegalArgumentException is thrown if both individual and groups are null","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_441":{"methods":[{"sl":49},{"sl":82}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":83},{"sl":84},{"sl":85}]},"test_443":{"methods":[{"sl":41},{"sl":49},{"sl":62},{"sl":70},{"sl":78},{"sl":82}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85}]},"test_529":{"methods":[{"sl":62},{"sl":70},{"sl":78},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":63},{"sl":71},{"sl":79},{"sl":91}]},"test_553":{"methods":[{"sl":41},{"sl":62},{"sl":70},{"sl":78},{"sl":82},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85},{"sl":91}]},"test_565":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_633":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that SequenceOfJMaxGroup is initialized properly","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_65":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_686":{"methods":[{"sl":41},{"sl":49},{"sl":82}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":83},{"sl":84},{"sl":85}]},"test_691":{"methods":[{"sl":49},{"sl":62},{"sl":70},{"sl":78},{"sl":82},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":54},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85},{"sl":91}]},"test_72":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that SequenceOfLAGroup is initialized properly","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_815":{"methods":[{"sl":62},{"sl":70},{"sl":78},{"sl":89}],"name":"Verify toString()","pass":true,"statements":[{"sl":63},{"sl":71},{"sl":79},{"sl":91}]},"test_885":{"methods":[{"sl":41},{"sl":62},{"sl":70},{"sl":78},{"sl":82},{"sl":89}],"name":"Verify toString","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":63},{"sl":71},{"sl":79},{"sl":83},{"sl":84},{"sl":85},{"sl":91}]},"test_889":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that CrlContentsType is correctly encoded for type deltaLinkedCrl","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]},"test_967":{"methods":[{"sl":41},{"sl":82}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":42},{"sl":43},{"sl":83},{"sl":84},{"sl":85}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [72, 553, 686, 565, 333, 885, 889, 443, 967, 308, 633, 209, 368, 155, 65], [72, 553, 686, 565, 333, 885, 889, 443, 967, 308, 633, 209, 368, 155, 65], [72, 553, 686, 565, 333, 885, 889, 443, 967, 308, 633, 209, 368, 155, 65], [], [], [], [], [], [686, 691, 443, 441], [686, 691, 443, 441], [686, 691, 443, 441], [686, 691, 443, 441], [686, 691, 443, 441], [686, 691, 443, 441], [], [], [], [], [], [], [], [553, 529, 691, 815, 885, 443, 209, 155], [553, 529, 691, 815, 885, 443, 209, 155], [], [], [], [], [], [], [553, 529, 691, 815, 885, 443, 209, 155], [553, 529, 691, 815, 885, 443, 209, 155], [], [], [], [], [], [], [553, 529, 691, 815, 885, 443, 209, 155], [553, 529, 691, 815, 885, 443, 209, 155], [], [], [72, 553, 686, 565, 333, 691, 885, 889, 443, 967, 308, 633, 209, 368, 155, 65, 441], [72, 553, 686, 565, 333, 691, 885, 889, 443, 967, 308, 633, 209, 368, 155, 65, 441], [72, 553, 686, 565, 333, 691, 885, 889, 443, 967, 308, 633, 209, 368, 155, 65, 441], [72, 553, 686, 565, 333, 691, 885, 889, 443, 967, 308, 633, 209, 368, 155, 65, 441], [], [], [], [553, 529, 691, 815, 885, 209, 155], [], [553, 529, 691, 815, 885, 209, 155], [], [], [], []]
