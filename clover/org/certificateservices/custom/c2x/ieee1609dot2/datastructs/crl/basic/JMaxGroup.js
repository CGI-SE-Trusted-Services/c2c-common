var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":84,"id":3850,"methods":[{"el":42,"sc":2,"sl":39},{"el":52,"sc":2,"sl":47},{"el":60,"sc":2,"sl":58},{"el":68,"sc":2,"sl":66},{"el":75,"sc":2,"sl":72},{"el":82,"sc":2,"sl":78}],"name":"JMaxGroup","sl":28}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_209":{"methods":[{"sl":47},{"sl":58},{"sl":66},{"sl":72},{"sl":78}],"name":"Verify toString","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":59},{"sl":67},{"sl":73},{"sl":74},{"sl":80}]},"test_308":{"methods":[{"sl":39},{"sl":72}],"name":"Verify that CrlContentsType is correctly encoded for type fullLinkedCrl","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":73},{"sl":74}]},"test_333":{"methods":[{"sl":39},{"sl":72}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":73},{"sl":74}]},"test_368":{"methods":[{"sl":39},{"sl":72}],"name":"Verify that IllegalArgumentException is thrown if both individual and groups are null","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":73},{"sl":74}]},"test_529":{"methods":[{"sl":58},{"sl":66},{"sl":78}],"name":"Verify toString","pass":true,"statements":[{"sl":59},{"sl":67},{"sl":80}]},"test_553":{"methods":[{"sl":39},{"sl":58},{"sl":66},{"sl":72},{"sl":78}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":59},{"sl":67},{"sl":73},{"sl":74},{"sl":80}]},"test_565":{"methods":[{"sl":39},{"sl":47},{"sl":58},{"sl":66},{"sl":72}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":59},{"sl":67},{"sl":73},{"sl":74}]},"test_633":{"methods":[{"sl":39},{"sl":72}],"name":"Verify that SequenceOfJMaxGroup is initialized properly","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":73},{"sl":74}]},"test_65":{"methods":[{"sl":39},{"sl":72}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":73},{"sl":74}]},"test_686":{"methods":[{"sl":39},{"sl":47},{"sl":72}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":73},{"sl":74}]},"test_815":{"methods":[{"sl":58},{"sl":66},{"sl":78}],"name":"Verify toString()","pass":true,"statements":[{"sl":59},{"sl":67},{"sl":80}]},"test_885":{"methods":[{"sl":39},{"sl":58},{"sl":66},{"sl":72},{"sl":78}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":59},{"sl":67},{"sl":73},{"sl":74},{"sl":80}]},"test_889":{"methods":[{"sl":39},{"sl":72}],"name":"Verify that CrlContentsType is correctly encoded for type deltaLinkedCrl","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":73},{"sl":74}]},"test_967":{"methods":[{"sl":47},{"sl":72}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":73},{"sl":74}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [553, 686, 565, 333, 885, 889, 308, 633, 368, 65], [553, 686, 565, 333, 885, 889, 308, 633, 368, 65], [553, 686, 565, 333, 885, 889, 308, 633, 368, 65], [], [], [], [], [], [686, 565, 967, 209], [686, 565, 967, 209], [686, 565, 967, 209], [686, 565, 967, 209], [686, 565, 967, 209], [], [], [], [], [], [], [553, 565, 529, 815, 885, 209], [553, 565, 529, 815, 885, 209], [], [], [], [], [], [], [553, 565, 529, 815, 885, 209], [553, 565, 529, 815, 885, 209], [], [], [], [], [553, 686, 565, 333, 885, 889, 967, 308, 633, 209, 368, 65], [553, 686, 565, 333, 885, 889, 967, 308, 633, 209, 368, 65], [553, 686, 565, 333, 885, 889, 967, 308, 633, 209, 368, 65], [], [], [], [553, 529, 815, 885, 209], [], [553, 529, 815, 885, 209], [], [], [], []]
