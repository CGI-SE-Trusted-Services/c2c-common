var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":70,"id":3991,"methods":[{"el":35,"sc":2,"sl":33},{"el":42,"sc":2,"sl":40},{"el":49,"sc":2,"sl":47},{"el":69,"sc":2,"sl":52}],"name":"SequenceOfJMaxGroup","sl":26}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_308":{"methods":[{"sl":33}],"name":"Verify that CrlContentsType is correctly encoded for type fullLinkedCrl","pass":true,"statements":[{"sl":34}]},"test_333":{"methods":[{"sl":33}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":34}]},"test_368":{"methods":[{"sl":33}],"name":"Verify that IllegalArgumentException is thrown if both individual and groups are null","pass":true,"statements":[{"sl":34}]},"test_529":{"methods":[{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_553":{"methods":[{"sl":33},{"sl":47},{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":34},{"sl":48},{"sl":54},{"sl":55},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_633":{"methods":[{"sl":33},{"sl":40},{"sl":47}],"name":"Verify that SequenceOfJMaxGroup is initialized properly","pass":true,"statements":[{"sl":34},{"sl":41},{"sl":48}]},"test_65":{"methods":[{"sl":33}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":34}]},"test_686":{"methods":[{"sl":33},{"sl":47}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":34},{"sl":48}]},"test_815":{"methods":[{"sl":52}],"name":"Verify toString()","pass":true,"statements":[{"sl":54},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_885":{"methods":[{"sl":33},{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":34},{"sl":54},{"sl":57},{"sl":58},{"sl":59},{"sl":60},{"sl":62},{"sl":63},{"sl":66},{"sl":67},{"sl":68}]},"test_889":{"methods":[{"sl":33}],"name":"Verify that CrlContentsType is correctly encoded for type deltaLinkedCrl","pass":true,"statements":[{"sl":34}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [553, 686, 333, 885, 889, 308, 633, 368, 65], [553, 686, 333, 885, 889, 308, 633, 368, 65], [], [], [], [], [], [633], [633], [], [], [], [], [], [553, 686, 633], [553, 686, 633], [], [], [], [553, 529, 815, 885], [], [553, 529, 815, 885], [553], [], [553, 529, 815, 885], [553, 529, 815, 885], [553, 529, 815, 885], [553, 529, 815, 885], [], [553, 529, 815, 885], [553, 529, 815, 885], [], [], [553, 529, 815, 885], [553, 529, 815, 885], [553, 529, 815, 885], [], []]
