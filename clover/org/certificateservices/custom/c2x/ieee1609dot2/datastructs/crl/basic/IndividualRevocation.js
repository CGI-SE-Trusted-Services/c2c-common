var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":80,"id":3833,"methods":[{"el":40,"sc":2,"sl":37},{"el":50,"sc":2,"sl":45},{"el":58,"sc":2,"sl":56},{"el":66,"sc":2,"sl":64},{"el":71,"sc":2,"sl":68},{"el":78,"sc":2,"sl":74}],"name":"IndividualRevocation","sl":26}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_123":{"methods":[{"sl":37},{"sl":56},{"sl":64},{"sl":68},{"sl":74}],"name":"Verify toString","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":57},{"sl":65},{"sl":69},{"sl":70},{"sl":76}]},"test_155":{"methods":[{"sl":37},{"sl":56},{"sl":64},{"sl":68},{"sl":74}],"name":"Verify toString","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":57},{"sl":65},{"sl":69},{"sl":70},{"sl":76}]},"test_209":{"methods":[{"sl":37},{"sl":56},{"sl":64},{"sl":68},{"sl":74}],"name":"Verify toString","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":57},{"sl":65},{"sl":69},{"sl":70},{"sl":76}]},"test_288":{"methods":[{"sl":37},{"sl":56},{"sl":64},{"sl":68},{"sl":74}],"name":"Verify toString","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":57},{"sl":65},{"sl":69},{"sl":70},{"sl":76}]},"test_295":{"methods":[{"sl":37},{"sl":45},{"sl":56},{"sl":64},{"sl":68}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":57},{"sl":65},{"sl":69},{"sl":70}]},"test_308":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that CrlContentsType is correctly encoded for type fullLinkedCrl","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_333":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_342":{"methods":[{"sl":45},{"sl":68}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":69},{"sl":70}]},"test_368":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that IllegalArgumentException is thrown if both individual and groups are null","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_441":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_443":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_491":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that SequenceOfIMaxGroup is initialized properly","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_529":{"methods":[{"sl":56},{"sl":64},{"sl":74}],"name":"Verify toString","pass":true,"statements":[{"sl":57},{"sl":65},{"sl":76}]},"test_549":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that SequenceOfIndividualRevocation is initialized properly","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_553":{"methods":[{"sl":37},{"sl":56},{"sl":64},{"sl":68},{"sl":74}],"name":"Verify toString","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":57},{"sl":65},{"sl":69},{"sl":70},{"sl":76}]},"test_565":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_633":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that SequenceOfJMaxGroup is initialized properly","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_65":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_653":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_686":{"methods":[{"sl":37},{"sl":45},{"sl":68}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":69},{"sl":70}]},"test_691":{"methods":[{"sl":37},{"sl":56},{"sl":64},{"sl":68},{"sl":74}],"name":"Verify toString","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":57},{"sl":65},{"sl":69},{"sl":70},{"sl":76}]},"test_72":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that SequenceOfLAGroup is initialized properly","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_766":{"methods":[{"sl":45},{"sl":56},{"sl":64},{"sl":68},{"sl":74}],"name":"Verify toString","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":48},{"sl":49},{"sl":57},{"sl":65},{"sl":69},{"sl":70},{"sl":76}]},"test_815":{"methods":[{"sl":56},{"sl":64},{"sl":74}],"name":"Verify toString()","pass":true,"statements":[{"sl":57},{"sl":65},{"sl":76}]},"test_885":{"methods":[{"sl":37},{"sl":56},{"sl":64},{"sl":68},{"sl":74}],"name":"Verify toString","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":57},{"sl":65},{"sl":69},{"sl":70},{"sl":76}]},"test_889":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that CrlContentsType is correctly encoded for type deltaLinkedCrl","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_937":{"methods":[{"sl":37},{"sl":56},{"sl":64},{"sl":68},{"sl":74}],"name":"Verify toString","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":57},{"sl":65},{"sl":69},{"sl":70},{"sl":76}]},"test_954":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]},"test_967":{"methods":[{"sl":37},{"sl":68}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":69},{"sl":70}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [72, 686, 691, 885, 937, 288, 443, 308, 633, 123, 209, 368, 954, 65, 441, 553, 565, 333, 889, 653, 967, 491, 295, 155, 549], [72, 686, 691, 885, 937, 288, 443, 308, 633, 123, 209, 368, 954, 65, 441, 553, 565, 333, 889, 653, 967, 491, 295, 155, 549], [72, 686, 691, 885, 937, 288, 443, 308, 633, 123, 209, 368, 954, 65, 441, 553, 565, 333, 889, 653, 967, 491, 295, 155, 549], [], [], [], [], [], [686, 766, 342, 295], [686, 766, 342, 295], [686, 766, 342, 295], [686, 766, 342, 295], [686, 766, 342, 295], [], [], [], [], [], [], [529, 691, 885, 937, 288, 123, 209, 766, 553, 815, 295, 155], [529, 691, 885, 937, 288, 123, 209, 766, 553, 815, 295, 155], [], [], [], [], [], [], [529, 691, 885, 937, 288, 123, 209, 766, 553, 815, 295, 155], [529, 691, 885, 937, 288, 123, 209, 766, 553, 815, 295, 155], [], [], [72, 686, 691, 885, 937, 288, 443, 308, 633, 123, 209, 368, 954, 65, 441, 766, 553, 565, 333, 342, 889, 653, 967, 491, 295, 155, 549], [72, 686, 691, 885, 937, 288, 443, 308, 633, 123, 209, 368, 954, 65, 441, 766, 553, 565, 333, 342, 889, 653, 967, 491, 295, 155, 549], [72, 686, 691, 885, 937, 288, 443, 308, 633, 123, 209, 368, 954, 65, 441, 766, 553, 565, 333, 342, 889, 653, 967, 491, 295, 155, 549], [], [], [], [529, 691, 885, 937, 288, 123, 209, 766, 553, 815, 155], [], [529, 691, 885, 937, 288, 123, 209, 766, 553, 815, 155], [], [], [], []]
