var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":90,"id":11905,"methods":[{"el":37,"sc":2,"sl":31},{"el":49,"sc":2,"sl":39},{"el":60,"sc":2,"sl":52},{"el":70,"sc":2,"sl":62},{"el":82,"sc":2,"sl":72},{"el":87,"sc":2,"sl":84}],"name":"SubjectAssurranceSpec","sl":28}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_169":{"methods":[{"sl":39}],"name":"Verify that subjectAssurance calculates a byte value of: 1 for assuranceLevel: 0 and confidenceLevel: 1","pass":true,"statements":[{"sl":42}]},"test_224":{"methods":[{"sl":72}],"name":"Verify that serialization produces correct output[0]","pass":true,"statements":[{"sl":75}]},"test_232":{"methods":[{"sl":52}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid assuranceLevel: 8","pass":true,"statements":[{"sl":55},{"sl":57}]},"test_242":{"methods":[{"sl":72}],"name":"Verify that serialization produces correct output[1]","pass":true,"statements":[{"sl":75}]},"test_27":{"methods":[{"sl":72}],"name":"Verify that serialization produces correct output[2]","pass":true,"statements":[{"sl":75}]},"test_42":{"methods":[{"sl":39}],"name":"Verify that subjectAssurance calculates a byte value of: 33 for assuranceLevel: 1 and confidenceLevel: 1","pass":true,"statements":[{"sl":42}]},"test_448":{"methods":[{"sl":62}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid confidenceLevel: 4","pass":true,"statements":[{"sl":65},{"sl":67}]},"test_45":{"methods":[{"sl":52}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid assuranceLevel: -1","pass":true,"statements":[{"sl":55},{"sl":57}]},"test_624":{"methods":[{"sl":39}],"name":"Verify that subjectAssurance calculates a byte value of: 227 for assuranceLevel: 7 and confidenceLevel: 3","pass":true,"statements":[{"sl":42}]},"test_638":{"methods":[{"sl":52}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid assuranceLevel: 10","pass":true,"statements":[{"sl":55},{"sl":57}]},"test_64":{"methods":[{"sl":62}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid confidenceLevel: 10","pass":true,"statements":[{"sl":65},{"sl":67}]},"test_655":{"methods":[{"sl":84}],"name":"Verify toString","pass":true,"statements":[{"sl":86}]},"test_754":{"methods":[{"sl":39}],"name":"Verify that subjectAssurance calculates a byte value of: 0 for assuranceLevel: 0 and confidenceLevel: 0","pass":true,"statements":[{"sl":42}]},"test_859":{"methods":[{"sl":62}],"name":"Verify that subjectAssurance throws IllegalArgumentException on invalid confidenceLevel: -1","pass":true,"statements":[{"sl":65},{"sl":67}]},"test_867":{"methods":[{"sl":31}],"name":"Verify getAssurranceLevel and getConfidence","pass":true,"statements":[{"sl":33},{"sl":34},{"sl":35},{"sl":36}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
