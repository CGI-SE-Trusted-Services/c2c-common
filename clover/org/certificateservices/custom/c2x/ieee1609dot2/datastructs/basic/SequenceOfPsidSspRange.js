var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":66,"id":2926,"methods":[{"el":35,"sc":2,"sl":33},{"el":42,"sc":2,"sl":40},{"el":49,"sc":2,"sl":47},{"el":65,"sc":2,"sl":52}],"name":"SequenceOfPsidSspRange","sl":26}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_128":{"methods":[{"sl":40}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type SIGNER_CERTIFICATE","pass":true,"statements":[{"sl":41}]},"test_163":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_168":{"methods":[{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":55},{"sl":56},{"sl":57},{"sl":59},{"sl":60},{"sl":63},{"sl":64}]},"test_221":{"methods":[{"sl":33},{"sl":47},{"sl":52}],"name":"Verify toString","pass":true,"statements":[{"sl":34},{"sl":48},{"sl":54},{"sl":55},{"sl":56},{"sl":57},{"sl":59},{"sl":60},{"sl":63},{"sl":64}]},"test_226":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_239":{"methods":[{"sl":40}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_261":{"methods":[{"sl":40}],"name":"Verify that return first certificates public key of complete chain consists of explicit certificates","pass":true,"statements":[{"sl":41}]},"test_35":{"methods":[{"sl":40}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_385":{"methods":[{"sl":40}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_387":{"methods":[{"sl":33},{"sl":40},{"sl":47}],"name":"Verify that SequenceOfPsidSspRange is initialized properly","pass":true,"statements":[{"sl":34},{"sl":41},{"sl":48}]},"test_406":{"methods":[{"sl":40}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_455":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_465":{"methods":[{"sl":40}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type CERT_CHAIN","pass":true,"statements":[{"sl":41}]},"test_482":{"methods":[{"sl":40}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_485":{"methods":[{"sl":40}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_498":{"methods":[{"sl":40}],"name":"Verify that return first certificates public key of enroll cert only consists of implicit certificates","pass":true,"statements":[{"sl":41}]},"test_499":{"methods":[{"sl":40}],"name":"Verify that return first certificates public key of enroll cert and enroll ca consists of implicit certificates","pass":true,"statements":[{"sl":41}]},"test_523":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_569":{"methods":[{"sl":40}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_587":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_608":{"methods":[{"sl":40}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_609":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_62":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_625":{"methods":[{"sl":40}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_650":{"methods":[{"sl":40}],"name":"Verify that buildCertStore() generates certificate store maps correctly and buildChain generates correct certificate chain","pass":true,"statements":[{"sl":41}]},"test_665":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_686":{"methods":[{"sl":40}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":41}]},"test_696":{"methods":[{"sl":33}],"name":"Verify that SubjectPermissions is correctly encoded for type explicit","pass":true,"statements":[{"sl":34}]},"test_729":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_735":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_75":{"methods":[{"sl":40}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_769":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_774":{"methods":[{"sl":40}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_901":{"methods":[{"sl":40}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_946":{"methods":[{"sl":40}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [221, 387, 696], [221, 387, 696], [], [], [], [], [], [261, 946, 35, 625, 686, 901, 587, 665, 455, 239, 729, 735, 569, 385, 387, 523, 406, 75, 774, 163, 769, 608, 62, 650, 128, 226, 498, 499, 609, 465, 485, 482], [261, 946, 35, 625, 686, 901, 587, 665, 455, 239, 729, 735, 569, 385, 387, 523, 406, 75, 774, 163, 769, 608, 62, 650, 128, 226, 498, 499, 609, 465, 485, 482], [], [], [], [], [], [221, 387], [221, 387], [], [], [], [221, 168], [], [221, 168], [221, 168], [221, 168], [221, 168], [], [221, 168], [221, 168], [], [], [221, 168], [221, 168], [], []]
