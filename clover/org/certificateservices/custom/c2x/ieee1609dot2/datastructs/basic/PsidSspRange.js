var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":80,"id":2845,"methods":[{"el":42,"sc":2,"sl":39},{"el":52,"sc":2,"sl":47},{"el":60,"sc":2,"sl":58},{"el":68,"sc":2,"sl":66},{"el":73,"sc":2,"sl":70},{"el":78,"sc":2,"sl":75}],"name":"PsidSspRange","sl":28}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_120":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_16":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that return first certificates public key of enroll cert and enroll ca consists of implicit certificates","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_167":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_269":{"methods":[{"sl":39},{"sl":58},{"sl":66},{"sl":70},{"sl":75}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":59},{"sl":67},{"sl":71},{"sl":72},{"sl":77}]},"test_307":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type SIGNER_CERTIFICATE","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_309":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_321":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_325":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_367":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_40":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_412":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_447":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_524":{"methods":[{"sl":58},{"sl":66},{"sl":75}],"name":"Verify toString","pass":true,"statements":[{"sl":59},{"sl":67},{"sl":77}]},"test_549":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_57":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_577":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_58":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_59":{"methods":[{"sl":39},{"sl":70}],"name":"Verify that SubjectPermissions is correctly encoded for type explicit","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":71},{"sl":72}]},"test_61":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type CERT_CHAIN","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_614":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_674":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_711":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that return first certificates public key of complete chain consists of explicit certificates","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_717":{"methods":[{"sl":39},{"sl":47},{"sl":58},{"sl":66},{"sl":70}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":59},{"sl":67},{"sl":71},{"sl":72}]},"test_727":{"methods":[{"sl":39},{"sl":70}],"name":"Verify that SequenceOfPsidSspRange is initialized properly","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":71},{"sl":72}]},"test_778":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that return first certificates public key of enroll cert only consists of implicit certificates","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_794":{"methods":[{"sl":47},{"sl":58},{"sl":66},{"sl":70},{"sl":75}],"name":"Verify toString","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":59},{"sl":67},{"sl":71},{"sl":72},{"sl":77}]},"test_815":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_825":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_836":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_850":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_871":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_876":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_894":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_96":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that buildCertStore() generates certificate store maps correctly and buildChain generates correct certificate chain","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_979":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_990":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":71},{"sl":72}]},"test_991":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [269, 59, 727, 717], [269, 59, 727, 717], [269, 59, 727, 717], [], [], [], [], [], [815, 549, 309, 979, 794, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 876, 325, 711, 990, 825, 321, 61, 57, 0, 717, 40, 871, 367, 96, 836, 614, 894], [815, 549, 309, 979, 794, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 876, 325, 711, 990, 825, 321, 61, 57, 0, 717, 40, 871, 367, 96, 836, 614, 894], [815, 549, 309, 979, 794, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 876, 325, 711, 990, 825, 321, 61, 57, 0, 717, 40, 871, 367, 96, 836, 614, 894], [815, 549, 309, 979, 794, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 876, 325, 711, 990, 825, 321, 61, 57, 0, 717, 40, 871, 367, 96, 836, 614, 894], [815, 549, 309, 979, 794, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 876, 325, 711, 825, 321, 61, 57, 0, 717, 40, 871, 367, 96, 836, 614, 894], [], [], [], [], [], [], [269, 794, 524, 717], [269, 794, 524, 717], [], [], [], [], [], [], [269, 794, 524, 717], [269, 794, 524, 717], [], [], [815, 549, 309, 979, 269, 59, 794, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 876, 325, 711, 990, 825, 321, 61, 57, 0, 727, 717, 40, 871, 367, 96, 836, 614, 894], [815, 549, 309, 979, 269, 59, 794, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 876, 325, 711, 990, 825, 321, 61, 57, 0, 727, 717, 40, 871, 367, 96, 836, 614, 894], [815, 549, 309, 979, 269, 59, 794, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 876, 325, 711, 990, 825, 321, 61, 57, 0, 727, 717, 40, 871, 367, 96, 836, 614, 894], [], [], [269, 794, 524], [], [269, 794, 524], [], [], []]
