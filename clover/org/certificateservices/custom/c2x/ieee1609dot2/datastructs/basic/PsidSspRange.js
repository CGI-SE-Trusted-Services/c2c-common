var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":80,"id":2730,"methods":[{"el":42,"sc":2,"sl":39},{"el":52,"sc":2,"sl":47},{"el":60,"sc":2,"sl":58},{"el":68,"sc":2,"sl":66},{"el":73,"sc":2,"sl":70},{"el":78,"sc":2,"sl":75}],"name":"PsidSspRange","sl":28}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_128":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type SIGNER_CERTIFICATE","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_153":{"methods":[{"sl":39},{"sl":47},{"sl":58},{"sl":66},{"sl":70}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":59},{"sl":67},{"sl":71},{"sl":72}]},"test_163":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_168":{"methods":[{"sl":58},{"sl":66},{"sl":75}],"name":"Verify toString","pass":true,"statements":[{"sl":59},{"sl":67},{"sl":77}]},"test_221":{"methods":[{"sl":39},{"sl":58},{"sl":66},{"sl":70},{"sl":75}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":59},{"sl":67},{"sl":71},{"sl":72},{"sl":77}]},"test_226":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_239":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_261":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that return first certificates public key of complete chain consists of explicit certificates","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_35":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_350":{"methods":[{"sl":47},{"sl":58},{"sl":66},{"sl":70},{"sl":75}],"name":"Verify toString","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":59},{"sl":67},{"sl":71},{"sl":72},{"sl":77}]},"test_385":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_387":{"methods":[{"sl":39},{"sl":70}],"name":"Verify that SequenceOfPsidSspRange is initialized properly","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":71},{"sl":72}]},"test_406":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_455":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_465":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type CERT_CHAIN","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_482":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_485":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_498":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that return first certificates public key of enroll cert only consists of implicit certificates","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_499":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that return first certificates public key of enroll cert and enroll ca consists of implicit certificates","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_51":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":71},{"sl":72}]},"test_523":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_569":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_587":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_608":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_609":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_62":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_625":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_650":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that buildCertStore() generates certificate store maps correctly and buildChain generates correct certificate chain","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_665":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_686":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_696":{"methods":[{"sl":39},{"sl":70}],"name":"Verify that SubjectPermissions is correctly encoded for type explicit","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":71},{"sl":72}]},"test_729":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_735":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_75":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_769":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_774":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_901":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]},"test_946":{"methods":[{"sl":47},{"sl":70}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":71},{"sl":72}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [153, 221, 387, 696], [153, 221, 387, 696], [153, 221, 387, 696], [], [], [], [], [], [261, 35, 625, 153, 901, 587, 665, 239, 735, 385, 406, 75, 51, 769, 128, 226, 499, 465, 482, 946, 686, 455, 729, 569, 523, 774, 163, 608, 62, 650, 350, 498, 609, 485], [261, 35, 625, 153, 901, 587, 665, 239, 735, 385, 406, 75, 51, 769, 128, 226, 499, 465, 482, 946, 686, 455, 729, 569, 523, 774, 163, 608, 62, 650, 350, 498, 609, 485], [261, 35, 625, 153, 901, 587, 665, 239, 735, 385, 406, 75, 51, 769, 128, 226, 499, 465, 482, 946, 686, 455, 729, 569, 523, 774, 163, 608, 62, 650, 350, 498, 609, 485], [261, 35, 625, 153, 901, 587, 665, 239, 735, 385, 406, 75, 51, 769, 128, 226, 499, 465, 482, 946, 686, 455, 729, 569, 523, 774, 163, 608, 62, 650, 350, 498, 609, 485], [261, 35, 625, 153, 901, 587, 665, 239, 735, 385, 406, 75, 769, 128, 226, 499, 465, 482, 946, 686, 455, 729, 569, 523, 774, 163, 608, 62, 650, 350, 498, 609, 485], [], [], [], [], [], [], [153, 221, 168, 350], [153, 221, 168, 350], [], [], [], [], [], [], [153, 221, 168, 350], [153, 221, 168, 350], [], [], [261, 35, 625, 153, 901, 587, 665, 221, 239, 735, 385, 387, 406, 75, 51, 769, 128, 226, 499, 465, 482, 946, 686, 455, 729, 569, 523, 774, 163, 608, 62, 650, 350, 696, 498, 609, 485], [261, 35, 625, 153, 901, 587, 665, 221, 239, 735, 385, 387, 406, 75, 51, 769, 128, 226, 499, 465, 482, 946, 686, 455, 729, 569, 523, 774, 163, 608, 62, 650, 350, 696, 498, 609, 485], [261, 35, 625, 153, 901, 587, 665, 221, 239, 735, 385, 387, 406, 75, 51, 769, 128, 226, 499, 465, 482, 946, 686, 455, 729, 569, 523, 774, 163, 608, 62, 650, 350, 696, 498, 609, 485], [], [], [221, 168, 350], [], [221, 168, 350], [], [], []]
