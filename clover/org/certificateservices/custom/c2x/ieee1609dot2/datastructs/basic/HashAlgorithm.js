var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":38,"id":2514,"methods":[{"el":34,"sc":2,"sl":31}],"name":"HashAlgorithm","sl":28}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Authorization Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_128":{"methods":[{"sl":31}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type SIGNER_CERTIFICATE","pass":true,"statements":[{"sl":33}]},"test_163":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_166":{"methods":[{"sl":31}],"name":"Verify correct algorithms indicator is returned.","pass":true,"statements":[{"sl":33}]},"test_226":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_239":{"methods":[{"sl":31}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_248":{"methods":[{"sl":31}],"name":"Verify that getSignedDataStore returns a populate map of all certificate if SignerIdentifier is certificate","pass":true,"statements":[{"sl":33}]},"test_261":{"methods":[{"sl":31}],"name":"Verify that return first certificates public key of complete chain consists of explicit certificates","pass":true,"statements":[{"sl":33}]},"test_278":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_286":{"methods":[{"sl":31}],"name":"Verify that preshared key encryption works correctly","pass":true,"statements":[{"sl":33}]},"test_304":{"methods":[{"sl":31}],"name":"Verify that symmetric key envelope encryption works correctly","pass":true,"statements":[{"sl":33}]},"test_312":{"methods":[{"sl":31}],"name":"Verify that findFromStores finds certificate from stores","pass":true,"statements":[{"sl":33}]},"test_324":{"methods":[{"sl":31}],"name":"Verify that getSignerId returns the included HashedId8 if type is digest","pass":true,"statements":[{"sl":33}]},"test_35":{"methods":[{"sl":31}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_360":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_385":{"methods":[{"sl":31}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_406":{"methods":[{"sl":31}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_455":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_465":{"methods":[{"sl":31}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type CERT_CHAIN","pass":true,"statements":[{"sl":33}]},"test_482":{"methods":[{"sl":31}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_485":{"methods":[{"sl":31}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_498":{"methods":[{"sl":31}],"name":"Verify that return first certificates public key of enroll cert only consists of implicit certificates","pass":true,"statements":[{"sl":33}]},"test_499":{"methods":[{"sl":31}],"name":"Verify that return first certificates public key of enroll cert and enroll ca consists of implicit certificates","pass":true,"statements":[{"sl":33}]},"test_523":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_532":{"methods":[{"sl":31}],"name":"Verify that getSignedDataStore returns an empty map if SignerIdentifier is digest","pass":true,"statements":[{"sl":33}]},"test_547":{"methods":[{"sl":31}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":33}]},"test_567":{"methods":[{"sl":31}],"name":"Verify getCertID generates a correct HashedId8","pass":true,"statements":[{"sl":33}]},"test_569":{"methods":[{"sl":31}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_587":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_608":{"methods":[{"sl":31}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_609":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_62":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_625":{"methods":[{"sl":31}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_650":{"methods":[{"sl":31}],"name":"Verify that buildCertStore() generates certificate store maps correctly and buildChain generates correct certificate chain","pass":true,"statements":[{"sl":33}]},"test_665":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_686":{"methods":[{"sl":31}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":33}]},"test_729":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_735":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_74":{"methods":[{"sl":31}],"name":"Verify that getSignedDataStore returns the HashedId8 of the first certificate if type is certificate","pass":true,"statements":[{"sl":33}]},"test_749":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_75":{"methods":[{"sl":31}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_769":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_774":{"methods":[{"sl":31}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_79":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_829":{"methods":[{"sl":31}],"name":"Verify that getSignerIdentifier returns correct hash value for type HASH_ONLY","pass":true,"statements":[{"sl":33}]},"test_901":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]},"test_946":{"methods":[{"sl":31}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":33}]},"test_960":{"methods":[{"sl":31}],"name":"Verify that Ieee1609Dot2 Authorization Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":33}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [625, 547, 587, 665, 239, 304, 406, 769, 74, 960, 128, 226, 465, 482, 686, 455, 523, 286, 774, 749, 163, 62, 650, 498, 485, 261, 35, 901, 735, 385, 532, 79, 324, 312, 75, 360, 499, 946, 729, 567, 569, 829, 166, 248, 278, 608, 0, 609], [], [625, 547, 587, 665, 239, 304, 406, 769, 74, 960, 128, 226, 465, 482, 686, 455, 523, 286, 774, 749, 163, 62, 650, 498, 485, 261, 35, 901, 735, 385, 532, 79, 324, 312, 75, 360, 499, 946, 729, 567, 569, 829, 166, 248, 278, 608, 0, 609], [], [], [], [], []]
