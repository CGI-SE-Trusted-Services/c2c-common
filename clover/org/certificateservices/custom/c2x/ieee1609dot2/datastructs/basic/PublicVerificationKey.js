var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":89,"id":2770,"methods":[{"el":67,"sc":2,"sl":62},{"el":75,"sc":2,"sl":73},{"el":82,"sc":2,"sl":80},{"el":87,"sc":2,"sl":84}],"name":"PublicVerificationKey","sl":33},{"el":57,"id":2770,"methods":[{"el":45,"sc":3,"sl":42},{"el":56,"sc":3,"sl":47}],"name":"PublicVerificationKey.PublicVerificationKeyChoices","sl":38}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Authorization Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_128":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type SIGNER_CERTIFICATE","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_136":{"methods":[{"sl":42},{"sl":73}],"name":"Verify that Ieee1609dot2Peer2PeerPDUContent is correctly encoded for type caCerts","pass":true,"statements":[{"sl":44},{"sl":74}]},"test_152":{"methods":[{"sl":47}],"name":"Verify that getPublicVerificationAlgorithm returns correct PublicVerificationKeyChoice ecdsaBrainpoolP256r1 for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":52},{"sl":54}]},"test_163":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64}]},"test_172":{"methods":[{"sl":84}],"name":"Verify toString","pass":true,"statements":[{"sl":86}]},"test_185":{"methods":[{"sl":84}],"name":"Verify toString","pass":true,"statements":[{"sl":86}]},"test_214":{"methods":[{"sl":47}],"name":"Verify correct algorithms indicator is returned for ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51}]},"test_217":{"methods":[{"sl":47}],"name":"Verify that decodeEccPoint decodes the ieee EccPoints correctly for public key scheme: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51}]},"test_226":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64}]},"test_239":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_248":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that getSignedDataStore returns a populate map of all certificate if SignerIdentifier is certificate","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_261":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that return first certificates public key of complete chain consists of explicit certificates","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64},{"sl":81}]},"test_278":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64}]},"test_312":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that findFromStores finds certificate from stores","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_318":{"methods":[{"sl":84}],"name":"Verify toString","pass":true,"statements":[{"sl":86}]},"test_32":{"methods":[{"sl":47}],"name":"Verify that ieee encodeEccPoint encodes ec public keys properly for algorithm: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":52},{"sl":54}]},"test_324":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that getSignerId returns the included HashedId8 if type is digest","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_326":{"methods":[{"sl":84}],"name":"Verify toString","pass":true,"statements":[{"sl":86}]},"test_35":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64},{"sl":81}]},"test_354":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Root CA is generated correctly for explicit certificate (only type supported) for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":52},{"sl":54},{"sl":63},{"sl":64}]},"test_360":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_385":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":52},{"sl":54},{"sl":63},{"sl":64},{"sl":81}]},"test_406":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64},{"sl":81}]},"test_417":{"methods":[{"sl":42},{"sl":73}],"name":"Verify that CaCertP2pPDU is initialized properly","pass":true,"statements":[{"sl":44},{"sl":74}]},"test_423":{"methods":[{"sl":62}],"name":"Verify that xonly ecc curve points throws IllegalArgumentException","pass":true,"statements":[{"sl":63},{"sl":64},{"sl":65}]},"test_437":{"methods":[{"sl":42},{"sl":73}],"name":"Verify that constructor and getters are correct and it is correctly encoded for explicit certificates","pass":true,"statements":[{"sl":44},{"sl":74}]},"test_455":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_463":{"methods":[{"sl":42},{"sl":62},{"sl":73},{"sl":80}],"name":"Verify that PublicVerificationKey is correctly encoded for type ecdsaNistP256","pass":true,"statements":[{"sl":44},{"sl":63},{"sl":64},{"sl":74},{"sl":81}]},"test_465":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type CERT_CHAIN","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_482":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64},{"sl":81}]},"test_485":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64},{"sl":81}]},"test_498":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that return first certificates public key of enroll cert only consists of implicit certificates","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64},{"sl":81}]},"test_499":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that return first certificates public key of enroll cert and enroll ca consists of implicit certificates","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64},{"sl":81}]},"test_513":{"methods":[{"sl":42},{"sl":73}],"name":"Verify that VerificationKeyIndicator is correctly encoded for type verificationKey","pass":true,"statements":[{"sl":44},{"sl":74}]},"test_523":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64}]},"test_524":{"methods":[{"sl":47}],"name":"verify that generateKeyPair generates new keypairs for algorithm: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51}]},"test_532":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that getSignedDataStore returns an empty map if SignerIdentifier is digest","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_547":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64},{"sl":81}]},"test_567":{"methods":[{"sl":47},{"sl":62}],"name":"Verify getCertID generates a correct HashedId8","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_569":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_587":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_608":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64},{"sl":81}]},"test_609":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_610":{"methods":[{"sl":47}],"name":"verify that generateKeyPair generates new keypairs for algorithm: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":52},{"sl":54}]},"test_62":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_625":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_650":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that buildCertStore() generates certificate store maps correctly and buildChain generates correct certificate chain","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_660":{"methods":[{"sl":42},{"sl":62},{"sl":73},{"sl":80}],"name":"Verify that PublicVerificationKey is correctly encoded for type ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":44},{"sl":63},{"sl":64},{"sl":74},{"sl":81}]},"test_665":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_670":{"methods":[{"sl":42},{"sl":73}],"name":"Verify that SignerIdentifier is correctly encoded for type certificate","pass":true,"statements":[{"sl":44},{"sl":74}]},"test_686":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64},{"sl":81}]},"test_689":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Root CA is generated correctly for explicit certificate (only type supported) for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_708":{"methods":[{"sl":84}],"name":"Verify toString","pass":true,"statements":[{"sl":86}]},"test_729":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64}]},"test_735":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_74":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that getSignedDataStore returns the HashedId8 of the first certificate if type is certificate","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_749":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_75":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":52},{"sl":54},{"sl":63},{"sl":64},{"sl":81}]},"test_756":{"methods":[{"sl":84}],"name":"Verify toString()","pass":true,"statements":[{"sl":86}]},"test_769":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64}]},"test_774":{"methods":[{"sl":47},{"sl":62},{"sl":80}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64},{"sl":81}]},"test_79":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64}]},"test_801":{"methods":[{"sl":47}],"name":"Verify that decodeEccPoint decodes the ieee EccPoints correctly for public key scheme: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":52},{"sl":54}]},"test_818":{"methods":[{"sl":42},{"sl":73}],"name":"Verify that SequenceOfCertificate is initialized properly","pass":true,"statements":[{"sl":44},{"sl":74}]},"test_829":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that getSignerIdentifier returns correct hash value for type HASH_ONLY","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_874":{"methods":[{"sl":47}],"name":"Verify that getPublicVerificationAlgorithm returns correct PublicVerificationKeyChoice ecdsaNistP256 for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51}]},"test_88":{"methods":[{"sl":62},{"sl":84}],"name":"Verify toString","pass":true,"statements":[{"sl":63},{"sl":64},{"sl":86}]},"test_901":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64}]},"test_918":{"methods":[{"sl":47}],"name":"Verify correct algorithms indicator is returned for ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":52},{"sl":54}]},"test_925":{"methods":[{"sl":47}],"name":"Verify that ieee encodeEccPoint encodes ec public keys properly for algorithm: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51}]},"test_946":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":63},{"sl":64}]},"test_947":{"methods":[{"sl":84}],"name":"Verify toString","pass":true,"statements":[{"sl":86}]},"test_960":{"methods":[{"sl":47},{"sl":62}],"name":"Verify that Ieee1609Dot2 Authorization Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":54},{"sl":63},{"sl":64}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [660, 417, 818, 670, 136, 437, 463, 513], [], [660, 417, 818, 670, 136, 437, 463, 513], [], [], [261, 35, 625, 901, 547, 587, 665, 239, 735, 32, 385, 925, 532, 79, 324, 312, 406, 75, 360, 769, 74, 960, 128, 226, 499, 465, 217, 482, 946, 686, 610, 918, 874, 214, 354, 455, 729, 524, 567, 569, 829, 523, 689, 248, 774, 749, 278, 163, 608, 62, 650, 801, 0, 498, 609, 485, 152], [], [261, 35, 625, 901, 547, 587, 665, 239, 735, 32, 385, 925, 532, 79, 324, 312, 406, 75, 360, 769, 74, 960, 128, 226, 499, 465, 217, 482, 946, 686, 610, 918, 874, 214, 354, 455, 729, 524, 567, 569, 829, 523, 689, 248, 774, 749, 278, 163, 608, 62, 650, 801, 0, 498, 609, 485, 152], [261, 35, 625, 901, 547, 587, 665, 239, 735, 925, 532, 79, 324, 312, 406, 360, 769, 74, 960, 128, 226, 499, 465, 217, 482, 946, 686, 874, 214, 455, 729, 524, 567, 569, 829, 523, 689, 248, 774, 749, 278, 163, 608, 62, 650, 0, 498, 609, 485], [261, 35, 625, 901, 547, 587, 665, 239, 735, 925, 532, 79, 324, 312, 406, 360, 769, 74, 960, 128, 226, 499, 465, 217, 482, 946, 686, 874, 214, 455, 729, 524, 567, 569, 829, 523, 689, 248, 774, 749, 278, 163, 608, 62, 650, 0, 498, 609, 485], [901, 32, 385, 79, 75, 769, 960, 226, 610, 918, 354, 729, 523, 774, 278, 163, 608, 801, 152], [], [901, 32, 385, 79, 75, 769, 960, 226, 610, 918, 354, 729, 523, 774, 278, 163, 608, 801, 152], [], [], [], [], [], [], [], [261, 35, 625, 901, 547, 587, 665, 239, 660, 735, 385, 532, 79, 324, 312, 406, 75, 360, 769, 74, 960, 128, 88, 226, 499, 465, 482, 946, 423, 686, 354, 455, 729, 567, 569, 829, 523, 689, 248, 774, 749, 278, 163, 463, 608, 62, 650, 0, 498, 609, 485], [261, 35, 625, 901, 547, 587, 665, 239, 660, 735, 385, 532, 79, 324, 312, 406, 75, 360, 769, 74, 960, 128, 88, 226, 499, 465, 482, 946, 423, 686, 354, 455, 729, 567, 569, 829, 523, 689, 248, 774, 749, 278, 163, 463, 608, 62, 650, 0, 498, 609, 485], [261, 35, 625, 901, 547, 587, 665, 239, 660, 735, 385, 532, 79, 324, 312, 406, 75, 360, 769, 74, 960, 128, 88, 226, 499, 465, 482, 946, 423, 686, 354, 455, 729, 567, 569, 829, 523, 689, 248, 774, 749, 278, 163, 463, 608, 62, 650, 0, 498, 609, 485], [423], [], [], [], [], [], [], [], [660, 417, 818, 670, 136, 437, 463, 513], [660, 417, 818, 670, 136, 437, 463, 513], [], [], [], [], [], [261, 35, 547, 660, 385, 406, 75, 499, 482, 686, 774, 463, 608, 498, 485], [261, 35, 547, 660, 385, 406, 75, 499, 482, 686, 774, 463, 608, 498, 485], [], [], [756, 947, 185, 88, 708, 326, 318, 172], [], [756, 947, 185, 88, 708, 326, 318, 172], [], [], []]
