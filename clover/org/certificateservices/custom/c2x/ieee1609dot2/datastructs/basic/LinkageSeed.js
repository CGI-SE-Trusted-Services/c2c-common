var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":61,"id":2741,"methods":[{"el":36,"sc":2,"sl":34},{"el":46,"sc":2,"sl":43},{"el":53,"sc":2,"sl":51},{"el":58,"sc":2,"sl":55}],"name":"LinkageSeed","sl":24}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_1005":{"methods":[{"sl":43},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":44},{"sl":57}]},"test_12":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_14":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_166":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":35}]},"test_177":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_212":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_222":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_232":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_241":{"methods":[{"sl":34},{"sl":43},{"sl":51}],"name":"Verify that LinkageSeed stores the data correctly","pass":true,"statements":[{"sl":35},{"sl":44},{"sl":52}]},"test_26":{"methods":[{"sl":34}],"name":"Verify that CrlContentsType is correctly encoded for type fullLinkedCrl","pass":true,"statements":[{"sl":35}]},"test_267":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_276":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":35}]},"test_284":{"methods":[{"sl":34}],"name":"Verify that SequenceOfIMaxGroup is initialized properly","pass":true,"statements":[{"sl":35}]},"test_299":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_3":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":35}]},"test_323":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":35}]},"test_327":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_335":{"methods":[{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":57}]},"test_36":{"methods":[{"sl":34}],"name":"Verify that CrlContentsType is correctly encoded for type deltaLinkedCrl","pass":true,"statements":[{"sl":35}]},"test_424":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_425":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_481":{"methods":[{"sl":34}],"name":"Verify that SequenceOfLAGroup is initialized properly","pass":true,"statements":[{"sl":35}]},"test_521":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_550":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":35}]},"test_58":{"methods":[{"sl":34},{"sl":43}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":35},{"sl":44}]},"test_610":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_615":{"methods":[{"sl":34}],"name":"Verify that SequenceOfGroupCrlEntry is initialized properly","pass":true,"statements":[{"sl":35}]},"test_620":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_625":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_629":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_645":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_70":{"methods":[{"sl":55}],"name":"Verify toString()","pass":true,"statements":[{"sl":57}]},"test_80":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_873":{"methods":[{"sl":34}],"name":"Verify that SequenceOfIndividualRevocation is initialized properly","pass":true,"statements":[{"sl":35}]},"test_911":{"methods":[{"sl":34}],"name":"Verify that SequenceOfJMaxGroup is initialized properly","pass":true,"statements":[{"sl":35}]},"test_963":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown if both individual and groups are null","pass":true,"statements":[{"sl":35}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [284, 615, 232, 521, 299, 425, 481, 323, 276, 963, 3, 212, 873, 267, 177, 911, 26, 80, 327, 58, 620, 625, 550, 645, 424, 36, 166, 12, 610, 241, 222, 14, 629], [284, 615, 232, 521, 299, 425, 481, 323, 276, 963, 3, 212, 873, 267, 177, 911, 26, 80, 327, 58, 620, 625, 550, 645, 424, 36, 166, 12, 610, 241, 222, 14, 629], [], [], [], [], [], [], [], [1005, 58, 241], [1005, 58, 241], [], [], [], [], [], [], [241], [241], [], [], [299, 267, 80, 1005, 335, 620, 625, 645, 424, 12, 610, 222, 70, 629], [], [299, 267, 80, 1005, 335, 620, 625, 645, 424, 12, 610, 222, 70, 629], [], [], [], []]
