var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":61,"id":2626,"methods":[{"el":36,"sc":2,"sl":34},{"el":46,"sc":2,"sl":43},{"el":53,"sc":2,"sl":51},{"el":58,"sc":2,"sl":55}],"name":"LinkageSeed","sl":24}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_123":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_155":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_183":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_209":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_26":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_274":{"methods":[{"sl":34}],"name":"Verify that SequenceOfGroupCrlEntry is initialized properly","pass":true,"statements":[{"sl":35}]},"test_288":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_295":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_308":{"methods":[{"sl":34}],"name":"Verify that CrlContentsType is correctly encoded for type fullLinkedCrl","pass":true,"statements":[{"sl":35}]},"test_333":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_342":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":35}]},"test_368":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown if both individual and groups are null","pass":true,"statements":[{"sl":35}]},"test_441":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":35}]},"test_443":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_477":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_491":{"methods":[{"sl":34}],"name":"Verify that SequenceOfIMaxGroup is initialized properly","pass":true,"statements":[{"sl":35}]},"test_529":{"methods":[{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":57}]},"test_549":{"methods":[{"sl":34}],"name":"Verify that SequenceOfIndividualRevocation is initialized properly","pass":true,"statements":[{"sl":35}]},"test_553":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_565":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_633":{"methods":[{"sl":34}],"name":"Verify that SequenceOfJMaxGroup is initialized properly","pass":true,"statements":[{"sl":35}]},"test_65":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_653":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":35}]},"test_686":{"methods":[{"sl":34},{"sl":43}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":35},{"sl":44}]},"test_691":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_72":{"methods":[{"sl":34}],"name":"Verify that SequenceOfLAGroup is initialized properly","pass":true,"statements":[{"sl":35}]},"test_745":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":35}]},"test_766":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_777":{"methods":[{"sl":43},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":44},{"sl":57}]},"test_815":{"methods":[{"sl":55}],"name":"Verify toString()","pass":true,"statements":[{"sl":57}]},"test_86":{"methods":[{"sl":34},{"sl":43},{"sl":51}],"name":"Verify that LinkageSeed stores the data correctly","pass":true,"statements":[{"sl":35},{"sl":44},{"sl":52}]},"test_885":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_889":{"methods":[{"sl":34}],"name":"Verify that CrlContentsType is correctly encoded for type deltaLinkedCrl","pass":true,"statements":[{"sl":35}]},"test_937":{"methods":[{"sl":34},{"sl":55}],"name":"Verify toString","pass":true,"statements":[{"sl":35},{"sl":57}]},"test_954":{"methods":[{"sl":34}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":35}]},"test_967":{"methods":[{"sl":34}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":35}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [72, 686, 691, 885, 937, 288, 443, 308, 633, 123, 209, 368, 26, 954, 65, 441, 183, 86, 766, 553, 565, 333, 477, 342, 889, 653, 967, 491, 274, 295, 155, 549, 745], [72, 686, 691, 885, 937, 288, 443, 308, 633, 123, 209, 368, 26, 954, 65, 441, 183, 86, 766, 553, 565, 333, 477, 342, 889, 653, 967, 491, 274, 295, 155, 549, 745], [], [], [], [], [], [], [], [686, 777, 86], [686, 777, 86], [], [], [], [], [], [], [86], [86], [], [], [529, 691, 885, 937, 288, 777, 123, 209, 26, 183, 766, 553, 815, 155], [], [529, 691, 885, 937, 288, 777, 123, 209, 26, 183, 766, 553, 815, 155], [], [], [], []]
