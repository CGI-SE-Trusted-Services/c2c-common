var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":84,"id":2453,"methods":[{"el":55,"sc":2,"sl":53},{"el":62,"sc":2,"sl":60},{"el":69,"sc":2,"sl":67},{"el":77,"sc":2,"sl":75},{"el":82,"sc":2,"sl":79}],"name":"EncryptionKey","sl":32},{"el":48,"id":2453,"methods":[{"el":47,"sc":3,"sl":41}],"name":"EncryptionKey.EncryptionKeyChoices","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_175":{"methods":[{"sl":41},{"sl":60},{"sl":67},{"sl":75}],"name":"Verify that EncryptionKey is correctly encoded for type symmetric","pass":true,"statements":[{"sl":43},{"sl":46},{"sl":61},{"sl":68},{"sl":76}]},"test_176":{"methods":[{"sl":41},{"sl":53},{"sl":67},{"sl":75}],"name":"Verify that EncryptionKey is correctly encoded for type public_","pass":true,"statements":[{"sl":43},{"sl":44},{"sl":54},{"sl":68},{"sl":76}]},"test_19":{"methods":[{"sl":67},{"sl":79}],"name":"Verify toString","pass":true,"statements":[{"sl":68},{"sl":81}]},"test_249":{"methods":[{"sl":67}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":68}]},"test_257":{"methods":[{"sl":67}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":68}]},"test_259":{"methods":[{"sl":67}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":68}]},"test_296":{"methods":[{"sl":53},{"sl":60},{"sl":79}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":61},{"sl":81}]},"test_35":{"methods":[{"sl":67}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68}]},"test_385":{"methods":[{"sl":67}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68}]},"test_406":{"methods":[{"sl":67}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68}]},"test_413":{"methods":[{"sl":67}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":68}]},"test_447":{"methods":[{"sl":67}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":68}]},"test_470":{"methods":[{"sl":67}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":68}]},"test_482":{"methods":[{"sl":67}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68}]},"test_485":{"methods":[{"sl":53},{"sl":67},{"sl":75}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":54},{"sl":68},{"sl":76}]},"test_547":{"methods":[{"sl":53},{"sl":67}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":54},{"sl":68}]},"test_550":{"methods":[{"sl":67}],"name":"Verify toString","pass":true,"statements":[{"sl":68}]},"test_608":{"methods":[{"sl":53},{"sl":67},{"sl":75}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":54},{"sl":68},{"sl":76}]},"test_616":{"methods":[{"sl":67}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":68}]},"test_627":{"methods":[{"sl":53},{"sl":67}],"name":"Verify that genHeaderInfo generates correct header info","pass":true,"statements":[{"sl":54},{"sl":68}]},"test_658":{"methods":[{"sl":67}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":68}]},"test_662":{"methods":[{"sl":41},{"sl":67}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":43},{"sl":46},{"sl":68}]},"test_686":{"methods":[{"sl":67}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":68}]},"test_693":{"methods":[{"sl":67}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":68}]},"test_746":{"methods":[{"sl":67}],"name":"Verify toString","pass":true,"statements":[{"sl":68}]},"test_75":{"methods":[{"sl":67}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68}]},"test_774":{"methods":[{"sl":67}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68}]},"test_942":{"methods":[{"sl":67}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":68}]},"test_955":{"methods":[{"sl":67}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":68}]},"test_974":{"methods":[{"sl":67}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":68}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [662, 176, 175], [], [662, 176, 175], [176], [], [662, 175], [], [], [], [], [], [], [296, 627, 547, 176, 608, 485], [296, 627, 547, 176, 608, 485], [], [], [], [], [], [296, 175], [296, 175], [], [], [], [], [], [35, 447, 658, 627, 547, 550, 385, 942, 662, 249, 470, 406, 75, 482, 176, 686, 19, 974, 746, 413, 774, 257, 175, 608, 693, 616, 259, 485, 955], [35, 447, 658, 627, 547, 550, 385, 942, 662, 249, 470, 406, 75, 482, 176, 686, 19, 974, 746, 413, 774, 257, 175, 608, 693, 616, 259, 485, 955], [], [], [], [], [], [], [176, 175, 608, 485], [176, 175, 608, 485], [], [], [296, 19], [], [296, 19], [], [], []]
