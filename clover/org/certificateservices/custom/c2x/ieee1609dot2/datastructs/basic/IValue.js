var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":44,"id":2690,"methods":[{"el":31,"sc":2,"sl":29},{"el":38,"sc":2,"sl":36},{"el":43,"sc":2,"sl":40}],"name":"IValue","sl":22}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_163":{"methods":[{"sl":29}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":30}]},"test_212":{"methods":[{"sl":29},{"sl":36}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":30},{"sl":37}]},"test_26":{"methods":[{"sl":29}],"name":"Verify that CrlContentsType is correctly encoded for type fullLinkedCrl","pass":true,"statements":[{"sl":30}]},"test_286":{"methods":[{"sl":29}],"name":"Verify that CertificateId is correctly encoded for type linkageData","pass":true,"statements":[{"sl":30}]},"test_327":{"methods":[{"sl":29}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":30}]},"test_329":{"methods":[{"sl":40}],"name":"Verify toString","pass":true,"statements":[{"sl":42}]},"test_36":{"methods":[{"sl":29}],"name":"Verify that CrlContentsType is correctly encoded for type deltaLinkedCrl","pass":true,"statements":[{"sl":30}]},"test_58":{"methods":[{"sl":29},{"sl":36}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":30},{"sl":37}]},"test_629":{"methods":[{"sl":29},{"sl":36}],"name":"Verify toString","pass":true,"statements":[{"sl":30},{"sl":37}]},"test_673":{"methods":[{"sl":29},{"sl":36}],"name":"Verify constructors","pass":true,"statements":[{"sl":30},{"sl":37}]},"test_732":{"methods":[{"sl":29},{"sl":40}],"name":"Verify toString","pass":true,"statements":[{"sl":30},{"sl":42}]},"test_87":{"methods":[{"sl":29}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":30}]},"test_877":{"methods":[{"sl":29},{"sl":40}],"name":"Verify that it is possible to parse the reference implicit certificate","pass":true,"statements":[{"sl":30},{"sl":42}]},"test_902":{"methods":[{"sl":36},{"sl":40}],"name":"Verify IValue toString","pass":true,"statements":[{"sl":37},{"sl":42}]},"test_949":{"methods":[{"sl":29},{"sl":40}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":30},{"sl":42}]},"test_963":{"methods":[{"sl":29}],"name":"Verify that IllegalArgumentException is thrown if both individual and groups are null","pass":true,"statements":[{"sl":30}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [732, 673, 87, 963, 212, 58, 163, 629, 877, 286, 26, 327, 36, 949], [732, 673, 87, 963, 212, 58, 163, 629, 877, 286, 26, 327, 36, 949], [], [], [], [], [], [673, 212, 58, 629, 902], [673, 212, 58, 629, 902], [], [], [732, 877, 902, 329, 949], [], [732, 877, 902, 329, 949], [], []]
