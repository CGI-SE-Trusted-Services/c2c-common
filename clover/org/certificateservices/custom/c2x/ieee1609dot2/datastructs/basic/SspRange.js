var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":105,"id":3200,"methods":[{"el":69,"sc":2,"sl":67},{"el":76,"sc":2,"sl":74},{"el":84,"sc":2,"sl":82},{"el":94,"sc":2,"sl":89},{"el":103,"sc":2,"sl":97}],"name":"SspRange","sl":44},{"el":60,"id":3200,"methods":[{"el":59,"sc":3,"sl":53}],"name":"SspRange.SspRangeChoices","sl":48}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_120":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_16":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that return first certificates public key of enroll cert and enroll ca consists of implicit certificates","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_167":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_269":{"methods":[{"sl":74},{"sl":97}],"name":"Verify toString","pass":true,"statements":[{"sl":75},{"sl":99},{"sl":100},{"sl":102}]},"test_307":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type SIGNER_CERTIFICATE","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_309":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_321":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_325":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_367":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_40":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_412":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_447":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_501":{"methods":[{"sl":53},{"sl":67},{"sl":74},{"sl":82}],"name":"Verify that SspRange is correctly encoded for type all","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":68},{"sl":75},{"sl":83}]},"test_524":{"methods":[{"sl":97}],"name":"Verify toString","pass":true,"statements":[{"sl":99},{"sl":100},{"sl":102}]},"test_549":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_57":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_577":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_58":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_59":{"methods":[{"sl":53},{"sl":74}],"name":"Verify that SubjectPermissions is correctly encoded for type explicit","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":58},{"sl":75}]},"test_61":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type CERT_CHAIN","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_614":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_674":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_711":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that return first certificates public key of complete chain consists of explicit certificates","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_714":{"methods":[{"sl":53},{"sl":67},{"sl":74},{"sl":82},{"sl":89}],"name":"Verify that SspRange is correctly encoded for type opaque","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":68},{"sl":75},{"sl":83},{"sl":90},{"sl":91}]},"test_717":{"methods":[{"sl":53},{"sl":74}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":55},{"sl":58},{"sl":75}]},"test_727":{"methods":[{"sl":53},{"sl":74}],"name":"Verify that SequenceOfPsidSspRange is initialized properly","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":58},{"sl":75}]},"test_778":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that return first certificates public key of enroll cert only consists of implicit certificates","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_794":{"methods":[{"sl":74},{"sl":97}],"name":"Verify toString","pass":true,"statements":[{"sl":75},{"sl":99},{"sl":102}]},"test_815":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_825":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_836":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_850":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_859":{"methods":[{"sl":67},{"sl":97}],"name":"Verify toString","pass":true,"statements":[{"sl":68},{"sl":99},{"sl":100},{"sl":102}]},"test_871":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_876":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_894":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_96":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that buildCertStore() generates certificate store maps correctly and buildChain generates correct certificate chain","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_979":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":68},{"sl":75}]},"test_990":{"methods":[{"sl":74}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":75}]},"test_991":{"methods":[{"sl":67},{"sl":74}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":68},{"sl":75}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [59, 501, 727, 717, 714], [], [59, 501, 727, 717, 714], [59, 727, 714], [], [59, 501, 727, 717], [], [], [], [], [], [], [], [], [815, 549, 309, 979, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 859, 501, 876, 325, 711, 825, 321, 61, 57, 0, 40, 871, 367, 96, 836, 614, 894, 714], [815, 549, 309, 979, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 859, 501, 876, 325, 711, 825, 321, 61, 57, 0, 40, 871, 367, 96, 836, 614, 894, 714], [], [], [], [], [], [815, 549, 309, 979, 269, 59, 794, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 501, 876, 325, 711, 990, 825, 321, 61, 57, 0, 727, 717, 40, 871, 367, 96, 836, 614, 894, 714], [815, 549, 309, 979, 269, 59, 794, 447, 120, 16, 850, 412, 307, 991, 58, 674, 167, 577, 778, 501, 876, 325, 711, 990, 825, 321, 61, 57, 0, 727, 717, 40, 871, 367, 96, 836, 614, 894, 714], [], [], [], [], [], [], [501, 714], [501, 714], [], [], [], [], [], [714], [714], [714], [], [], [], [], [], [269, 794, 524, 859], [], [269, 794, 524, 859], [269, 524, 859], [], [269, 794, 524, 859], [], [], []]
