var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":82,"id":2696,"methods":[{"el":58,"sc":2,"sl":56},{"el":65,"sc":2,"sl":63},{"el":74,"sc":2,"sl":72},{"el":80,"sc":2,"sl":77}],"name":"IdentifiedRegion","sl":33},{"el":51,"id":2696,"methods":[{"el":45,"sc":3,"sl":43},{"el":50,"sc":3,"sl":47}],"name":"IdentifiedRegion.IdentifiedRegionChoices","sl":37}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":56}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_1":{"methods":[{"sl":56}],"name":"Verify that getSignedDataStore returns an empty map if SignerIdentifier is digest","pass":true,"statements":[{"sl":57}]},"test_120":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_123":{"methods":[{"sl":56}],"name":"Verify that getSignedDataStore returns a populate map of all certificate if SignerIdentifier is certificate","pass":true,"statements":[{"sl":57}]},"test_128":{"methods":[{"sl":56}],"name":"Verify that getType and getPublicKey works for both implicit and explicit certificates for alg ecdsaNistP256Signature","pass":true,"statements":[{"sl":57}]},"test_146":{"methods":[{"sl":56}],"name":"Verify that getSignerIdentifier returns correct hash value for type HASH_ONLY","pass":true,"statements":[{"sl":57}]},"test_16":{"methods":[{"sl":56}],"name":"Verify that return first certificates public key of enroll cert and enroll ca consists of implicit certificates","pass":true,"statements":[{"sl":57}]},"test_167":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_168":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_250":{"methods":[{"sl":47}],"name":"Verify that constructor and getters are correct and it is correctly encoded for explicit certificates","pass":true,"statements":[{"sl":49}]},"test_257":{"methods":[{"sl":56}],"name":"Verify that getSignerId returns the included HashedId8 if type is digest","pass":true,"statements":[{"sl":57}]},"test_264":{"methods":[{"sl":47}],"name":"Verify that GeographicRegion is correctly encoded for type identifiedRegion and value SequenceOfIdentifiedRegion [[CountryOnly [10]]]","pass":true,"statements":[{"sl":49}]},"test_290":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Authorization Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_298":{"methods":[{"sl":47}],"name":"Verify that constructor and getters are correct and it is correctly encoded for implicit certificates","pass":true,"statements":[{"sl":49}]},"test_304":{"methods":[{"sl":47}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":49}]},"test_307":{"methods":[{"sl":56}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type SIGNER_CERTIFICATE","pass":true,"statements":[{"sl":57}]},"test_309":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_321":{"methods":[{"sl":56}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_325":{"methods":[{"sl":56}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_332":{"methods":[{"sl":77}],"name":"Verify toString","pass":true,"statements":[{"sl":79}]},"test_360":{"methods":[{"sl":47},{"sl":56},{"sl":63},{"sl":72}],"name":"Verify that IdentifiedRegion is correctly encoded for type countryAndRegions and value CountryAndRegions [countryOnly=5, regions=12,13]","pass":true,"statements":[{"sl":49},{"sl":57},{"sl":64},{"sl":73}]},"test_364":{"methods":[{"sl":56}],"name":"Verify that getType and getPublicKey works for both implicit and explicit certificates for alg ecdsaBrainpoolP256r1Signature","pass":true,"statements":[{"sl":57}]},"test_367":{"methods":[{"sl":56}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_40":{"methods":[{"sl":56}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_412":{"methods":[{"sl":56}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_433":{"methods":[{"sl":56}],"name":"Verify that findFromStores finds certificate from stores","pass":true,"statements":[{"sl":57}]},"test_44":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Root CA is generated correctly for explicit certificate (only type supported) for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_447":{"methods":[{"sl":56}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_46":{"methods":[{"sl":47},{"sl":56},{"sl":63},{"sl":72}],"name":"Verify that IdentifiedRegion is correctly encoded for type countryOnly and value CountryOnly [10]","pass":true,"statements":[{"sl":49},{"sl":57},{"sl":64},{"sl":73}]},"test_470":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_473":{"methods":[{"sl":56}],"name":"Verify that getSignedDataStore returns the HashedId8 of the first certificate if type is certificate","pass":true,"statements":[{"sl":57}]},"test_479":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_549":{"methods":[{"sl":56}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_555":{"methods":[{"sl":63},{"sl":77}],"name":"Verify toString","pass":true,"statements":[{"sl":64},{"sl":79}]},"test_57":{"methods":[{"sl":56}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_577":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_58":{"methods":[{"sl":56}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":57}]},"test_585":{"methods":[{"sl":56}],"name":"Verify that getPublicKey throws IllegalArgumentException if invalid parameters was given","pass":true,"statements":[{"sl":57}]},"test_61":{"methods":[{"sl":56}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type CERT_CHAIN","pass":true,"statements":[{"sl":57}]},"test_614":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_66":{"methods":[{"sl":56}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":57}]},"test_660":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Authorization Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_674":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_677":{"methods":[{"sl":47},{"sl":56},{"sl":63},{"sl":72}],"name":"Verify that IdentifiedRegion is correctly encoded for type countryAndSubregions and value CountryAndSubregions [country=5, region and subregions=RegionAndSubregions [region=5, subregions=12,13],RegionAndSubregions [region=6, subregions=14,15]]","pass":true,"statements":[{"sl":49},{"sl":57},{"sl":64},{"sl":73}]},"test_687":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_689":{"methods":[{"sl":47},{"sl":63}],"name":"Verify that SequenceOfIdentifiedRegion is initialized properly","pass":true,"statements":[{"sl":49},{"sl":64}]},"test_711":{"methods":[{"sl":56}],"name":"Verify that return first certificates public key of complete chain consists of explicit certificates","pass":true,"statements":[{"sl":57}]},"test_778":{"methods":[{"sl":56}],"name":"Verify that return first certificates public key of enroll cert only consists of implicit certificates","pass":true,"statements":[{"sl":57}]},"test_806":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Root CA is generated correctly for explicit certificate (only type supported) for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_815":{"methods":[{"sl":56}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_822":{"methods":[{"sl":77}],"name":"Verify toString","pass":true,"statements":[{"sl":79}]},"test_825":{"methods":[{"sl":56}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_836":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_850":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_851":{"methods":[{"sl":47}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":49}]},"test_871":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_876":{"methods":[{"sl":56}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]},"test_877":{"methods":[{"sl":47},{"sl":77}],"name":"Verify that it is possible to parse the reference implicit certificate","pass":true,"statements":[{"sl":49},{"sl":79}]},"test_880":{"methods":[{"sl":56},{"sl":77}],"name":"Verify toString","pass":true,"statements":[{"sl":57},{"sl":79}]},"test_894":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_945":{"methods":[{"sl":56}],"name":"Verify getCertID generates a correct HashedId8","pass":true,"statements":[{"sl":57}]},"test_949":{"methods":[{"sl":43},{"sl":47},{"sl":63},{"sl":77}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":44},{"sl":49},{"sl":64},{"sl":79}]},"test_96":{"methods":[{"sl":56}],"name":"Verify that buildCertStore() generates certificate store maps correctly and buildChain generates correct certificate chain","pass":true,"statements":[{"sl":57}]},"test_979":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":57}]},"test_991":{"methods":[{"sl":56}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":57}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [949], [949], [], [], [689, 298, 250, 264, 877, 677, 360, 851, 304, 949, 46], [], [689, 298, 250, 264, 877, 677, 360, 851, 304, 949, 46], [], [], [], [], [], [], [815, 687, 549, 309, 979, 123, 447, 120, 16, 850, 412, 307, 991, 479, 58, 168, 674, 806, 945, 167, 660, 473, 1, 146, 577, 778, 290, 876, 677, 470, 325, 711, 128, 880, 825, 321, 257, 61, 57, 585, 0, 433, 360, 40, 871, 367, 364, 96, 836, 66, 614, 894, 44, 46], [815, 687, 549, 309, 979, 123, 447, 120, 16, 850, 412, 307, 991, 479, 58, 168, 674, 806, 945, 167, 660, 473, 1, 146, 577, 778, 290, 876, 677, 470, 325, 711, 128, 880, 825, 321, 257, 61, 57, 585, 0, 433, 360, 40, 871, 367, 364, 96, 836, 66, 614, 894, 44, 46], [], [], [], [], [], [689, 555, 677, 360, 949, 46], [689, 555, 677, 360, 949, 46], [], [], [], [], [], [], [], [677, 360, 46], [677, 360, 46], [], [], [], [877, 555, 880, 332, 822, 949], [], [877, 555, 880, 332, 822, 949], [], [], []]
