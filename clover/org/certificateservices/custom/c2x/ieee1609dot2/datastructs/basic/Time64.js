var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":92,"id":3200,"methods":[{"el":42,"sc":2,"sl":40},{"el":57,"sc":2,"sl":51},{"el":65,"sc":2,"sl":63},{"el":78,"sc":2,"sl":73},{"el":86,"sc":2,"sl":84},{"el":91,"sc":2,"sl":88}],"name":"Time64","sl":31}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_19":{"methods":[{"sl":40},{"sl":73},{"sl":88}],"name":"Verify toString","pass":true,"statements":[{"sl":41},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":90}]},"test_249":{"methods":[{"sl":40}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":41}]},"test_257":{"methods":[{"sl":40}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":41}]},"test_259":{"methods":[{"sl":40}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":41}]},"test_272":{"methods":[{"sl":51},{"sl":73},{"sl":88}],"name":"Verify toString","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":55},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":90}]},"test_35":{"methods":[{"sl":40}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_385":{"methods":[{"sl":40}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_406":{"methods":[{"sl":40}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_413":{"methods":[{"sl":40}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":41}]},"test_447":{"methods":[{"sl":40}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":41}]},"test_470":{"methods":[{"sl":40}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":41}]},"test_482":{"methods":[{"sl":40}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_485":{"methods":[{"sl":40}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41}]},"test_542":{"methods":[{"sl":73},{"sl":88}],"name":"Verify toString","pass":true,"statements":[{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":90}]},"test_547":{"methods":[{"sl":40}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":41}]},"test_550":{"methods":[{"sl":40}],"name":"Verify toString","pass":true,"statements":[{"sl":41}]},"test_608":{"methods":[{"sl":40}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_616":{"methods":[{"sl":40},{"sl":73},{"sl":88}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":41},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":90}]},"test_627":{"methods":[{"sl":40},{"sl":51},{"sl":73}],"name":"Verify that genHeaderInfo generates correct header info","pass":true,"statements":[{"sl":41},{"sl":52},{"sl":53},{"sl":54},{"sl":55},{"sl":74},{"sl":75},{"sl":76},{"sl":77}]},"test_658":{"methods":[{"sl":40}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":41}]},"test_662":{"methods":[{"sl":40}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":41}]},"test_686":{"methods":[{"sl":40}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":41}]},"test_693":{"methods":[{"sl":40}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":41}]},"test_746":{"methods":[{"sl":40}],"name":"Verify toString","pass":true,"statements":[{"sl":41}]},"test_75":{"methods":[{"sl":40}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_774":{"methods":[{"sl":40}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41}]},"test_807":{"methods":[{"sl":40},{"sl":51},{"sl":63},{"sl":73},{"sl":84}],"name":"Verify that Time64 converts date correctly","pass":true,"statements":[{"sl":41},{"sl":52},{"sl":53},{"sl":54},{"sl":55},{"sl":64},{"sl":74},{"sl":75},{"sl":76},{"sl":77},{"sl":85}]},"test_942":{"methods":[{"sl":40}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":41}]},"test_955":{"methods":[{"sl":40}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":41}]},"test_974":{"methods":[{"sl":40}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":41}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [35, 447, 686, 658, 627, 547, 19, 974, 550, 746, 385, 942, 662, 249, 413, 470, 406, 75, 774, 257, 608, 693, 616, 259, 807, 485, 955, 482], [35, 447, 686, 658, 627, 547, 19, 974, 550, 746, 385, 942, 662, 249, 413, 470, 406, 75, 774, 257, 608, 693, 616, 259, 807, 485, 955, 482], [], [], [], [], [], [], [], [], [], [627, 807, 272], [627, 807, 272], [627, 807, 272], [627, 807, 272], [627, 807, 272], [], [], [], [], [], [], [], [807], [807], [], [], [], [], [], [], [], [], [627, 19, 542, 616, 807, 272], [627, 19, 542, 616, 807, 272], [627, 19, 542, 616, 807, 272], [627, 19, 542, 616, 807, 272], [627, 19, 542, 616, 807, 272], [], [], [], [], [], [], [807], [807], [], [], [19, 542, 616, 272], [], [19, 542, 616, 272], [], []]
