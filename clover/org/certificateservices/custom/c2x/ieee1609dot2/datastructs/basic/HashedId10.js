var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":62,"id":2644,"methods":[{"el":41,"sc":2,"sl":39},{"el":50,"sc":2,"sl":48},{"el":55,"sc":2,"sl":52},{"el":60,"sc":2,"sl":57}],"name":"HashedId10","sl":31}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_191":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that CrlContentsType is correctly encoded for type deltaHashCrl","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_340":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_390":{"methods":[{"sl":48},{"sl":52},{"sl":57}],"name":"Verify toString","pass":true,"statements":[{"sl":49},{"sl":54},{"sl":59}]},"test_422":{"methods":[{"sl":39},{"sl":48},{"sl":52}],"name":"Verify that HashedId10 only stores the 10 least significant bytes","pass":true,"statements":[{"sl":40},{"sl":49},{"sl":54}]},"test_456":{"methods":[{"sl":39},{"sl":52},{"sl":57}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":54},{"sl":59}]},"test_568":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that SequenceOfHashBasedRevocationInfo is initialized properly","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_630":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that IllegalArgumentException is thrown if not all fields are set","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_70":{"methods":[{"sl":57}],"name":"Verify toString()","pass":true,"statements":[{"sl":59}]},"test_704":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_789":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that CrlContentsType is correctly encoded for type fullHashCrl","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_907":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_91":{"methods":[{"sl":39},{"sl":52},{"sl":57}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":54},{"sl":59}]},"test_969":{"methods":[{"sl":39},{"sl":52},{"sl":57}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":54},{"sl":59}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [789, 456, 422, 907, 191, 704, 969, 568, 340, 630, 91], [789, 456, 422, 907, 191, 704, 969, 568, 340, 630, 91], [], [], [], [], [], [], [], [390, 422], [390, 422], [], [], [390, 789, 456, 422, 907, 191, 704, 969, 568, 340, 630, 91], [], [390, 789, 456, 422, 907, 191, 704, 969, 568, 340, 630, 91], [], [], [390, 456, 969, 70, 91], [], [390, 456, 969, 70, 91], [], [], []]
