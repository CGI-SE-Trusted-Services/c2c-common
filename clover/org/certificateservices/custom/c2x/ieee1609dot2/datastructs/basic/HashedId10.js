var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":62,"id":2529,"methods":[{"el":41,"sc":2,"sl":39},{"el":50,"sc":2,"sl":48},{"el":55,"sc":2,"sl":52},{"el":60,"sc":2,"sl":57}],"name":"HashedId10","sl":31}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_109":{"methods":[{"sl":39},{"sl":48},{"sl":52}],"name":"Verify that HashedId10 only stores the 10 least significant bytes","pass":true,"statements":[{"sl":40},{"sl":49},{"sl":54}]},"test_204":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_215":{"methods":[{"sl":39},{"sl":52},{"sl":57}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":54},{"sl":59}]},"test_227":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that SequenceOfHashBasedRevocationInfo is initialized properly","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_260":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_467":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that CrlContentsType is correctly encoded for type deltaHashCrl","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_551":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that IllegalArgumentException is thrown if not all fields are set","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_666":{"methods":[{"sl":48},{"sl":52},{"sl":57}],"name":"Verify toString","pass":true,"statements":[{"sl":49},{"sl":54},{"sl":59}]},"test_809":{"methods":[{"sl":39},{"sl":52},{"sl":57}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":54},{"sl":59}]},"test_815":{"methods":[{"sl":57}],"name":"Verify toString()","pass":true,"statements":[{"sl":59}]},"test_912":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that CrlContentsType is correctly encoded for type fullHashCrl","pass":true,"statements":[{"sl":40},{"sl":54}]},"test_919":{"methods":[{"sl":39},{"sl":52},{"sl":57}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":54},{"sl":59}]},"test_977":{"methods":[{"sl":39},{"sl":52}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":40},{"sl":54}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [204, 912, 260, 109, 467, 551, 227, 215, 919, 977, 809], [204, 912, 260, 109, 467, 551, 227, 215, 919, 977, 809], [], [], [], [], [], [], [], [109, 666], [109, 666], [], [], [204, 912, 260, 109, 467, 551, 227, 215, 919, 977, 666, 809], [], [204, 912, 260, 109, 467, 551, 227, 215, 919, 977, 666, 809], [], [], [215, 919, 666, 815, 809], [], [215, 919, 666, 815, 809], [], [], []]
