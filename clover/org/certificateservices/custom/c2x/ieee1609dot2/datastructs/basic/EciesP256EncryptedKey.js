var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":103,"id":2389,"methods":[{"el":49,"sc":2,"sl":46},{"el":66,"sc":2,"sl":54},{"el":74,"sc":2,"sl":72},{"el":82,"sc":2,"sl":80},{"el":90,"sc":2,"sl":88},{"el":96,"sc":2,"sl":92},{"el":101,"sc":2,"sl":98}],"name":"EciesP256EncryptedKey","sl":33}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_180":{"methods":[{"sl":72},{"sl":80},{"sl":88},{"sl":98}],"name":"Verify EncryptedDataEncryptionKey","pass":true,"statements":[{"sl":73},{"sl":81},{"sl":89},{"sl":100}]},"test_181":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92},{"sl":98}],"name":"Verify toString","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95},{"sl":100}]},"test_223":{"methods":[{"sl":72},{"sl":80},{"sl":88},{"sl":98}],"name":"Verify toString","pass":true,"statements":[{"sl":73},{"sl":81},{"sl":89},{"sl":100}]},"test_239":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_35":{"methods":[{"sl":46},{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_40":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that RecipientInfo is correctly encoded for type certRecipInfo","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_412":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that RecipientInfo is correctly encoded for type rekRecipInfo","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_485":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_489":{"methods":[{"sl":46},{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_516":{"methods":[{"sl":54},{"sl":92}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":58},{"sl":60},{"sl":61},{"sl":63},{"sl":93},{"sl":94},{"sl":95}]},"test_569":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_579":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that EncryptedDataEncryptionKey is correctly encoded for type eciesBrainpoolP256r1","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_608":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_625":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_71":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that EncryptedDataEncryptionKey is correctly encoded for type eciesNistP256","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_774":{"methods":[{"sl":46},{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_882":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that RecipientInfo is correctly encoded for type signedDataRecipInfo","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_895":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_943":{"methods":[{"sl":72},{"sl":80},{"sl":88},{"sl":98}],"name":"Verify EncryptedDataEncryptionKey","pass":true,"statements":[{"sl":73},{"sl":81},{"sl":89},{"sl":100}]},"test_946":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [35, 882, 40, 579, 489, 895, 412, 71, 774], [35, 882, 40, 579, 489, 895, 412, 71, 774], [35, 882, 40, 579, 489, 895, 412, 71, 774], [], [], [], [], [], [35, 625, 239, 489, 516, 946, 569, 181, 774, 608, 485], [35, 625, 239, 489, 516, 946, 569, 181, 774, 608, 485], [35, 625, 239, 489, 516, 946, 569, 181, 774, 608, 485], [35, 625, 239, 489, 516, 946, 569, 181, 774, 608, 485], [516], [], [35, 625, 239, 489, 516, 946, 569, 181, 774, 608, 485], [516], [], [35, 625, 239, 489, 516, 946, 569, 181, 774, 608, 485], [35, 625, 239, 489, 946, 569, 181, 774, 608, 485], [35, 625, 239, 489, 946, 569, 181, 774, 608, 485], [], [], [], [], [], [], [35, 625, 239, 489, 946, 569, 181, 774, 608, 943, 180, 223, 485], [35, 625, 239, 489, 946, 569, 181, 774, 608, 943, 180, 223, 485], [], [], [], [], [], [], [35, 625, 239, 489, 946, 569, 181, 774, 608, 943, 180, 223, 485], [35, 625, 239, 489, 946, 569, 181, 774, 608, 943, 180, 223, 485], [], [], [], [], [], [], [35, 625, 239, 489, 946, 569, 181, 774, 608, 943, 180, 223, 485], [35, 625, 239, 489, 946, 569, 181, 774, 608, 943, 180, 223, 485], [], [], [35, 625, 882, 239, 40, 579, 489, 516, 895, 946, 412, 569, 181, 71, 774, 608, 485], [35, 625, 882, 239, 40, 579, 489, 516, 895, 946, 412, 569, 181, 71, 774, 608, 485], [35, 625, 882, 239, 40, 579, 489, 516, 895, 946, 412, 569, 181, 71, 774, 608, 485], [35, 625, 882, 239, 40, 579, 489, 516, 895, 946, 412, 569, 181, 71, 774, 608, 485], [], [], [181, 943, 180, 223], [], [181, 943, 180, 223], [], [], []]
