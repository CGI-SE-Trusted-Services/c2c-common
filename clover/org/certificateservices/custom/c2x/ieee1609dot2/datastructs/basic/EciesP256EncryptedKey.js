var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":103,"id":2504,"methods":[{"el":49,"sc":2,"sl":46},{"el":66,"sc":2,"sl":54},{"el":74,"sc":2,"sl":72},{"el":82,"sc":2,"sl":80},{"el":90,"sc":2,"sl":88},{"el":96,"sc":2,"sl":92},{"el":101,"sc":2,"sl":98}],"name":"EciesP256EncryptedKey","sl":33}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_211":{"methods":[{"sl":72},{"sl":80},{"sl":88},{"sl":98}],"name":"Verify toString","pass":true,"statements":[{"sl":73},{"sl":81},{"sl":89},{"sl":100}]},"test_213":{"methods":[{"sl":72},{"sl":80},{"sl":88},{"sl":98}],"name":"Verify EncryptedDataEncryptionKey","pass":true,"statements":[{"sl":73},{"sl":81},{"sl":89},{"sl":100}]},"test_254":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that RecipientInfo is correctly encoded for type certRecipInfo","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_321":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_345":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that RecipientInfo is correctly encoded for type rekRecipInfo","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_367":{"methods":[{"sl":46},{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_388":{"methods":[{"sl":54},{"sl":92}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":58},{"sl":60},{"sl":61},{"sl":63},{"sl":93},{"sl":94},{"sl":95}]},"test_405":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92},{"sl":98}],"name":"Verify toString","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95},{"sl":100}]},"test_502":{"methods":[{"sl":72},{"sl":80},{"sl":88},{"sl":98}],"name":"Verify EncryptedDataEncryptionKey","pass":true,"statements":[{"sl":73},{"sl":81},{"sl":89},{"sl":100}]},"test_542":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that EncryptedDataEncryptionKey is correctly encoded for type eciesBrainpoolP256r1","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_549":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_56":{"methods":[{"sl":46},{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_57":{"methods":[{"sl":46},{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_736":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_760":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that EncryptedDataEncryptionKey is correctly encoded for type eciesNistP256","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_815":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_825":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]},"test_843":{"methods":[{"sl":46},{"sl":92}],"name":"Verify that RecipientInfo is correctly encoded for type signedDataRecipInfo","pass":true,"statements":[{"sl":47},{"sl":48},{"sl":93},{"sl":94},{"sl":95}]},"test_876":{"methods":[{"sl":54},{"sl":72},{"sl":80},{"sl":88},{"sl":92}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":57},{"sl":60},{"sl":63},{"sl":64},{"sl":65},{"sl":73},{"sl":81},{"sl":89},{"sl":93},{"sl":94},{"sl":95}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [345, 760, 542, 843, 57, 736, 56, 367, 254], [345, 760, 542, 843, 57, 736, 56, 367, 254], [345, 760, 542, 843, 57, 736, 56, 367, 254], [], [], [], [], [], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 388], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 388], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 388], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 388], [388], [], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 388], [388], [], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 388], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367], [], [], [], [], [], [], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 502, 211, 213], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 502, 211, 213], [], [], [], [], [], [], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 502, 211, 213], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 502, 211, 213], [], [], [], [], [], [], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 502, 211, 213], [815, 549, 405, 876, 825, 321, 57, 0, 56, 367, 502, 211, 213], [], [], [815, 549, 405, 345, 760, 542, 876, 825, 321, 843, 57, 736, 0, 56, 367, 388, 254], [815, 549, 405, 345, 760, 542, 876, 825, 321, 843, 57, 736, 0, 56, 367, 388, 254], [815, 549, 405, 345, 760, 542, 876, 825, 321, 843, 57, 736, 0, 56, 367, 388, 254], [815, 549, 405, 345, 760, 542, 876, 825, 321, 843, 57, 736, 0, 56, 367, 388, 254], [], [], [405, 502, 211, 213], [], [405, 502, 211, 213], [], [], []]
