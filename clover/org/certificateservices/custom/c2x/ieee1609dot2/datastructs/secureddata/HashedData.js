var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":76,"id":4495,"methods":[{"el":54,"sc":2,"sl":52},{"el":62,"sc":2,"sl":60},{"el":69,"sc":2,"sl":67},{"el":74,"sc":2,"sl":71}],"name":"HashedData","sl":35},{"el":47,"id":4495,"methods":[{"el":46,"sc":3,"sl":43}],"name":"HashedData.HashedDataChoices","sl":40}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_249":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_257":{"methods":[{"sl":60}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":61}]},"test_259":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_316":{"methods":[{"sl":43},{"sl":52},{"sl":60},{"sl":67}],"name":"Verify that HashedData is correctly encoded for type sha256HashedData","pass":true,"statements":[{"sl":45},{"sl":53},{"sl":61},{"sl":68}]},"test_35":{"methods":[{"sl":60}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":61}]},"test_385":{"methods":[{"sl":60}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":61}]},"test_406":{"methods":[{"sl":60}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":61}]},"test_413":{"methods":[{"sl":60}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":61}]},"test_470":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_482":{"methods":[{"sl":52},{"sl":60},{"sl":67}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":53},{"sl":61},{"sl":68}]},"test_485":{"methods":[{"sl":60}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":61}]},"test_537":{"methods":[{"sl":52},{"sl":71}],"name":"Verify HashedData","pass":true,"statements":[{"sl":53},{"sl":73}]},"test_542":{"methods":[{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":73}]},"test_547":{"methods":[{"sl":60}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":61}]},"test_550":{"methods":[{"sl":60},{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":73}]},"test_563":{"methods":[{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":73}]},"test_608":{"methods":[{"sl":60}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":61}]},"test_616":{"methods":[{"sl":60}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":61}]},"test_617":{"methods":[{"sl":60},{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":73}]},"test_658":{"methods":[{"sl":60}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":61}]},"test_686":{"methods":[{"sl":60}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":61}]},"test_693":{"methods":[{"sl":60}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":61}]},"test_727":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_746":{"methods":[{"sl":60},{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":73}]},"test_75":{"methods":[{"sl":52},{"sl":60},{"sl":67}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":53},{"sl":61},{"sl":68}]},"test_774":{"methods":[{"sl":60}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":61}]},"test_910":{"methods":[{"sl":60}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":61}]},"test_942":{"methods":[{"sl":60}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":61}]},"test_955":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_974":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":45},{"sl":61}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [974, 316, 249, 470, 727, 259, 955], [], [974, 316, 249, 470, 727, 259, 955], [], [], [], [], [], [], [537, 316, 75, 482], [537, 316, 75, 482], [], [], [], [], [], [], [35, 686, 658, 547, 974, 550, 617, 746, 385, 316, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 910, 485, 955, 482], [35, 686, 658, 547, 974, 550, 617, 746, 385, 316, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 910, 485, 955, 482], [], [], [], [], [], [316, 75, 482], [316, 75, 482], [], [], [537, 550, 617, 746, 542, 563], [], [537, 550, 617, 746, 542, 563], [], [], []]
