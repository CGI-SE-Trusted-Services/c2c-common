var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":76,"id":4640,"methods":[{"el":54,"sc":2,"sl":52},{"el":62,"sc":2,"sl":60},{"el":69,"sc":2,"sl":67},{"el":74,"sc":2,"sl":71}],"name":"HashedData","sl":35},{"el":47,"id":4640,"methods":[{"el":46,"sc":3,"sl":43}],"name":"HashedData.HashedDataChoices","sl":40}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_100":{"methods":[{"sl":60}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":61}]},"test_110":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_182":{"methods":[{"sl":60}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":61}]},"test_310":{"methods":[{"sl":60},{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":73}]},"test_325":{"methods":[{"sl":60}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":61}]},"test_367":{"methods":[{"sl":60}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":61}]},"test_377":{"methods":[{"sl":60}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":61}]},"test_40":{"methods":[{"sl":52},{"sl":60},{"sl":67}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":53},{"sl":61},{"sl":68}]},"test_412":{"methods":[{"sl":60}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":61}]},"test_445":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_447":{"methods":[{"sl":52},{"sl":60},{"sl":67}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":53},{"sl":61},{"sl":68}]},"test_461":{"methods":[{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":73}]},"test_486":{"methods":[{"sl":52},{"sl":71}],"name":"Verify HashedData","pass":true,"statements":[{"sl":53},{"sl":73}]},"test_549":{"methods":[{"sl":60}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":61}]},"test_57":{"methods":[{"sl":60}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":61}]},"test_58":{"methods":[{"sl":60}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":61}]},"test_592":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_597":{"methods":[{"sl":60},{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":73}]},"test_633":{"methods":[{"sl":60}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":61}]},"test_656":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_66":{"methods":[{"sl":60}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":61}]},"test_720":{"methods":[{"sl":43},{"sl":52},{"sl":60},{"sl":67}],"name":"Verify that HashedData is correctly encoded for type sha256HashedData","pass":true,"statements":[{"sl":45},{"sl":53},{"sl":61},{"sl":68}]},"test_725":{"methods":[{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":73}]},"test_740":{"methods":[{"sl":60},{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":73}]},"test_744":{"methods":[{"sl":60}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":61}]},"test_790":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_81":{"methods":[{"sl":43},{"sl":60}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":45},{"sl":61}]},"test_815":{"methods":[{"sl":60}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":61}]},"test_882":{"methods":[{"sl":60}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":61}]},"test_949":{"methods":[{"sl":60}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":61}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [110, 445, 592, 720, 81, 656, 790], [], [110, 445, 592, 720, 81, 656, 790], [], [], [], [], [], [], [447, 40, 720, 486], [447, 40, 720, 486], [], [], [], [], [], [], [100, 815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 744, 720, 81, 377, 66, 949, 656, 790, 597, 740], [100, 815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 744, 720, 81, 377, 66, 949, 656, 790, 597, 740], [], [], [], [], [], [447, 40, 720], [447, 40, 720], [], [], [310, 725, 461, 486, 597, 740], [], [310, 725, 461, 486, 597, 740], [], [], []]
