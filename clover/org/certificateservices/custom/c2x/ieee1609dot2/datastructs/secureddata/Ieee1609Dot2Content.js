var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":101,"id":4559,"methods":[{"el":66,"sc":2,"sl":64},{"el":73,"sc":2,"sl":71},{"el":80,"sc":2,"sl":78},{"el":87,"sc":2,"sl":85},{"el":94,"sc":2,"sl":92},{"el":99,"sc":2,"sl":96}],"name":"Ieee1609Dot2Content","sl":35},{"el":59,"id":4559,"methods":[{"el":58,"sc":3,"sl":46}],"name":"Ieee1609Dot2Content.Ieee1609Dot2ContentChoices","sl":40}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_239":{"methods":[{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":79},{"sl":86},{"sl":93}]},"test_249":{"methods":[{"sl":46},{"sl":85},{"sl":92}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":86},{"sl":93}]},"test_257":{"methods":[{"sl":85}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":86}]},"test_259":{"methods":[{"sl":85}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":86}]},"test_286":{"methods":[{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that preshared key encryption works correctly","pass":true,"statements":[{"sl":79},{"sl":86},{"sl":93}]},"test_304":{"methods":[{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that symmetric key envelope encryption works correctly","pass":true,"statements":[{"sl":79},{"sl":86},{"sl":93}]},"test_332":{"methods":[{"sl":46},{"sl":64},{"sl":85},{"sl":92}],"name":"Verify that constructor throws Exception if content doesn't fullfill requirements","pass":true,"statements":[{"sl":48},{"sl":53},{"sl":56},{"sl":65},{"sl":86},{"sl":93}]},"test_335":{"methods":[{"sl":46},{"sl":85},{"sl":92}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type unsecuredData","pass":true,"statements":[{"sl":48},{"sl":53},{"sl":56},{"sl":86},{"sl":93}]},"test_35":{"methods":[{"sl":46},{"sl":64},{"sl":71},{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":56},{"sl":65},{"sl":72},{"sl":79},{"sl":86},{"sl":93}]},"test_381":{"methods":[{"sl":85},{"sl":92},{"sl":96}],"name":"Verify toString","pass":true,"statements":[{"sl":86},{"sl":93},{"sl":98}]},"test_385":{"methods":[{"sl":64},{"sl":71},{"sl":85},{"sl":92}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":65},{"sl":72},{"sl":86},{"sl":93}]},"test_406":{"methods":[{"sl":64},{"sl":71},{"sl":85},{"sl":92}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":65},{"sl":72},{"sl":86},{"sl":93}]},"test_413":{"methods":[{"sl":64},{"sl":71},{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":65},{"sl":72},{"sl":79},{"sl":86},{"sl":93}]},"test_449":{"methods":[{"sl":85}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":86}]},"test_460":{"methods":[{"sl":46},{"sl":85},{"sl":92}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type encryptedData","pass":true,"statements":[{"sl":48},{"sl":51},{"sl":52},{"sl":86},{"sl":93}]},"test_470":{"methods":[{"sl":85}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":86}]},"test_482":{"methods":[{"sl":71},{"sl":85},{"sl":92}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":72},{"sl":86},{"sl":93}]},"test_485":{"methods":[{"sl":64},{"sl":71},{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":65},{"sl":72},{"sl":79},{"sl":86},{"sl":93}]},"test_542":{"methods":[{"sl":85},{"sl":92},{"sl":96}],"name":"Verify toString","pass":true,"statements":[{"sl":86},{"sl":93},{"sl":98}]},"test_547":{"methods":[{"sl":64},{"sl":71},{"sl":85}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":65},{"sl":72},{"sl":86}]},"test_550":{"methods":[{"sl":85}],"name":"Verify toString","pass":true,"statements":[{"sl":86}]},"test_563":{"methods":[{"sl":64},{"sl":71},{"sl":96}],"name":"Verify toString","pass":true,"statements":[{"sl":65},{"sl":72},{"sl":98}]},"test_569":{"methods":[{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":79},{"sl":86},{"sl":93}]},"test_608":{"methods":[{"sl":64},{"sl":71},{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":65},{"sl":72},{"sl":79},{"sl":86},{"sl":93}]},"test_616":{"methods":[{"sl":46},{"sl":85},{"sl":96}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":53},{"sl":56},{"sl":86},{"sl":98}]},"test_617":{"methods":[{"sl":85},{"sl":96}],"name":"Verify toString","pass":true,"statements":[{"sl":86},{"sl":98}]},"test_625":{"methods":[{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":79},{"sl":86},{"sl":93}]},"test_658":{"methods":[{"sl":85}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":86}]},"test_686":{"methods":[{"sl":64},{"sl":71},{"sl":85},{"sl":92}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":65},{"sl":72},{"sl":86},{"sl":93}]},"test_688":{"methods":[{"sl":46},{"sl":85}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":48},{"sl":53},{"sl":56},{"sl":86}]},"test_693":{"methods":[{"sl":64},{"sl":71},{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":65},{"sl":72},{"sl":79},{"sl":86},{"sl":93}]},"test_727":{"methods":[{"sl":46},{"sl":85}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":48},{"sl":53},{"sl":56},{"sl":86}]},"test_746":{"methods":[{"sl":85}],"name":"Verify toString","pass":true,"statements":[{"sl":86}]},"test_75":{"methods":[{"sl":71},{"sl":85},{"sl":92}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":72},{"sl":86},{"sl":93}]},"test_774":{"methods":[{"sl":46},{"sl":64},{"sl":71},{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":53},{"sl":56},{"sl":65},{"sl":72},{"sl":79},{"sl":86},{"sl":93}]},"test_817":{"methods":[{"sl":85},{"sl":96}],"name":"Verify toString","pass":true,"statements":[{"sl":86},{"sl":98}]},"test_89":{"methods":[{"sl":46},{"sl":85},{"sl":92}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedCertificateRequest","pass":true,"statements":[{"sl":48},{"sl":54},{"sl":56},{"sl":86},{"sl":93}]},"test_910":{"methods":[{"sl":85}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":86}]},"test_928":{"methods":[{"sl":46},{"sl":64},{"sl":85},{"sl":92}],"name":"Verify that constructor throws Exception if content doesn't fullfill requirements","pass":true,"statements":[{"sl":48},{"sl":53},{"sl":56},{"sl":65},{"sl":86},{"sl":93}]},"test_942":{"methods":[{"sl":46},{"sl":85},{"sl":92}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":53},{"sl":56},{"sl":86},{"sl":93}]},"test_946":{"methods":[{"sl":78},{"sl":85},{"sl":92}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":79},{"sl":86},{"sl":93}]},"test_955":{"methods":[{"sl":46},{"sl":85},{"sl":92}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":86},{"sl":93}]},"test_974":{"methods":[{"sl":85}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":86}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [35, 332, 688, 942, 335, 460, 249, 928, 774, 89, 727, 616, 955], [], [35, 332, 688, 942, 335, 460, 249, 928, 774, 89, 727, 616, 955], [35, 942, 249, 774, 616, 955], [35, 942, 249, 774, 616, 955], [35, 460, 774], [35, 460, 774], [35, 332, 688, 942, 335, 928, 774, 727, 616], [89], [], [35, 332, 688, 942, 335, 928, 774, 89, 727, 616], [], [], [], [], [], [], [], [35, 686, 547, 332, 385, 413, 928, 406, 774, 608, 563, 693, 485], [35, 686, 547, 332, 385, 413, 928, 406, 774, 608, 563, 693, 485], [], [], [], [], [], [35, 686, 547, 385, 413, 406, 75, 774, 608, 563, 693, 485, 482], [35, 686, 547, 385, 413, 406, 75, 774, 608, 563, 693, 485, 482], [], [], [], [], [], [946, 35, 625, 239, 569, 286, 413, 304, 774, 608, 693, 485], [946, 35, 625, 239, 569, 286, 413, 304, 774, 608, 693, 485], [], [], [], [], [], [946, 35, 625, 686, 658, 547, 817, 332, 974, 239, 550, 617, 746, 688, 569, 542, 385, 449, 942, 335, 460, 249, 286, 413, 304, 928, 470, 406, 75, 774, 257, 89, 727, 608, 381, 693, 616, 259, 910, 485, 955, 482], [946, 35, 625, 686, 658, 547, 817, 332, 974, 239, 550, 617, 746, 688, 569, 542, 385, 449, 942, 335, 460, 249, 286, 413, 304, 928, 470, 406, 75, 774, 257, 89, 727, 608, 381, 693, 616, 259, 910, 485, 955, 482], [], [], [], [], [], [946, 35, 625, 686, 332, 239, 569, 542, 385, 942, 335, 460, 249, 286, 413, 304, 928, 406, 75, 774, 89, 608, 381, 693, 485, 955, 482], [946, 35, 625, 686, 332, 239, 569, 542, 385, 942, 335, 460, 249, 286, 413, 304, 928, 406, 75, 774, 89, 608, 381, 693, 485, 955, 482], [], [], [817, 617, 542, 563, 381, 616], [], [817, 617, 542, 563, 381, 616], [], [], []]
