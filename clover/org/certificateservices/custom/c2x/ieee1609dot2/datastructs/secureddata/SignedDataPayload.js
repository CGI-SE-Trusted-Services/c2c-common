var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":88,"id":4801,"methods":[{"el":43,"sc":2,"sl":40},{"el":57,"sc":2,"sl":48},{"el":65,"sc":2,"sl":63},{"el":73,"sc":2,"sl":71},{"el":78,"sc":2,"sl":75},{"el":86,"sc":2,"sl":80}],"name":"SignedDataPayload","sl":28}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_100":{"methods":[{"sl":48},{"sl":75}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":76},{"sl":77}]},"test_110":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_164":{"methods":[{"sl":63},{"sl":71},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":64},{"sl":72},{"sl":82},{"sl":83}]},"test_182":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_310":{"methods":[{"sl":40},{"sl":63},{"sl":71},{"sl":75},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":72},{"sl":76},{"sl":77},{"sl":82},{"sl":84}]},"test_325":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_367":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_377":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_40":{"methods":[{"sl":40},{"sl":48},{"sl":71},{"sl":75}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":72},{"sl":76},{"sl":77}]},"test_412":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_445":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_447":{"methods":[{"sl":40},{"sl":48},{"sl":71},{"sl":75}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":72},{"sl":76},{"sl":77}]},"test_461":{"methods":[{"sl":63},{"sl":71},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":64},{"sl":72},{"sl":82},{"sl":84}]},"test_549":{"methods":[{"sl":40},{"sl":48},{"sl":75}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":76},{"sl":77}]},"test_57":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_58":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_592":{"methods":[{"sl":40},{"sl":63},{"sl":71},{"sl":75}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":72},{"sl":76},{"sl":77}]},"test_597":{"methods":[{"sl":48},{"sl":63},{"sl":71},{"sl":75},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":72},{"sl":76},{"sl":77},{"sl":82},{"sl":83},{"sl":84}]},"test_633":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_656":{"methods":[{"sl":40},{"sl":63},{"sl":71},{"sl":75}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":72},{"sl":76},{"sl":77}]},"test_66":{"methods":[{"sl":40},{"sl":48},{"sl":75}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":76},{"sl":77}]},"test_725":{"methods":[{"sl":63},{"sl":71},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":64},{"sl":72},{"sl":82},{"sl":84}]},"test_740":{"methods":[{"sl":40},{"sl":63},{"sl":71},{"sl":75},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":72},{"sl":76},{"sl":77},{"sl":82},{"sl":84}]},"test_744":{"methods":[{"sl":40},{"sl":63},{"sl":75}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":76},{"sl":77}]},"test_790":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_81":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_815":{"methods":[{"sl":40},{"sl":48},{"sl":75}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":76},{"sl":77}]},"test_882":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":71},{"sl":75}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":72},{"sl":76},{"sl":77}]},"test_949":{"methods":[{"sl":40},{"sl":63},{"sl":71},{"sl":75},{"sl":80}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":72},{"sl":76},{"sl":77},{"sl":82},{"sl":83}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 744, 81, 377, 66, 949, 656, 790, 740], [815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 744, 81, 377, 66, 949, 656, 790, 740], [815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 744, 81, 377, 66, 949, 656, 790, 740], [], [], [], [], [], [100, 815, 325, 882, 549, 447, 182, 412, 57, 58, 40, 367, 66, 597], [100, 815, 325, 882, 549, 447, 182, 412, 57, 58, 40, 367, 66, 597], [100, 815, 325, 882, 549, 447, 182, 412, 57, 58, 40, 367, 66, 597], [100, 815, 325, 882, 549, 447, 182, 412, 57, 58, 40, 367, 66, 597], [100], [], [815, 325, 882, 549, 447, 182, 412, 57, 58, 40, 367, 66, 597], [815, 325, 882, 549, 447, 182, 412, 57, 58, 40, 367, 66, 597], [], [], [], [], [], [], [], [310, 325, 882, 182, 592, 412, 57, 58, 367, 164, 744, 725, 949, 656, 461, 597, 740], [310, 325, 882, 182, 592, 412, 57, 58, 367, 164, 744, 725, 949, 656, 461, 597, 740], [], [], [], [], [], [], [310, 882, 447, 592, 40, 164, 725, 949, 656, 461, 597, 740], [310, 882, 447, 592, 40, 164, 725, 949, 656, 461, 597, 740], [], [], [100, 815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 744, 81, 377, 66, 949, 656, 790, 597, 740], [100, 815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 744, 81, 377, 66, 949, 656, 790, 597, 740], [100, 815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 744, 81, 377, 66, 949, 656, 790, 597, 740], [], [], [310, 164, 725, 949, 461, 597, 740], [], [310, 164, 725, 949, 461, 597, 740], [164, 949, 597], [310, 725, 461, 597, 740], [], [], [], []]
