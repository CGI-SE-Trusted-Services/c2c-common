var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":88,"id":4656,"methods":[{"el":43,"sc":2,"sl":40},{"el":57,"sc":2,"sl":48},{"el":65,"sc":2,"sl":63},{"el":73,"sc":2,"sl":71},{"el":78,"sc":2,"sl":75},{"el":86,"sc":2,"sl":80}],"name":"SignedDataPayload","sl":28}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_249":{"methods":[{"sl":40},{"sl":63},{"sl":71},{"sl":75}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":72},{"sl":76},{"sl":77}]},"test_257":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_259":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_35":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_381":{"methods":[{"sl":63},{"sl":71},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":64},{"sl":72},{"sl":82},{"sl":83}]},"test_385":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_406":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_413":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_470":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_482":{"methods":[{"sl":40},{"sl":48},{"sl":71},{"sl":75}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":72},{"sl":76},{"sl":77}]},"test_485":{"methods":[{"sl":40},{"sl":48},{"sl":75}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":76},{"sl":77}]},"test_542":{"methods":[{"sl":63},{"sl":71},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":64},{"sl":72},{"sl":82},{"sl":84}]},"test_547":{"methods":[{"sl":40},{"sl":48},{"sl":75}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":76},{"sl":77}]},"test_550":{"methods":[{"sl":40},{"sl":63},{"sl":71},{"sl":75},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":72},{"sl":76},{"sl":77},{"sl":82},{"sl":84}]},"test_563":{"methods":[{"sl":63},{"sl":71},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":64},{"sl":72},{"sl":82},{"sl":84}]},"test_608":{"methods":[{"sl":40},{"sl":48},{"sl":75}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":76},{"sl":77}]},"test_616":{"methods":[{"sl":40},{"sl":63},{"sl":71},{"sl":75},{"sl":80}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":72},{"sl":76},{"sl":77},{"sl":82},{"sl":83}]},"test_617":{"methods":[{"sl":48},{"sl":63},{"sl":71},{"sl":75},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":72},{"sl":76},{"sl":77},{"sl":82},{"sl":83},{"sl":84}]},"test_658":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_686":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_693":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":71},{"sl":75}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":72},{"sl":76},{"sl":77}]},"test_727":{"methods":[{"sl":40},{"sl":63},{"sl":71},{"sl":75}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":72},{"sl":76},{"sl":77}]},"test_746":{"methods":[{"sl":40},{"sl":63},{"sl":71},{"sl":75},{"sl":80}],"name":"Verify toString","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":72},{"sl":76},{"sl":77},{"sl":82},{"sl":84}]},"test_75":{"methods":[{"sl":40},{"sl":48},{"sl":71},{"sl":75}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":72},{"sl":76},{"sl":77}]},"test_774":{"methods":[{"sl":40},{"sl":48},{"sl":63},{"sl":75}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":49},{"sl":50},{"sl":51},{"sl":54},{"sl":55},{"sl":64},{"sl":76},{"sl":77}]},"test_910":{"methods":[{"sl":48},{"sl":75}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":49},{"sl":50},{"sl":51},{"sl":52},{"sl":76},{"sl":77}]},"test_942":{"methods":[{"sl":40},{"sl":63},{"sl":75}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":64},{"sl":76},{"sl":77}]},"test_955":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]},"test_974":{"methods":[{"sl":40},{"sl":75}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":41},{"sl":42},{"sl":76},{"sl":77}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [35, 686, 658, 547, 974, 550, 746, 385, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 485, 955, 482], [35, 686, 658, 547, 974, 550, 746, 385, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 485, 955, 482], [35, 686, 658, 547, 974, 550, 746, 385, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 485, 955, 482], [], [], [], [], [], [35, 686, 547, 617, 385, 413, 406, 75, 774, 608, 693, 910, 485, 482], [35, 686, 547, 617, 385, 413, 406, 75, 774, 608, 693, 910, 485, 482], [35, 686, 547, 617, 385, 413, 406, 75, 774, 608, 693, 910, 485, 482], [35, 686, 547, 617, 385, 413, 406, 75, 774, 608, 693, 910, 485, 482], [910], [], [35, 686, 547, 617, 385, 413, 406, 75, 774, 608, 693, 485, 482], [35, 686, 547, 617, 385, 413, 406, 75, 774, 608, 693, 485, 482], [], [], [], [], [], [], [], [35, 686, 550, 617, 746, 542, 385, 942, 249, 413, 406, 774, 727, 563, 381, 693, 616], [35, 686, 550, 617, 746, 542, 385, 942, 249, 413, 406, 774, 727, 563, 381, 693, 616], [], [], [], [], [], [], [550, 617, 746, 542, 249, 75, 727, 563, 381, 693, 616, 482], [550, 617, 746, 542, 249, 75, 727, 563, 381, 693, 616, 482], [], [], [35, 686, 658, 547, 974, 550, 617, 746, 385, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 910, 485, 955, 482], [35, 686, 658, 547, 974, 550, 617, 746, 385, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 910, 485, 955, 482], [35, 686, 658, 547, 974, 550, 617, 746, 385, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 910, 485, 955, 482], [], [], [550, 617, 746, 542, 563, 381, 616], [], [550, 617, 746, 542, 563, 381, 616], [617, 381, 616], [550, 617, 746, 542, 563], [], [], [], []]
