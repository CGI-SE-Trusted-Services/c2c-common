var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":81,"id":4610,"methods":[{"el":42,"sc":2,"sl":39},{"el":53,"sc":2,"sl":47},{"el":61,"sc":2,"sl":59},{"el":69,"sc":2,"sl":67},{"el":74,"sc":2,"sl":71},{"el":79,"sc":2,"sl":76}],"name":"MissingCrlIdentifier","sl":28}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_19":{"methods":[{"sl":39},{"sl":59},{"sl":67},{"sl":71},{"sl":76}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":60},{"sl":68},{"sl":72},{"sl":73},{"sl":78}]},"test_249":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_257":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_259":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_35":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_385":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_406":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_409":{"methods":[{"sl":47},{"sl":59},{"sl":67},{"sl":71},{"sl":76}],"name":"Verify toString","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":60},{"sl":68},{"sl":72},{"sl":73},{"sl":78}]},"test_413":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_447":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_470":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_48":{"methods":[{"sl":47},{"sl":71}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":72},{"sl":73}]},"test_482":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_485":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_547":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_550":{"methods":[{"sl":39},{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_608":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_616":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_627":{"methods":[{"sl":39},{"sl":47},{"sl":59},{"sl":67},{"sl":71}],"name":"Verify that genHeaderInfo generates correct header info","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":60},{"sl":68},{"sl":72},{"sl":73}]},"test_658":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_662":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_686":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_693":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_746":{"methods":[{"sl":39},{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_75":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_774":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_91":{"methods":[{"sl":39},{"sl":47},{"sl":59},{"sl":67},{"sl":71}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":48},{"sl":49},{"sl":50},{"sl":51},{"sl":60},{"sl":68},{"sl":72},{"sl":73}]},"test_942":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_955":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]},"test_974":{"methods":[{"sl":39},{"sl":71}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":40},{"sl":41},{"sl":72},{"sl":73}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [35, 447, 686, 658, 627, 547, 19, 91, 974, 550, 746, 385, 942, 662, 249, 413, 470, 406, 75, 774, 257, 608, 693, 616, 259, 485, 955, 482], [35, 447, 686, 658, 627, 547, 19, 91, 974, 550, 746, 385, 942, 662, 249, 413, 470, 406, 75, 774, 257, 608, 693, 616, 259, 485, 955, 482], [35, 447, 686, 658, 627, 547, 19, 91, 974, 550, 746, 385, 942, 662, 249, 413, 470, 406, 75, 774, 257, 608, 693, 616, 259, 485, 955, 482], [], [], [], [], [], [627, 91, 48, 409], [627, 91, 48, 409], [627, 91, 48, 409], [627, 91, 48, 409], [627, 91, 48, 409], [], [], [], [], [], [], [], [627, 19, 91, 409], [627, 19, 91, 409], [], [], [], [], [], [], [627, 19, 91, 409], [627, 19, 91, 409], [], [], [35, 447, 686, 658, 627, 547, 19, 91, 974, 550, 746, 385, 942, 662, 249, 413, 470, 406, 75, 774, 257, 48, 608, 409, 693, 616, 259, 485, 955, 482], [35, 447, 686, 658, 627, 547, 19, 91, 974, 550, 746, 385, 942, 662, 249, 413, 470, 406, 75, 774, 257, 48, 608, 409, 693, 616, 259, 485, 955, 482], [35, 447, 686, 658, 627, 547, 19, 91, 974, 550, 746, 385, 942, 662, 249, 413, 470, 406, 75, 774, 257, 48, 608, 409, 693, 616, 259, 485, 955, 482], [], [], [19, 409], [], [19, 409], [], [], []]
