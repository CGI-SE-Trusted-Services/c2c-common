var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":123,"id":4726,"methods":[{"el":48,"sc":2,"sl":45},{"el":55,"sc":2,"sl":53},{"el":66,"sc":2,"sl":60},{"el":79,"sc":2,"sl":73},{"el":87,"sc":2,"sl":85},{"el":95,"sc":2,"sl":93},{"el":108,"sc":2,"sl":103},{"el":113,"sc":2,"sl":110},{"el":121,"sc":2,"sl":115}],"name":"Ieee1609Dot2Data","sl":33}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_100":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_110":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_164":{"methods":[{"sl":60},{"sl":85},{"sl":93},{"sl":110},{"sl":115}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":86},{"sl":94},{"sl":111},{"sl":112},{"sl":117}]},"test_182":{"methods":[{"sl":45},{"sl":53},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_310":{"methods":[{"sl":45},{"sl":110}],"name":"Verify toString","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_321":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_325":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_331":{"methods":[{"sl":45},{"sl":53},{"sl":60},{"sl":85},{"sl":93},{"sl":110}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":86},{"sl":94},{"sl":111},{"sl":112}]},"test_354":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that symmetric key envelope encryption works correctly","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_367":{"methods":[{"sl":45},{"sl":53},{"sl":60},{"sl":73},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_377":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_378":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that preshared key encryption works correctly","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_40":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_412":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_445":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_447":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_461":{"methods":[{"sl":60},{"sl":85},{"sl":93},{"sl":110}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":86},{"sl":94},{"sl":111},{"sl":112}]},"test_549":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_57":{"methods":[{"sl":45},{"sl":53},{"sl":60},{"sl":73},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_58":{"methods":[{"sl":45},{"sl":60},{"sl":85},{"sl":93},{"sl":110}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":86},{"sl":94},{"sl":111},{"sl":112}]},"test_592":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_597":{"methods":[{"sl":45},{"sl":85},{"sl":93},{"sl":110},{"sl":115}],"name":"Verify toString","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":86},{"sl":94},{"sl":111},{"sl":112},{"sl":117}]},"test_633":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_656":{"methods":[{"sl":45},{"sl":60},{"sl":73},{"sl":85},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":86},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_66":{"methods":[{"sl":45},{"sl":60},{"sl":103},{"sl":110}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_67":{"methods":[{"sl":60},{"sl":110}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":111},{"sl":112}]},"test_740":{"methods":[{"sl":45},{"sl":110}],"name":"Verify toString","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_744":{"methods":[{"sl":45},{"sl":60},{"sl":73},{"sl":85},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":86},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_757":{"methods":[{"sl":53},{"sl":60},{"sl":73},{"sl":85},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that constructor throws Exception if content doesn't fullfill requirements","pass":true,"statements":[{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":86},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_790":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_81":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_815":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_825":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_828":{"methods":[{"sl":53},{"sl":60},{"sl":73},{"sl":85},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that constructor throws Exception if content doesn't fullfill requirements","pass":true,"statements":[{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":86},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_876":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_882":{"methods":[{"sl":45},{"sl":53},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_908":{"methods":[{"sl":53},{"sl":60},{"sl":85},{"sl":93},{"sl":110},{"sl":115}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":86},{"sl":94},{"sl":111},{"sl":112},{"sl":117}]},"test_949":{"methods":[{"sl":45},{"sl":73},{"sl":85},{"sl":93},{"sl":103},{"sl":110},{"sl":115}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":86},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112},{"sl":117}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [100, 815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 331, 744, 81, 377, 66, 949, 656, 790, 597, 740], [100, 815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 331, 744, 81, 377, 66, 949, 656, 790, 597, 740], [100, 815, 310, 325, 882, 549, 447, 110, 182, 445, 592, 412, 57, 58, 633, 40, 367, 331, 744, 81, 377, 66, 949, 656, 790, 597, 740], [], [], [], [], [], [757, 882, 908, 182, 57, 367, 331, 828], [757, 882, 908, 182, 57, 367, 331, 828], [], [], [], [], [], [876, 815, 325, 757, 882, 549, 447, 908, 825, 321, 182, 354, 412, 57, 378, 0, 58, 40, 367, 164, 331, 744, 828, 66, 67, 656, 461], [876, 815, 325, 757, 882, 549, 447, 908, 825, 321, 182, 354, 412, 57, 378, 0, 58, 40, 367, 164, 331, 744, 828, 66, 67, 656, 461], [876, 815, 325, 757, 882, 549, 447, 908, 825, 321, 182, 354, 412, 57, 378, 0, 58, 40, 367, 164, 331, 744, 828, 66, 67, 656, 461], [876, 815, 325, 757, 882, 549, 447, 908, 825, 321, 182, 354, 412, 57, 378, 0, 58, 40, 367, 164, 331, 744, 828, 66, 67, 656, 461], [876, 815, 325, 757, 882, 549, 447, 908, 825, 321, 182, 354, 412, 57, 378, 0, 58, 40, 367, 164, 331, 744, 828, 66, 67, 656, 461], [], [], [], [], [], [], [], [], [757, 57, 367, 744, 828, 949, 656], [757, 57, 367, 744, 828, 949, 656], [757, 57, 367, 744, 828, 949, 656], [], [757, 57, 367, 744, 828, 949, 656], [757, 57, 367, 744, 828, 949, 656], [], [], [], [], [], [], [757, 908, 58, 164, 331, 744, 828, 949, 656, 461, 597], [757, 908, 58, 164, 331, 744, 828, 949, 656, 461, 597], [], [], [], [], [], [], [876, 815, 325, 757, 882, 549, 447, 908, 825, 321, 182, 354, 412, 57, 378, 0, 58, 40, 367, 164, 331, 744, 828, 949, 656, 461, 597], [876, 815, 325, 757, 882, 549, 447, 908, 825, 321, 182, 354, 412, 57, 378, 0, 58, 40, 367, 164, 331, 744, 828, 949, 656, 461, 597], [], [], [], [], [], [], [], [], [815, 757, 549, 57, 367, 744, 828, 66, 949, 656], [815, 757, 549, 57, 367, 744, 828, 66, 949, 656], [815, 757, 549, 57, 367, 744, 828, 66, 949, 656], [815, 757, 549, 57, 367, 744, 828, 66, 949, 656], [815, 757, 549, 57, 367, 744, 828, 66, 949, 656], [], [], [876, 100, 815, 310, 325, 757, 882, 549, 447, 110, 908, 825, 321, 182, 445, 592, 354, 412, 57, 378, 0, 58, 633, 40, 367, 164, 331, 744, 81, 377, 828, 66, 67, 949, 656, 461, 790, 597, 740], [876, 100, 815, 310, 325, 757, 882, 549, 447, 110, 908, 825, 321, 182, 445, 592, 354, 412, 57, 378, 0, 58, 633, 40, 367, 164, 331, 744, 81, 377, 828, 66, 67, 949, 656, 461, 790, 597, 740], [876, 100, 815, 310, 325, 757, 882, 549, 447, 110, 908, 825, 321, 182, 445, 592, 354, 412, 57, 378, 0, 58, 633, 40, 367, 164, 331, 744, 81, 377, 828, 66, 67, 949, 656, 461, 790, 597, 740], [], [], [908, 164, 949, 597], [], [908, 164, 949, 597], [], [], [], [], [], []]
