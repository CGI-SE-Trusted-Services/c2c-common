var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":123,"id":4581,"methods":[{"el":48,"sc":2,"sl":45},{"el":55,"sc":2,"sl":53},{"el":66,"sc":2,"sl":60},{"el":79,"sc":2,"sl":73},{"el":87,"sc":2,"sl":85},{"el":95,"sc":2,"sl":93},{"el":108,"sc":2,"sl":103},{"el":113,"sc":2,"sl":110},{"el":121,"sc":2,"sl":115}],"name":"Ieee1609Dot2Data","sl":33}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_239":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_249":{"methods":[{"sl":45},{"sl":60},{"sl":73},{"sl":85},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":86},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_257":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_259":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_286":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that preshared key encryption works correctly","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_304":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that symmetric key envelope encryption works correctly","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_332":{"methods":[{"sl":53},{"sl":60},{"sl":73},{"sl":85},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that constructor throws Exception if content doesn't fullfill requirements","pass":true,"statements":[{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":86},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_35":{"methods":[{"sl":45},{"sl":53},{"sl":60},{"sl":73},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_381":{"methods":[{"sl":60},{"sl":85},{"sl":93},{"sl":110},{"sl":115}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":86},{"sl":94},{"sl":111},{"sl":112},{"sl":117}]},"test_385":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_406":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_413":{"methods":[{"sl":45},{"sl":53},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_449":{"methods":[{"sl":60},{"sl":110}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":111},{"sl":112}]},"test_470":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_482":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_485":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_542":{"methods":[{"sl":60},{"sl":85},{"sl":93},{"sl":110}],"name":"Verify toString","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":86},{"sl":94},{"sl":111},{"sl":112}]},"test_547":{"methods":[{"sl":45},{"sl":60},{"sl":103},{"sl":110}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_550":{"methods":[{"sl":45},{"sl":110}],"name":"Verify toString","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_569":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_608":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_616":{"methods":[{"sl":45},{"sl":73},{"sl":85},{"sl":93},{"sl":103},{"sl":110},{"sl":115}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":86},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112},{"sl":117}]},"test_617":{"methods":[{"sl":45},{"sl":85},{"sl":93},{"sl":110},{"sl":115}],"name":"Verify toString","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":86},{"sl":94},{"sl":111},{"sl":112},{"sl":117}]},"test_625":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_658":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_686":{"methods":[{"sl":45},{"sl":60},{"sl":85},{"sl":93},{"sl":110}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":86},{"sl":94},{"sl":111},{"sl":112}]},"test_688":{"methods":[{"sl":45},{"sl":53},{"sl":60},{"sl":85},{"sl":93},{"sl":110}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":86},{"sl":94},{"sl":111},{"sl":112}]},"test_693":{"methods":[{"sl":45},{"sl":53},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_727":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_746":{"methods":[{"sl":45},{"sl":110}],"name":"Verify toString","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_75":{"methods":[{"sl":45},{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_774":{"methods":[{"sl":45},{"sl":53},{"sl":60},{"sl":73},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_817":{"methods":[{"sl":53},{"sl":60},{"sl":85},{"sl":93},{"sl":110},{"sl":115}],"name":"Verify toString","pass":true,"statements":[{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":86},{"sl":94},{"sl":111},{"sl":112},{"sl":117}]},"test_910":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_928":{"methods":[{"sl":53},{"sl":60},{"sl":73},{"sl":85},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that constructor throws Exception if content doesn't fullfill requirements","pass":true,"statements":[{"sl":54},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":86},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_942":{"methods":[{"sl":45},{"sl":60},{"sl":73},{"sl":85},{"sl":93},{"sl":103},{"sl":110}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":74},{"sl":75},{"sl":77},{"sl":78},{"sl":86},{"sl":94},{"sl":104},{"sl":105},{"sl":106},{"sl":107},{"sl":111},{"sl":112}]},"test_946":{"methods":[{"sl":60},{"sl":93},{"sl":110}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":61},{"sl":62},{"sl":63},{"sl":64},{"sl":94},{"sl":111},{"sl":112}]},"test_955":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]},"test_974":{"methods":[{"sl":45},{"sl":110}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":46},{"sl":47},{"sl":111},{"sl":112}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [35, 686, 658, 547, 974, 550, 617, 746, 688, 385, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 910, 485, 955, 482], [35, 686, 658, 547, 974, 550, 617, 746, 688, 385, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 910, 485, 955, 482], [35, 686, 658, 547, 974, 550, 617, 746, 688, 385, 942, 249, 413, 470, 406, 75, 774, 257, 727, 608, 693, 616, 259, 910, 485, 955, 482], [], [], [], [], [], [35, 817, 332, 688, 413, 928, 774, 693], [35, 817, 332, 688, 413, 928, 774, 693], [], [], [], [], [], [946, 35, 625, 686, 547, 817, 332, 239, 688, 569, 542, 385, 449, 942, 249, 286, 413, 304, 928, 406, 75, 774, 608, 381, 693, 485, 482], [946, 35, 625, 686, 547, 817, 332, 239, 688, 569, 542, 385, 449, 942, 249, 286, 413, 304, 928, 406, 75, 774, 608, 381, 693, 485, 482], [946, 35, 625, 686, 547, 817, 332, 239, 688, 569, 542, 385, 449, 942, 249, 286, 413, 304, 928, 406, 75, 774, 608, 381, 693, 485, 482], [946, 35, 625, 686, 547, 817, 332, 239, 688, 569, 542, 385, 449, 942, 249, 286, 413, 304, 928, 406, 75, 774, 608, 381, 693, 485, 482], [946, 35, 625, 686, 547, 817, 332, 239, 688, 569, 542, 385, 449, 942, 249, 286, 413, 304, 928, 406, 75, 774, 608, 381, 693, 485, 482], [], [], [], [], [], [], [], [], [35, 332, 942, 249, 928, 774, 616], [35, 332, 942, 249, 928, 774, 616], [35, 332, 942, 249, 928, 774, 616], [], [35, 332, 942, 249, 928, 774, 616], [35, 332, 942, 249, 928, 774, 616], [], [], [], [], [], [], [686, 817, 332, 617, 688, 542, 942, 249, 928, 381, 616], [686, 817, 332, 617, 688, 542, 942, 249, 928, 381, 616], [], [], [], [], [], [], [946, 35, 625, 686, 817, 332, 239, 617, 688, 569, 542, 385, 942, 249, 286, 413, 304, 928, 406, 75, 774, 608, 381, 693, 616, 485, 482], [946, 35, 625, 686, 817, 332, 239, 617, 688, 569, 542, 385, 942, 249, 286, 413, 304, 928, 406, 75, 774, 608, 381, 693, 616, 485, 482], [], [], [], [], [], [], [], [], [35, 547, 332, 942, 249, 928, 774, 608, 616, 485], [35, 547, 332, 942, 249, 928, 774, 608, 616, 485], [35, 547, 332, 942, 249, 928, 774, 608, 616, 485], [35, 547, 332, 942, 249, 928, 774, 608, 616, 485], [35, 547, 332, 942, 249, 928, 774, 608, 616, 485], [], [], [946, 35, 625, 686, 658, 547, 817, 332, 974, 239, 550, 617, 746, 688, 569, 542, 385, 449, 942, 249, 286, 413, 304, 928, 470, 406, 75, 774, 257, 727, 608, 381, 693, 616, 259, 910, 485, 955, 482], [946, 35, 625, 686, 658, 547, 817, 332, 974, 239, 550, 617, 746, 688, 569, 542, 385, 449, 942, 249, 286, 413, 304, 928, 470, 406, 75, 774, 257, 727, 608, 381, 693, 616, 259, 910, 485, 955, 482], [946, 35, 625, 686, 658, 547, 817, 332, 974, 239, 550, 617, 746, 688, 569, 542, 385, 449, 942, 249, 286, 413, 304, 928, 470, 406, 75, 774, 257, 727, 608, 381, 693, 616, 259, 910, 485, 955, 482], [], [], [817, 617, 381, 616], [], [817, 617, 381, 616], [], [], [], [], [], []]
