var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":115,"id":4710,"methods":[{"el":47,"sc":2,"sl":44},{"el":60,"sc":2,"sl":54},{"el":71,"sc":2,"sl":65},{"el":79,"sc":2,"sl":77},{"el":87,"sc":2,"sl":85},{"el":100,"sc":2,"sl":95},{"el":105,"sc":2,"sl":102},{"el":113,"sc":2,"sl":107}],"name":"ToBeSignedData","sl":33}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_249":{"methods":[{"sl":44},{"sl":77},{"sl":85},{"sl":102}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":78},{"sl":86},{"sl":103},{"sl":104}]},"test_257":{"methods":[{"sl":44},{"sl":102}],"name":"Verify that IllegalArgumentException is thrown if both data and exthash is null","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":103},{"sl":104}]},"test_259":{"methods":[{"sl":54},{"sl":65},{"sl":95},{"sl":102}],"name":"Verify that encode and decode to byte array is correct","pass":true,"statements":[{"sl":55},{"sl":56},{"sl":58},{"sl":59},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_35":{"methods":[{"sl":44},{"sl":65},{"sl":77},{"sl":95},{"sl":102}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_381":{"methods":[{"sl":77},{"sl":85},{"sl":107}],"name":"Verify toString","pass":true,"statements":[{"sl":78},{"sl":86},{"sl":109}]},"test_385":{"methods":[{"sl":44},{"sl":65},{"sl":77},{"sl":85},{"sl":95},{"sl":102}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":86},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_406":{"methods":[{"sl":44},{"sl":65},{"sl":77},{"sl":85},{"sl":95},{"sl":102}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":86},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_413":{"methods":[{"sl":44},{"sl":65},{"sl":77},{"sl":85},{"sl":102}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":86},{"sl":103},{"sl":104}]},"test_470":{"methods":[{"sl":44},{"sl":65},{"sl":77},{"sl":85},{"sl":102}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":86},{"sl":103},{"sl":104}]},"test_482":{"methods":[{"sl":44},{"sl":65},{"sl":77},{"sl":85},{"sl":95},{"sl":102}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":86},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_485":{"methods":[{"sl":44},{"sl":65},{"sl":85},{"sl":95},{"sl":102}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":86},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_542":{"methods":[{"sl":77},{"sl":85},{"sl":107}],"name":"Verify toString","pass":true,"statements":[{"sl":78},{"sl":86},{"sl":109}]},"test_547":{"methods":[{"sl":44},{"sl":65},{"sl":95},{"sl":102}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_550":{"methods":[{"sl":65},{"sl":77},{"sl":85},{"sl":102},{"sl":107}],"name":"Verify toString","pass":true,"statements":[{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":86},{"sl":103},{"sl":104},{"sl":109}]},"test_563":{"methods":[{"sl":77},{"sl":85},{"sl":107}],"name":"Verify toString","pass":true,"statements":[{"sl":78},{"sl":86},{"sl":109}]},"test_608":{"methods":[{"sl":44},{"sl":65},{"sl":85},{"sl":95},{"sl":102}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":86},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_616":{"methods":[{"sl":44},{"sl":77},{"sl":85},{"sl":102},{"sl":107}],"name":"Verify that reference structure from D.5.2.2 of P1909.2_D12 is parsed and regenerated correctly","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":78},{"sl":86},{"sl":103},{"sl":104},{"sl":109}]},"test_658":{"methods":[{"sl":65},{"sl":102}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all required fields are set","pass":true,"statements":[{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":103},{"sl":104}]},"test_686":{"methods":[{"sl":44},{"sl":65},{"sl":77},{"sl":85},{"sl":95},{"sl":102}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":86},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_693":{"methods":[{"sl":44},{"sl":65},{"sl":77},{"sl":85},{"sl":102}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":86},{"sl":103},{"sl":104}]},"test_746":{"methods":[{"sl":44},{"sl":77},{"sl":85},{"sl":102},{"sl":107}],"name":"Verify toString","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":78},{"sl":86},{"sl":103},{"sl":104},{"sl":109}]},"test_75":{"methods":[{"sl":44},{"sl":65},{"sl":77},{"sl":85},{"sl":95},{"sl":102}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":86},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_774":{"methods":[{"sl":44},{"sl":65},{"sl":77},{"sl":95},{"sl":102}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":66},{"sl":67},{"sl":68},{"sl":69},{"sl":78},{"sl":96},{"sl":97},{"sl":98},{"sl":99},{"sl":103},{"sl":104}]},"test_942":{"methods":[{"sl":44},{"sl":77},{"sl":85},{"sl":102}],"name":"Verify that constructor contains Ieee1609Dot2Data  if content  fullfill requirements","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":78},{"sl":86},{"sl":103},{"sl":104}]},"test_955":{"methods":[{"sl":44},{"sl":102}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type signedData","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":103},{"sl":104}]},"test_974":{"methods":[{"sl":44},{"sl":102}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":45},{"sl":46},{"sl":103},{"sl":104}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [35, 547, 385, 942, 249, 470, 406, 75, 482, 686, 974, 746, 413, 774, 257, 608, 693, 616, 485, 955], [35, 547, 385, 942, 249, 470, 406, 75, 482, 686, 974, 746, 413, 774, 257, 608, 693, 616, 485, 955], [35, 547, 385, 942, 249, 470, 406, 75, 482, 686, 974, 746, 413, 774, 257, 608, 693, 616, 485, 955], [], [], [], [], [], [], [], [259], [259], [259], [], [259], [259], [], [], [], [], [], [35, 658, 547, 550, 385, 470, 406, 75, 482, 686, 413, 774, 608, 693, 259, 485], [35, 658, 547, 550, 385, 470, 406, 75, 482, 686, 413, 774, 608, 693, 259, 485], [35, 658, 547, 550, 385, 470, 406, 75, 482, 686, 413, 774, 608, 693, 259, 485], [35, 658, 547, 550, 385, 470, 406, 75, 482, 686, 413, 774, 608, 693, 259, 485], [35, 658, 547, 550, 385, 470, 406, 75, 482, 686, 413, 774, 608, 693, 259, 485], [], [], [], [], [], [], [], [35, 550, 385, 942, 249, 470, 406, 75, 381, 482, 686, 746, 542, 413, 774, 563, 693, 616], [35, 550, 385, 942, 249, 470, 406, 75, 381, 482, 686, 746, 542, 413, 774, 563, 693, 616], [], [], [], [], [], [], [550, 385, 942, 249, 470, 406, 75, 381, 482, 686, 746, 542, 413, 608, 563, 693, 616, 485], [550, 385, 942, 249, 470, 406, 75, 381, 482, 686, 746, 542, 413, 608, 563, 693, 616, 485], [], [], [], [], [], [], [], [], [35, 547, 385, 406, 75, 482, 686, 774, 608, 259, 485], [35, 547, 385, 406, 75, 482, 686, 774, 608, 259, 485], [35, 547, 385, 406, 75, 482, 686, 774, 608, 259, 485], [35, 547, 385, 406, 75, 482, 686, 774, 608, 259, 485], [35, 547, 385, 406, 75, 482, 686, 774, 608, 259, 485], [], [], [35, 658, 547, 550, 385, 942, 249, 470, 406, 75, 482, 686, 974, 746, 413, 774, 257, 608, 693, 616, 259, 485, 955], [35, 658, 547, 550, 385, 942, 249, 470, 406, 75, 482, 686, 974, 746, 413, 774, 257, 608, 693, 616, 259, 485, 955], [35, 658, 547, 550, 385, 942, 249, 470, 406, 75, 482, 686, 974, 746, 413, 774, 257, 608, 693, 616, 259, 485, 955], [], [], [550, 381, 746, 542, 563, 616], [], [550, 381, 746, 542, 563, 616], [], [], [], [], [], []]
