var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":83,"id":4426,"methods":[{"el":53,"sc":2,"sl":51},{"el":62,"sc":2,"sl":59},{"el":69,"sc":2,"sl":67},{"el":81,"sc":2,"sl":71}],"name":"Ieee1609dot2Peer2PeerPDUContent","sl":27},{"el":46,"id":4426,"methods":[{"el":45,"sc":3,"sl":36}],"name":"Ieee1609dot2Peer2PeerPDUContent.Ieee1609dot2Peer2PeerPDUContentChoices","sl":32}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_136":{"methods":[{"sl":36},{"sl":59},{"sl":67}],"name":"Verify that Ieee1609dot2Peer2PeerPDUContent is correctly encoded for type caCerts","pass":true,"statements":[{"sl":38},{"sl":39},{"sl":40},{"sl":60},{"sl":61},{"sl":68}]},"test_326":{"methods":[{"sl":59},{"sl":67},{"sl":71}],"name":"Verify toString","pass":true,"statements":[{"sl":60},{"sl":61},{"sl":68},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":78}]},"test_521":{"methods":[{"sl":36},{"sl":59},{"sl":67}],"name":"Verify that Ieee1609dot2Peer2PeerPDUContent is correctly encoded for type crl","pass":true,"statements":[{"sl":38},{"sl":41},{"sl":43},{"sl":60},{"sl":61},{"sl":68}]},"test_525":{"methods":[{"sl":59}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":60},{"sl":61}]},"test_646":{"methods":[{"sl":36},{"sl":59}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":38},{"sl":41},{"sl":43},{"sl":60},{"sl":61}]},"test_756":{"methods":[{"sl":67},{"sl":71}],"name":"Verify toString()","pass":true,"statements":[{"sl":68},{"sl":73},{"sl":74},{"sl":75},{"sl":76},{"sl":78}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines
