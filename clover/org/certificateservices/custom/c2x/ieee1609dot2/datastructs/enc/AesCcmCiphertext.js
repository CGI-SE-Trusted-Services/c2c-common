var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":93,"id":4233,"methods":[{"el":46,"sc":2,"sl":43},{"el":63,"sc":2,"sl":51},{"el":71,"sc":2,"sl":69},{"el":79,"sc":2,"sl":77},{"el":86,"sc":2,"sl":83},{"el":91,"sc":2,"sl":88}],"name":"AesCcmCiphertext","sl":32}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_144":{"methods":[{"sl":51},{"sl":83}],"name":"Verify that IllegalArgumentException is thrown when encoding if not all fields are set","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":55},{"sl":57},{"sl":58},{"sl":84},{"sl":85}]},"test_237":{"methods":[{"sl":51},{"sl":69},{"sl":77},{"sl":83},{"sl":88}],"name":"Verify toString","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85},{"sl":90}]},"test_239":{"methods":[{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]},"test_250":{"methods":[{"sl":69},{"sl":77},{"sl":88}],"name":"Verify SymmetricCiphertext","pass":true,"statements":[{"sl":70},{"sl":78},{"sl":90}]},"test_286":{"methods":[{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that preshared key encryption works correctly","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]},"test_289":{"methods":[{"sl":69},{"sl":77},{"sl":88}],"name":"Verify toString","pass":true,"statements":[{"sl":70},{"sl":78},{"sl":90}]},"test_304":{"methods":[{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that symmetric key envelope encryption works correctly","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]},"test_319":{"methods":[{"sl":43},{"sl":83}],"name":"Verify that RecipientInfo is correctly encoded for type symmRecipInfo","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":84},{"sl":85}]},"test_329":{"methods":[{"sl":43},{"sl":83}],"name":"Verify that SymmetricCiphertext is correctly encoded for type aes128ccm","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":84},{"sl":85}]},"test_35":{"methods":[{"sl":43},{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]},"test_396":{"methods":[{"sl":43},{"sl":83}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":84},{"sl":85}]},"test_413":{"methods":[{"sl":51},{"sl":83}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":84},{"sl":85}]},"test_460":{"methods":[{"sl":43},{"sl":83}],"name":"Verify that  Ieee1609Dot2Content is correctly encoded for type encryptedData","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":84},{"sl":85}]},"test_485":{"methods":[{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]},"test_56":{"methods":[{"sl":43},{"sl":83}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":84},{"sl":85}]},"test_569":{"methods":[{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]},"test_608":{"methods":[{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]},"test_625":{"methods":[{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]},"test_693":{"methods":[{"sl":51},{"sl":83}],"name":"Verify that fullfillsRequirements verifies all required fields","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":84},{"sl":85}]},"test_731":{"methods":[{"sl":43},{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that constructor and getters are correct and it is correctly encoded","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]},"test_774":{"methods":[{"sl":43},{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":44},{"sl":45},{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]},"test_932":{"methods":[{"sl":69},{"sl":77},{"sl":88}],"name":"Verify toString","pass":true,"statements":[{"sl":70},{"sl":78},{"sl":90}]},"test_943":{"methods":[{"sl":69},{"sl":77},{"sl":88}],"name":"Verify EncryptedDataEncryptionKey","pass":true,"statements":[{"sl":70},{"sl":78},{"sl":90}]},"test_946":{"methods":[{"sl":51},{"sl":69},{"sl":77},{"sl":83}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":52},{"sl":53},{"sl":54},{"sl":57},{"sl":60},{"sl":61},{"sl":70},{"sl":78},{"sl":84},{"sl":85}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [35, 319, 460, 396, 731, 56, 774, 329], [35, 319, 460, 396, 731, 56, 774, 329], [35, 319, 460, 396, 731, 56, 774, 329], [], [], [], [], [], [946, 35, 625, 239, 569, 286, 731, 413, 304, 774, 608, 237, 144, 693, 485], [946, 35, 625, 239, 569, 286, 731, 413, 304, 774, 608, 237, 144, 693, 485], [946, 35, 625, 239, 569, 286, 731, 413, 304, 774, 608, 237, 144, 693, 485], [946, 35, 625, 239, 569, 286, 731, 413, 304, 774, 608, 237, 144, 693, 485], [144], [], [946, 35, 625, 239, 569, 286, 731, 413, 304, 774, 608, 237, 144, 693, 485], [144], [], [946, 35, 625, 239, 569, 286, 731, 413, 304, 774, 608, 237, 693, 485], [946, 35, 625, 239, 569, 286, 731, 413, 304, 774, 608, 237, 693, 485], [], [], [], [], [], [], [], [946, 35, 625, 932, 239, 250, 569, 286, 731, 304, 774, 608, 237, 943, 289, 485], [946, 35, 625, 932, 239, 250, 569, 286, 731, 304, 774, 608, 237, 943, 289, 485], [], [], [], [], [], [], [946, 35, 625, 932, 239, 250, 569, 286, 731, 304, 774, 608, 237, 943, 289, 485], [946, 35, 625, 932, 239, 250, 569, 286, 731, 304, 774, 608, 237, 943, 289, 485], [], [], [], [], [946, 35, 625, 319, 239, 569, 460, 396, 286, 731, 413, 304, 56, 774, 329, 608, 237, 144, 693, 485], [946, 35, 625, 319, 239, 569, 460, 396, 286, 731, 413, 304, 56, 774, 329, 608, 237, 144, 693, 485], [946, 35, 625, 319, 239, 569, 460, 396, 286, 731, 413, 304, 56, 774, 329, 608, 237, 144, 693, 485], [], [], [932, 250, 237, 943, 289], [], [932, 250, 237, 943, 289], [], [], []]
