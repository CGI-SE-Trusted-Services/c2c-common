var clover = new Object();

// JSON: {classes : [{name, id, sl, el,  methods : [{sl, el}, ...]}, ...]}
clover.pageData = {"classes":[{"el":113,"id":1226,"methods":[{"el":84,"sc":2,"sl":77},{"el":91,"sc":2,"sl":89},{"el":98,"sc":2,"sl":96},{"el":105,"sc":2,"sl":103},{"el":112,"sc":2,"sl":110}],"name":"Algorithm","sl":23},{"el":51,"id":1226,"methods":[{"el":32,"sc":3,"sl":29},{"el":42,"sc":3,"sl":40},{"el":50,"sc":3,"sl":48}],"name":"Algorithm.Symmetric","sl":25},{"el":60,"id":1233,"methods":[{"el":59,"sc":3,"sl":57}],"name":"Algorithm.Signature","sl":53},{"el":64,"id":1235,"methods":[],"name":"Algorithm.Encryption","sl":62},{"el":69,"id":1235,"methods":[],"name":"Algorithm.Hash","sl":66}]}

// JSON: {test_ID : {"methods": [ID1, ID2, ID3...], "name" : "testXXX() void"}, ...};
clover.testTargets = {"test_0":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Authorization Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_128":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type SIGNER_CERTIFICATE","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_130":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that ITS encodeEccPoint encodes ec public keys properly for algorithm: ecies_nistp256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_152":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that getPublicVerificationAlgorithm returns correct PublicVerificationKeyChoice ecdsaBrainpoolP256r1 for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_159":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Signed CAM Unrecognized Certificates Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_163":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_166":{"methods":[{"sl":77},{"sl":89},{"sl":96},{"sl":103},{"sl":110}],"name":"Verify correct algorithms indicator is returned.","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":104},{"sl":111}]},"test_214":{"methods":[{"sl":77},{"sl":89},{"sl":96},{"sl":103},{"sl":110}],"name":"Verify correct algorithms indicator is returned for ecdsaNistP256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":104},{"sl":111}]},"test_217":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that decodeEccPoint decodes the ieee EccPoints correctly for public key scheme: ecdsaNistP256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_226":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_239":{"methods":[{"sl":40},{"sl":48},{"sl":57},{"sl":77},{"sl":89},{"sl":96},{"sl":110}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":49},{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":111}]},"test_248":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that getSignedDataStore returns a populate map of all certificate if SignerIdentifier is certificate","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_253":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Authorization Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_261":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that return first certificates public key of complete chain consists of explicit certificates","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_278":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_28":{"methods":[{"sl":57},{"sl":77},{"sl":89},{"sl":96},{"sl":110}],"name":"Verify that signAndEncryptSecureMessage and verifyAndDecryptSecuredMessage both encrypts and signs properly","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":111}]},"test_286":{"methods":[{"sl":48},{"sl":77},{"sl":89},{"sl":110}],"name":"Verify that preshared key encryption works correctly","pass":true,"statements":[{"sl":49},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":111}]},"test_292":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify SignSecuredMessage using signer info type: certificate generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_304":{"methods":[{"sl":48},{"sl":77},{"sl":89},{"sl":110}],"name":"Verify that symmetric key envelope encryption works correctly","pass":true,"statements":[{"sl":49},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":111}]},"test_312":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that findFromStores finds certificate from stores","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_315":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Authorization Ticket with a digest as signer info","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_32":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that ieee encodeEccPoint encodes ec public keys properly for algorithm: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_324":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that getSignerId returns the included HashedId8 if type is digest","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_35":{"methods":[{"sl":40},{"sl":48},{"sl":57},{"sl":77},{"sl":89},{"sl":96},{"sl":110}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":49},{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":111}]},"test_353":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify signature of reference secure messages from interoperabiltity site at https://werkzeug.dcaiti.tu-berlin.de/etsi/ts103097/","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_354":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Root CA is generated correctly for explicit certificate (only type supported) for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_359":{"methods":[{"sl":77},{"sl":89},{"sl":96}],"name":"verify that encryptSecureMessage and decryptSecureMessage encrypts and decrypts correctly","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97}]},"test_360":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_379":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Enrollment Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_385":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_406":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with signed data is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_421":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that getECCurve returns correct curve","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_426":{"methods":[{"sl":77},{"sl":110}],"name":"Verify digest generates a correct digest for algorithm: sha256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":111}]},"test_450":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Enrollment Credential v1 for interoperability testing","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_455":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_465":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that getSignerIdentifier returns first signing certificate from a chain for type CERT_CHAIN","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_482":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_485":{"methods":[{"sl":40},{"sl":48},{"sl":57},{"sl":77},{"sl":89},{"sl":96},{"sl":110}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":49},{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":111}]},"test_497":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that decodeEccPoint decodes the EccPoints correctly for public key scheme: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_498":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that return first certificates public key of enroll cert only consists of implicit certificates","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_499":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that return first certificates public key of enroll cert and enroll ca consists of implicit certificates","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_50":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that convertECPublicKeyToBCECPublicKey supports both BC and SUN Public keys","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_501":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate RootCA with Encryption Key and Geographic region and verify that all attributes are set.","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_523":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_524":{"methods":[{"sl":77},{"sl":96}],"name":"verify that generateKeyPair generates new keypairs for algorithm: ecdsaNistP256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_530":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Enrollment Credential with a certificate as signer info","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_532":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that getSignedDataStore returns an empty map if SignerIdentifier is digest","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_535":{"methods":[{"sl":77},{"sl":89},{"sl":96},{"sl":103},{"sl":110}],"name":"Verify correct algorithms indicator is returned for ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":104},{"sl":111}]},"test_540":{"methods":[{"sl":77},{"sl":89},{"sl":96},{"sl":103},{"sl":110}],"name":"Verify correct algorithms indicator is returned for ecdsaNistP256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":104},{"sl":111}]},"test_545":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that eCEISEncryptSymmetricKey and eCEISDecryptSymmetricKey encrypts and decrypts symmetric key correcly.","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_547":{"methods":[{"sl":57},{"sl":77},{"sl":89},{"sl":96},{"sl":110}],"name":"Verify that buildRecieverStore generates a correct HashedId8 to Receiver Map","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":111}]},"test_567":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify getCertID generates a correct HashedId8","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_569":{"methods":[{"sl":40},{"sl":48},{"sl":57},{"sl":77},{"sl":89},{"sl":96},{"sl":110}],"name":"Verify that encryption works with certificate public encryption key for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":49},{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":111}]},"test_573":{"methods":[{"sl":77},{"sl":89},{"sl":96},{"sl":103},{"sl":110}],"name":"Verify correct algorithms indicator is returned.","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":104},{"sl":111}]},"test_587":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_608":{"methods":[{"sl":40},{"sl":48},{"sl":57},{"sl":77},{"sl":89},{"sl":96},{"sl":110}],"name":"Verify that encryption works with secured data public encryption key for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":49},{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":111}]},"test_609":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_610":{"methods":[{"sl":77},{"sl":96}],"name":"verify that generateKeyPair generates new keypairs for algorithm: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_62":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_625":{"methods":[{"sl":40},{"sl":48},{"sl":57},{"sl":77},{"sl":89},{"sl":96},{"sl":110}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":49},{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":111}]},"test_627":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that genHeaderInfo generates correct header info","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_645":{"methods":[{"sl":77},{"sl":89}],"name":"Verify that symmetric encrypt and decrypt works for aes_128_ccm","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90}]},"test_650":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that buildCertStore() generates certificate store maps correctly and buildChain generates correct certificate chain","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_66":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Authorization CA v1 for interoperability testing","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_665":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_669":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Authorization Ticket and Signed Secured Message v1 for interoperability testing","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_679":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate RootCA without Encryption Key and Geographic region and verify that all other attributes are set.","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_682":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Enrollment Credential with a digest as signer info","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_686":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that signed SecuredCrl with signed data is generated correctly","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_689":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Root CA is generated correctly for explicit certificate (only type supported) for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_700":{"methods":[{"sl":77},{"sl":89},{"sl":96},{"sl":103},{"sl":110}],"name":"Verify correct algorithms indicator is returned for ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":104},{"sl":111}]},"test_707":{"methods":[{"sl":77},{"sl":96}],"name":"verify that generateKeyPair generates new keypairs for algorithm: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_709":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Signed CAM Message with and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_715":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that getPublicVerificationAlgorithm returns correct PublicVerificationKeyChoice ecdsaBrainpoolP256r1 for alg: eciesBrainpoolP256r1","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_729":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Long term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_735":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly for implicit CA certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_74":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that getSignedDataStore returns the HashedId8 of the first certificate if type is certificate","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_749":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaNistP256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_75":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that signed Ieee1609Dot2Data with hashed reference is generated correctly for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_763":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that ITS encodeEccPoint encodes ec public keys properly for algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_769":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_774":{"methods":[{"sl":40},{"sl":48},{"sl":57},{"sl":77},{"sl":89},{"sl":96},{"sl":110}],"name":"Verify that signAndEncryptData and decryptAndVerifySignedData generates encrypted and signed data structures for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":41},{"sl":49},{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":111}]},"test_79":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Enrollment Cert is generated correctly of implicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_801":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that decodeEccPoint decodes the ieee EccPoints correctly for public key scheme: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_808":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Authorization Ticket with a certificate as signer info","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_821":{"methods":[{"sl":77},{"sl":89},{"sl":96},{"sl":103},{"sl":110}],"name":"Verify correct algorithms indicator is returned for ecies_nistp256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":104},{"sl":111}]},"test_829":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that getSignerIdentifier returns correct hash value for type HASH_ONLY","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_846":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify SignSecuredMessage using signer info type: certificate_digest_with_ecdsap256 generates a valid signature and that verifySecuredMessage can verify it.","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_847":{"methods":[{"sl":77},{"sl":89},{"sl":96},{"sl":103},{"sl":110}],"name":"Verify correct algorithms indicator is returned.","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":104},{"sl":111}]},"test_868":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Enrollment Credential with a certificate chain as signer info","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_874":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that getPublicVerificationAlgorithm returns correct PublicVerificationKeyChoice ecdsaNistP256 for alg: ecdsaNistP256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_879":{"methods":[{"sl":77},{"sl":96}],"name":"verify that generateKeyPair generates new keypairs for algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_901":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Short term CA is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_915":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Signed DENM Message and verify that all required fields are set and signature verifies.","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_918":{"methods":[{"sl":77},{"sl":89},{"sl":96},{"sl":103},{"sl":110}],"name":"Verify correct algorithms indicator is returned for ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":104},{"sl":111}]},"test_924":{"methods":[{"sl":29},{"sl":77},{"sl":96}],"name":"verify that generateKeyPair generates new keypairs for algorithm: ecies_nistp256","pass":true,"statements":[{"sl":30},{"sl":31},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_925":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that ieee encodeEccPoint encodes ec public keys properly for algorithm: ecdsaNistP256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_926":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that decodeEccPoint decodes the EccPoints correctly for public key scheme: ecies_nistp256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_933":{"methods":[{"sl":77},{"sl":96}],"name":"verify that generateKeyPair generates new keypairs for algorithm: ecdsaNistP256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_938":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that getECCurve getECParameterSpec returns curve with name: P-256 for public key algorithm: ecies_nistp256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_946":{"methods":[{"sl":40},{"sl":48},{"sl":57},{"sl":77},{"sl":89},{"sl":96},{"sl":110}],"name":"Verify that encryption works with RekReceipient for alg: ecdsaNistP256","pass":true,"statements":[{"sl":41},{"sl":49},{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":90},{"sl":97},{"sl":111}]},"test_951":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that getPublicVerificationAlgorithm returns correct PublicVerificationKeyChoice ecdsaNistP256 for alg: eciesNistP256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]},"test_959":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Generate Authorization Authority and verify that it is signed by the Root CA","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_960":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Verify that Ieee1609Dot2 Authorization Cert is generated correctly of explicit certificate for alg: ecdsaBrainpoolP256r1","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_963":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Test to generate ITS ECDSA Signature and then verify the signature for algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_965":{"methods":[{"sl":57},{"sl":77},{"sl":96},{"sl":110}],"name":"Test to verifyCertificate","pass":true,"statements":[{"sl":58},{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97},{"sl":111}]},"test_983":{"methods":[{"sl":77},{"sl":96}],"name":"Verify that getECCurve getECParameterSpec returns curve with name: P-256 for public key algorithm: ecdsa_nistp256_with_sha256","pass":true,"statements":[{"sl":79},{"sl":80},{"sl":81},{"sl":82},{"sl":83},{"sl":97}]}}

// JSON: { lines : [{tests : [testid1, testid2, testid3, ...]}, ...]};
clover.srcFileLines = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [924], [924], [924], [], [], [], [], [], [], [], [], [625, 239, 774, 485, 35, 946, 569, 608], [625, 239, 774, 485, 35, 946, 569, 608], [], [], [], [], [], [], [625, 239, 304, 286, 774, 485, 35, 946, 569, 608], [625, 239, 304, 286, 774, 485, 35, 946, 569, 608], [], [], [], [], [], [], [], [868, 625, 547, 587, 665, 239, 808, 406, 769, 74, 960, 128, 226, 465, 482, 353, 686, 354, 66, 455, 523, 669, 689, 709, 846, 774, 749, 163, 62, 650, 28, 965, 679, 498, 485, 261, 35, 901, 735, 385, 450, 532, 79, 324, 292, 312, 963, 75, 360, 253, 499, 501, 946, 915, 729, 567, 569, 379, 829, 248, 682, 278, 608, 530, 159, 0, 315, 959, 609], [868, 625, 547, 587, 665, 239, 808, 406, 769, 74, 960, 128, 226, 465, 482, 353, 686, 354, 66, 455, 523, 669, 689, 709, 846, 774, 749, 163, 62, 650, 28, 965, 679, 498, 485, 261, 35, 901, 735, 385, 450, 532, 79, 324, 292, 312, 963, 75, 360, 253, 499, 501, 946, 915, 729, 567, 569, 379, 829, 248, 682, 278, 608, 530, 159, 0, 315, 959, 609], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [868, 625, 547, 587, 665, 926, 239, 32, 925, 808, 426, 304, 406, 700, 769, 74, 960, 128, 573, 226, 465, 217, 482, 353, 686, 214, 354, 66, 455, 524, 951, 847, 821, 938, 763, 523, 286, 669, 689, 709, 846, 933, 130, 774, 749, 163, 62, 650, 801, 28, 965, 359, 679, 498, 485, 152, 983, 261, 645, 35, 545, 901, 627, 715, 735, 385, 450, 532, 79, 535, 324, 292, 312, 879, 963, 50, 75, 360, 421, 253, 499, 501, 540, 946, 610, 918, 874, 915, 729, 567, 497, 569, 379, 829, 166, 248, 682, 278, 608, 530, 707, 159, 0, 315, 924, 959, 609], [], [868, 625, 547, 587, 665, 926, 239, 32, 925, 808, 426, 304, 406, 700, 769, 74, 960, 128, 573, 226, 465, 217, 482, 353, 686, 214, 354, 66, 455, 524, 951, 847, 821, 938, 763, 523, 286, 669, 689, 709, 846, 933, 130, 774, 749, 163, 62, 650, 801, 28, 965, 359, 679, 498, 485, 152, 983, 261, 645, 35, 545, 901, 627, 715, 735, 385, 450, 532, 79, 535, 324, 292, 312, 879, 963, 50, 75, 360, 421, 253, 499, 501, 540, 946, 610, 918, 874, 915, 729, 567, 497, 569, 379, 829, 166, 248, 682, 278, 608, 530, 707, 159, 0, 315, 924, 959, 609], [868, 625, 547, 587, 665, 926, 239, 32, 925, 808, 426, 304, 406, 700, 769, 74, 960, 128, 573, 226, 465, 217, 482, 353, 686, 214, 354, 66, 455, 524, 951, 847, 821, 938, 763, 523, 286, 669, 689, 709, 846, 933, 130, 774, 749, 163, 62, 650, 801, 28, 965, 359, 679, 498, 485, 152, 983, 261, 645, 35, 545, 901, 627, 715, 735, 385, 450, 532, 79, 535, 324, 292, 312, 879, 963, 50, 75, 360, 421, 253, 499, 501, 540, 946, 610, 918, 874, 915, 729, 567, 497, 569, 379, 829, 166, 248, 682, 278, 608, 530, 707, 159, 0, 315, 924, 959, 609], [868, 625, 547, 587, 665, 926, 239, 32, 925, 808, 426, 304, 406, 700, 769, 74, 960, 128, 573, 226, 465, 217, 482, 353, 686, 214, 354, 66, 455, 524, 951, 847, 821, 938, 763, 523, 286, 669, 689, 709, 846, 933, 130, 774, 749, 163, 62, 650, 801, 28, 965, 359, 679, 498, 485, 152, 983, 261, 645, 35, 545, 901, 627, 715, 735, 385, 450, 532, 79, 535, 324, 292, 312, 879, 963, 50, 75, 360, 421, 253, 499, 501, 540, 946, 610, 918, 874, 915, 729, 567, 497, 569, 379, 829, 166, 248, 682, 278, 608, 530, 707, 159, 0, 315, 924, 959, 609], [868, 625, 547, 587, 665, 926, 239, 32, 925, 808, 426, 304, 406, 700, 769, 74, 960, 128, 573, 226, 465, 217, 482, 353, 686, 214, 354, 66, 455, 524, 951, 847, 821, 938, 763, 523, 286, 669, 689, 709, 846, 933, 130, 774, 749, 163, 62, 650, 801, 28, 965, 359, 679, 498, 485, 152, 983, 261, 645, 35, 545, 901, 627, 715, 735, 385, 450, 532, 79, 535, 324, 292, 312, 879, 963, 50, 75, 360, 421, 253, 499, 501, 540, 946, 610, 918, 874, 915, 729, 567, 497, 569, 379, 829, 166, 248, 682, 278, 608, 530, 707, 159, 0, 315, 924, 959, 609], [868, 625, 547, 587, 665, 926, 239, 32, 925, 808, 426, 304, 406, 700, 769, 74, 960, 128, 573, 226, 465, 217, 482, 353, 686, 214, 354, 66, 455, 524, 951, 847, 821, 938, 763, 523, 286, 669, 689, 709, 846, 933, 130, 774, 749, 163, 62, 650, 801, 28, 965, 359, 679, 498, 485, 152, 983, 261, 645, 35, 545, 901, 627, 715, 735, 385, 450, 532, 79, 535, 324, 292, 312, 879, 963, 50, 75, 360, 421, 253, 499, 501, 540, 946, 610, 918, 874, 915, 729, 567, 497, 569, 379, 829, 166, 248, 682, 278, 608, 530, 707, 159, 0, 315, 924, 959, 609], [], [], [], [], [], [625, 547, 239, 304, 700, 573, 214, 847, 821, 286, 774, 28, 359, 485, 645, 35, 535, 540, 946, 918, 569, 166, 608], [625, 547, 239, 304, 700, 573, 214, 847, 821, 286, 774, 28, 359, 485, 645, 35, 535, 540, 946, 918, 569, 166, 608], [], [], [], [], [], [868, 625, 547, 587, 665, 926, 239, 32, 925, 808, 406, 700, 769, 74, 960, 128, 573, 226, 465, 217, 482, 353, 686, 214, 354, 66, 455, 524, 951, 847, 821, 938, 763, 523, 669, 689, 709, 846, 933, 130, 774, 749, 163, 62, 650, 801, 28, 965, 359, 679, 498, 485, 152, 983, 261, 35, 545, 901, 627, 715, 735, 385, 450, 532, 79, 535, 324, 292, 312, 879, 963, 50, 75, 360, 421, 253, 499, 501, 540, 946, 610, 918, 874, 915, 729, 567, 497, 569, 379, 829, 166, 248, 682, 278, 608, 530, 707, 159, 0, 315, 924, 959, 609], [868, 625, 547, 587, 665, 926, 239, 32, 925, 808, 406, 700, 769, 74, 960, 128, 573, 226, 465, 217, 482, 353, 686, 214, 354, 66, 455, 524, 951, 847, 821, 938, 763, 523, 669, 689, 709, 846, 933, 130, 774, 749, 163, 62, 650, 801, 28, 965, 359, 679, 498, 485, 152, 983, 261, 35, 545, 901, 627, 715, 735, 385, 450, 532, 79, 535, 324, 292, 312, 879, 963, 50, 75, 360, 421, 253, 499, 501, 540, 946, 610, 918, 874, 915, 729, 567, 497, 569, 379, 829, 166, 248, 682, 278, 608, 530, 707, 159, 0, 315, 924, 959, 609], [], [], [], [], [], [700, 573, 214, 847, 821, 535, 540, 918, 166], [700, 573, 214, 847, 821, 535, 540, 918, 166], [], [], [], [], [], [868, 625, 547, 587, 665, 239, 808, 426, 304, 406, 700, 769, 74, 960, 128, 573, 226, 465, 482, 353, 686, 214, 354, 66, 455, 847, 821, 523, 286, 669, 689, 709, 846, 774, 749, 163, 62, 650, 28, 965, 679, 498, 485, 261, 35, 901, 735, 385, 450, 532, 79, 535, 324, 292, 312, 963, 75, 360, 253, 499, 501, 540, 946, 918, 915, 729, 567, 569, 379, 829, 166, 248, 682, 278, 608, 530, 159, 0, 315, 959, 609], [868, 625, 547, 587, 665, 239, 808, 426, 304, 406, 700, 769, 74, 960, 128, 573, 226, 465, 482, 353, 686, 214, 354, 66, 455, 847, 821, 523, 286, 669, 689, 709, 846, 774, 749, 163, 62, 650, 28, 965, 679, 498, 485, 261, 35, 901, 735, 385, 450, 532, 79, 535, 324, 292, 312, 963, 75, 360, 253, 499, 501, 540, 946, 918, 915, 729, 567, 569, 379, 829, 166, 248, 682, 278, 608, 530, 159, 0, 315, 959, 609], [], []]
